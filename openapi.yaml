openapi: 3.0.2
info:
    title: Mediaconnect API Reference
    version: 14.10.2021
    description: >-
        # Introduction

        ConnectID is a solution for user authentication, authorization and payment for web pages and apps.
        ConnectID is made by Mediaconnect AS.


        ### Parties


        The main parties using ConnectID are:


        * **Partners**: The organization publishing a web site, an app, a newspaper, a magazine, a newsletter
        or any other information users shall have access to. A partner will often have only one site, but may
        have many.

        * **Clients**: A client is a third-party website or app that uses ConnectID. A client may serve
        information for one or more newspapers, magazines, newsletters or other similar products. It may also
        have discussion forums and other services a user is able to access. The information may be available
        without a login or require a login. It may be available free or only if paid for. The services
        described here makes login (authentication) and user authorization available to a site to make it able
        to present only the authorized information to any user. Each client must have a unique clientId.

        * **Users**: Any end user with access to information. This may be a reader, a subscriber or someone
        who orders something. It may also be someone who takes part in a discussion and where it necessary to
        log in before posting.


        ## Versioning and changelog


        ### Versioning  

        The services will be regularly upgraded. As a general rule this should not be an issue for the client.
        All existing elements will be present in new versions. New elements may be added. Your application may
        safely ignore new elements.


        If there are major changes to a service it will normally be developed as a new endpoint with the new /
        changed functionality. The old version will be available to other clients that are not upgraded to the
        latest version. New clients should always use the newest version.


        Services may be dropped if there are no known clients using it or if the service is not compatible
        with changes to the core system. Client developers will be notified if this should happen.


        ### Changelog


        We have a webpage to show the changes on this API-documentation. You can see the changelog on
        [Mediaconnect API changelog](https://doc.mediaconnect.no/doc/ConnectID/change_log.html).



        ## Knowlegde Base


        We have described how to use the APIs for some use cases on our [Knowlegde
        Base](https://mediaconnect.document360.io/). Here you may read about: 

        * How to send a order by using our APIs 

        * How we support the use of Google analytics



        ## ConnectID specifications


        ### URLs


        ConnectID can be used with new domain servers, which one have better names and link structure. For now
        there are two different servers for Norway and Sweden.


        * connectid.no

        * connectid.se


        There are currently two types of servers in use, namely the loginServer and the apiServer.


        **loginServer**

        * Production: https://connectid.no/user/ or https://connectid.se/user/

        * Test: https://api-test.mediaconnect.no/login/ (Note the /login/ path at the end)


        **apiServer**

        * Production: https://api.mediaconnect.no/capi/

        * Test: https://api-test.mediaconnect.no/capi/



        ### Configuration for new client in ConnectID


        The minimum configuration to create a new client in ConnectID are listed below:


        * Client logo

        * Client background

        * Name

        * Name description

        * Homepage URL

        * Customer Care phone number

        * Customer Care e-mail address

        * Product

        * Subscription terms url

        * User terms url


        #### Client Logo


        Its very important that client logo is in a good quality. Best if has transparency when needed.
        Acceptable formats are:


        * .svg

        * .png

        * .jpg


        Dimension of the logo image should be at least (for best view):


        * width: 318 px

        * height: 64 px


        #### Client background

        In ConnectID client can customize background that is displayed behind the gui. It should be ratter big
        like 2835x2126 px. Background is displayed as a “cover” for whole window. Information about size and
        way to display are specified in custom.css.


        **custom.css**:


        It is possible to introduce new look using custom.css. Here can be override all other styles,
        background images, fonts etc. which one are used in standard login.css.


        **Default custom.css**:


        ```css

        .customerNumberExplanationLabel { font-weight: bold; }

        .customerNumberExplanationAnswer { margin-top:5px; display: block; }

        .acceptTermsLabel { display: inline; }

        .acceptTermsLabel INPUT { margin-left:30px; }


        .customerNumberExplanation { margin: 1em 0; }

        .customerNumberExplanationImage { height:50px; width: 150px;
            background-color: #ddd; border: 2px #888 dashed; display:block; }

        .guiVersion2 body {
            background-size: cover;
            background-position: center center;
            background-repeat: no-repeat;
            background-image: url(./connectid_background_oslo.jpg);
        }

        ```


        For example can be easy changed colors of the headings…


        ```css

        .guiVersion2 .heading {

            text-align:center; font-size:150%;
            border-color: #029675;
            border-width: 1px 0;
            border-style: solid;
            color: #029675;
            padding: 16px 0;
            font-weight: normal;
        }

        .guiVersion1 .heading { display:none; }


        ```


        # About OAuth 2.0


        OAuth is an open standard to authorization. OAuth provides client applications a ‘secure delegated
        access’ to server resources on behalf of a resource owner. It specifies a process for resource owners
        to authorize third-party access to their server resources without sharing their credentials.


        A technical specification of OAuth 2.0 is described in the standard [RFC
        6749](https://tools.ietf.org/html/rfc6749). A non-technical simple specification is given in this
        [guide](https://medium.com/@darutk/the-simplest-guide-to-oauth-2-0-8c71bd9a15bb) and
        [Wikipedia](https://en.wikipedia.org/wiki/OAuth).


        ### Authorization endpoint


        This endpoint ensures that the user is logged in and has authorized access to the desired resource. It
        returns an authorization code as per the [OAuth specification](https://tools.ietf.org/html/rfc6749).
        If the user is not already logged in, she will be presented with the same GUI as the
        [loginUrl](#section/About-the-URLs/GUI:-loginUrl).


        ### Authorization grant types

        We are supporting two types of Authorization grant types:

        * Authorization code 

        * Client credentials (used for client API).


        ### Authorization code

        The authorization token is provided by the authorization endpoint and is used with the token endpoint
        to get an access token.


        ### Token endpoint

        The token endpoint is used by the client to obtain an access token by presenting its authorization
        grant or refresh token. The token endpoint is used with every authorization grant except for the
        implicit grant type (since an access token is issued directly). See the [OAuth
        specification](https://tools.ietf.org/html/rfc6749).



        ### Access token

        The access token is provided by the token endpoint and is required in order to access the ConnectID
        APIs.


        ### Extension grant types


        The OAuth2 specification allows for extension grant types to be created (see section 4.5 in [RFC
        6749](https://tools.ietf.org/html/rfc6749#section-4.5)). Mediaconnect has created a proprietary grant
        type to enable the token endpoint to issue tokens using the state code given by the [External Identity
        API](https://doc.mediaconnect.no/doc/ConnectID/#tag/External-Identity). In order to use the custom
        grant type the client must POST to the token endpoint using the following parameters (for External
        Identity API):


        | Parameter | Value | 

        | --- | --- |

        | grant_type | https://connectid.no/oauth2/grant_type/extid_code|

        | code |Set the value from the field `extidCode` in [External Identity
        API](https://doc.mediaconnect.no/doc/ConnectID/#tag/External-Identity)|


        The request should be sent as **application/x-www-form-urlencoded** and authenticated using **Basic
        Authentication**. The response is a standard OAuth2 response according to the specifications in [RFC
        6749](https://tools.ietf.org/html/rfc6749).


        # About the API


        The WebServices provided by Mediaconnect are developed as a REST-like API, see this [wikipedia article
        about REST](https://en.wikipedia.org/wiki/Representational_state_transfer) will give you an
        introduction to REST. Most modern programming languages have support for consuming REST services or
        have libraries that can be used.


        Access the API using the apiServer


        This server hosts the APIs. It has the following address:


        * **Production**: [https://api.mediaconnect.no/capi/](https://api.mediaconnect.no/capi/)   

        * **Test**: [https://api-test.mediaconnect.no/capi/](https://api.mediaconnect.no/capi/)


        # About the Client Mode


        Some API endpoints are available to the client without an access token created by the user. Instead
        the client can request an access token on behalf of the client itself. Some of the services described
        under this section may be cached by the client for a limited time. The resources will in many
        instances be quite static, but changes may happen at any time. A long cache timeout can be used if the
        partner can invalidate the cache on demand.


        Access the API using the apiServer:


        * **Production**: [https://api.mediaconnect.no/capi/](https://api.mediaconnect.no/capi/)  

        * **Test**: [https://api-test.mediaconnect.no/capi/](https://api.mediaconnect.no/capi/)


        # About the URLs


        GUI flows describe transitions between different GUI states. Some states visible to the user and wait
        for user input while other states are only for computation and immediately trigger events for
        transitioning to other states. Transitions between states are caused by events and flows may specifiy
        that certain states should be selected when certain events are triggered. If an event is not mentioned
        anywhere in the flow then the next state will be selected. For example, a continueEvent usually has no
        specific state connected to it but instead causes the next state to be selected.


        Sequences are fragments of a flow that can be re-used in different URLs, like the
        simpleAuthenticationSequence. Sequences and states can be used interchangably in flows, as both result
        in new events being triggered. The difference is that for a sequence, some events will be handled
        internally in the sequence. Only events which are not handled internally in the sequence will cause a
        transition to a state outside the sequence.


        Access the URLs using the [loginServer](#section/Introduction/ConnectID-specifications).


        ## About the Events


        Transitions between states in all URLs are caused by events. Gui flows may specify that certain states
        should be selected when certain events are triggered.


        Some events are handled internally in the gui sequence. Only events which are not handled internally
        in the sequence will cause a transition to a state outside the sequence.


        Events are logged internally to the database, are connected with user session. Events describe what
        user done when he visit ConnectID application. Some of the events are triggered by user, and some by
        the application, triggered automatically. Events that are triggered automatically are usually global
        events, for example when some error occurred, or something was happened that cause the state outside
        the sequence.


        Events can be also stored in external logging systems, such as
        [Kissmetrics](https://www.kissmetricshq.com/) or [Google
        Analytics](https://marketingplatform.google.com/about/analytics/). It needs some extra configuration.


        Can be possible that some events are not described here, and they are stored in
        [Kissmetrics](https://www.kissmetricshq.com/) or [Google
        Analytics](https://marketingplatform.google.com/about/analytics/). If so, it means that events was
        triggered by events/statistics tools themselves.


        Here is a list of Events, that are used in application. Each one has small description, to signalize
        what it mean in application. It is possible that different tools, can have not exactly same events
        names, they can starts with big letters or just be only the name without “Event”:


        <table>
          <tr>
            <th>Event</th>
            <th>Description</th>
          </tr>
          <tr>
            <td>startRegistrationEvent(1)</td>
            <td>This event signals that the user clicked the startRegistrationLink in the startLoginState. It leads to the registerSequence.</td>
          </tr>
          <tr>
            <td>sendVerificationCodeEvent(2)</td>
            <td>This event signals that user clicked button for sending of verification code</td>
          </tr>
          <tr>
            <td>verificationEvent(3)</td>
            <td>This event signals that user was done the verification using the verification code, or user was created and verification was not needed.</td>
          </tr>
          <tr>
            <td>verifyCredentialsEvent(4)</td>
            <td>This event signals that user was verified with password, actually not used.</td>
          </tr>
          <tr>
            <td>setPasswordEvent(5)</td>
            <td>This event occurs when user saves the password.</td>
          </tr>
          <tr>
            <td>searchForSubscriberEvent(6)</td>
            <td>This event signals that was done search for subscriber, that gui try to match user credential with the customer in Connect.</td>
          </tr>
          <tr>
            <td>prepareCreateSubscriberEvent(7)</td>
            <td>This event signals that the user wants to create a new subscription.</td>
          </tr>
          <tr>
            <td>createSubscriberEvent(8)</td>
            <td>This event signals that new subscription was created.</td>
          </tr>
          <tr>
            <td>paymentAcceptedEvent(9)</td>
            <td>This event signals that the user clicked the submitPaymentButton in the dibsPaymentState and the payment was successful.</td>
          </tr>
          <tr>
            <td>paymentFailedEvent(10)</td>
            <td>This event signals that the user clicked the submitPaymentButton in the dibsPaymentState but the payment failed.</td>
          </tr>
          <tr>
            <td>paymentCancelledEvent(11)</td>
            <td>This event signals that the user clicked the cancelPaymentButton in the dibsPaymentState.</td>
          </tr>
          <tr>
            <td>paymentInitEvent(12)</td>
            <td>This events signals that user wants to pay for subscription.</td>
          </tr>
          <tr>
            <td>sendEmailToCustomerServiceEvent(13)</td>
            <td>This events says that something goes wrong, and user clicks the sendEmailToCustomerServiceButton.</td>
          </tr>
          <tr>
            <td>startApplicationEvent(14)</td>
            <td>This event signals that application is starting.</td>
          </tr>
          <tr>
            <td>navigateAwayEvent(15)</td>
            <td>User navigates away from the login page without logging in.</td>
          </tr>
          <tr>
            <td>openLinkInOtherFrameEvent(16)</td>
            <td>User opens a specific link in another frame.</td>
          </tr>
          <tr>
            <td>programmaticLoginEvent(17)</td>
            <td>This events obscures when user was allready logged in, or has remember me cookie, and login with password is not needed.</td>
          </tr>
          <tr>
            <td>loginEvent(18)</td>
            <td>This event is triggered when the user clicks the loginButton.</td>
          </tr>
          <tr>
            <td>setCustomerNumberEvent(19)</td>
            <td>The customer number is set on the user.</td>
          </tr>
          <tr>
            <td>errorEvent(20)</td>
            <td>This event signals that an error occurred.</td>
          </tr>
          <tr>
            <td>continueEvent(21)</td>
            <td>This is a generic event which signals that the next state in the sequence should be chosen.</td>
          </tr>
          <tr>
            <td>alreadyRegisteredEvent(22)</td>
            <td>This event is fired from checkAlreadyRegisteredState if the user is already a subscriber.</td>
          </tr>
          <tr>
            <td>notAlreadyRegisteredEvent(23)</td>
            <td>This event is fired from checkAlreadyRegisteredState if the user is not already a subscriber for the current client.</td>
          </tr>
          <tr>
            <td>termsAcceptedEvent(24)</td>
            <td>This event signals the the user has already accepted the user terms.</td>
          </tr>
          <tr>
            <td>termsNotAcceptedEvent(25)</td>
            <td>This event signals the the user has not already accepted the user terms.</td>
          </tr>
          <tr>
            <td>existingSubscriberFoundEvent(26)</td>
            <td>This event signals that a subscriber was found for the current search.</td>
          </tr>
          <tr>
            <td>existingSubscriberNotFoundEvent(27)</td>
            <td>This event signals that no subscriber was found for the current search.</td>
          </tr>
          <tr>
            <td>authenticateUsingVerificationCodeEvent(28)</td>
            <td>This event signals that the user should be asked to authenticate using a verification code.</td>
          </tr>
          <tr>
            <td>authenticateUsingPasswordEvent(29)</td>
            <td>This event signals that the user should be asked to authenticate using her password.</td>
          </tr>
          <tr>
            <td>notMeEvent(30)</td>
            <td>This event signals the wrong subscriber was found during a search.</td>
          </tr>
          <tr>
            <td>searchAgainEvent(31)</td>
            <td>This event signals that the user wants to search again (used when no result was found).</td>
          </tr>
          <tr>
            <td>startEvent(32)<br></td>
            <td>This event signals the start of the GUI.</td>
          </tr>
          <tr>
            <td>resetPasswordEvent(33)</td>
            <td>This event signals that the user clicked the resetPasswordLink in the startLoginState</td>
          </tr>
          <tr>
            <td>returnEvent(34)</td>
            <td>This event signals that user is just redirected to return url.</td>
          </tr>
          <tr>
            <td>skipSearchEvent(35)</td>
            <td>This event is fired from enterSearchFieldsState to skip the rest of the subscriberSearchSequence if the user is in the clientWelcomeSequence and a subscriber was not found by searching for credential and the user has not already clicked the notMeLink.</td>
          </tr>
          <tr>
            <td>payWithInvoiceEvent(36)</td>
            <td>This event signals that the user selected to pay by invoice in the prepareCreateSubscriberState.</td>
          </tr>
          <tr>
            <td>paymentNotRequiredEvent(37)</td>
            <td>This event signals that the user selected to pay by invoice in the prepareCreateSubscriberState.</td>
          </tr>
          <tr>
            <td>verificationLevelErrorEvent(38)</td>
            <td>This signals that user want to register with username that allready exist and needs additional verification.</td>
          </tr>
          <tr>
            <td>payWithSmsEvent(39)</td>
            <td>This event signals that the user selected to pay by sms in the prepareCreateSubscriberState.</td>
          </tr>
          <tr>
            <td>socialLoginSuccessfulEvent(40)</td>
            <td>This event signals that user was logged in into ConnectID using social provider login page</td>
          </tr>
          <tr>
            <td>authenticateForResetPasswordEvent(41)</td>
            <td>This event is no longer in use. Before signals that user want to reset password.</td>
          </tr>
          <tr>
            <td>smsPaymentWaitingCancelledEvent(42)</td>
            <td>This event signals that user cancel the payment with sms.</td>
          </tr>
          <tr>
            <td>setPositionEvent(43)</td>
            <td>This event is no longer in use. Before signals that after redirect was set sequence on given position.</td>
          </tr>
          <tr>
            <td>prepareCreateHAUserEvent(44)</td>
            <td>This event signals that the user wants to create a user account which is not tied to a subscription.</td>
          </tr>
          <tr>
            <td>authenticateUsingRepeatCredentialEvent(45)</td>
            <td>This event signals that user is making the authentication on low level, just typing the username correctly 2 times.</td>
          </tr>
          <tr>
            <td>authenticateMobileEmailAndSetPasswordEvent(46)</td>
            <td>This event signals that user want to create username with mobile and email that allready exist and both needs verification with verification code.</td>
          </tr>
          <tr>
            <td>authenticateMobileOrEmailAndSetPasswordEvent(47)</td>
            <td>This event signals that user want to create username with mobile and email that allready exist and email or mobile needs verification with verification code.</td>
          </tr>
          <tr>
            <td>mergeEvent(48)</td>
            <td>This event signals that user want to merge new username to actually logged in user.</td>
          </tr>
          <tr>
            <td>termsNotAcceptedErrorEvent(49)</td>
            <td>Event occurred when user is trying to login. User has password but has not accepted user terms. It is usually when user was created by Customer Service or comes by importing.</td>
          </tr>
          <tr>
            <td>twoFactorVerificationEvent(50)</td>
            <td>Event occurred when user has password but verification level is notVerified. It is specific error when user was imported or created with some errors.</td>
          </tr>
          <tr>
            <td>paymentErrorEvent(51)</td>
            <td>Event signals that occurred error during the payment.</td>
          </tr>
          <tr>
            <td>getConfigFieldsEvent(52)</td>
            <td>Events signals that fields was displayed for user to type info about users membership.</td>
          </tr>
          <tr>
            <td>searchForMembershipEvent(53)</td>
            <td>Event signals that search for Membership was done.</td>
          </tr>
          <tr>
            <td>membershipNotFoundEvent(54)</td>
            <td>Event signals that was not found any membership for this user.</td>
          </tr>
          <tr>
            <td>searchMembershipAgainEvent(55)</td>
            <td>Event signals that user click search again link to search for membership.</td>
          </tr>
        </table>


        ## GUI: createUserUrl


        You can redirect a user’s browser to this URL in order to ensure that the user has a ConnectID account
        and is logged in.


        If the user already is logged in with the specified credential, or the user already is logged in and
        no credential parameter is specified, then the user’s browser will immediately be redirected back to
        the returnUrl.


        Otherwise, the user is asked to log in using a one time password but can also log in using an existing
        ConnectID account or create a new account. The credential field will have the value of the credential
        parameter when the GUI is shown, but the user can edit this field and thus log in with a different
        credential.


        If the user already is logged in with a different credential then the user will be logged out from
        that credential and logged in with the new credential. If the user leaves the the remember me option
        checked then the rememberMeCookie for this client will be set according to the new credential. If the
        the user unchecks the the remember me option but a rememberMeCookie exists for this client then that
        cookie will be **not** be removed.


        This URL behaves similarly to the [loginUrl](#section/About-the-URLs/GUI:-loginUrl) but is better
        suited if it is likely that the user does not already have a ConnectID account.


        * **Server:** [loginServer](#section/Introduction/ConnectID-specifications)

        * **Relativ path:** createUser

        * **Method:** GET 


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>clientId</td>
            <td>The unique ID of the client, e.g. no.mediaconnect.test</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to on success (the user will be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>errorUrl</td>
            <td>A URL to redirect the user’s browser back to if something goes wrong (the user might not be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>credential</td>
            <td>If specified, the credential field will have this value when the GUI is shown but will still be editable by the user (however, no GUI will be shown if the user already is logged in with this credential or if the user already is logged in and this parameter is not specified)</td>
            <td></td>
          </tr>
          <tr>
            <td>credentialSubmit</td>
            <td>If this parameter is set (credentialSubmit=true) will be submit the form with credential given as credential parameter.</td>
            <td></td>
          </tr>
          <tr>
            <td>assumeNewUser</td>
            <td>If true then ask for verification code password first, if false then ask for account password first. Default true for this URL.</td>
            <td></td>
          </tr>
        </table></div>


        ## GUI: loginUrl


        You can redirect a user’s browser to this URL to let the user log in.


        If the user already is logged in with the specified credential, or the user already is logged in and
        no credential parameter is specified, then the user’s browser will immediately be redirected back to
        the returnUrl.


        Otherwise, this URL works just like the oauthAuthorizationEndpoint except that it does not return an
        oauth authentication code to the caller. The user can either log in using an existing ConnectID
        account or create a new account. The credential field will have the value of the credential parameter
        when the GUI is shown, but the user can edit this field and thus log in with a different credential.


        If the user already is logged in with a different credential then the user will be logged out from
        that credential and logged in with the new credential. If the user leaves the the rememberMeCheckbox
        checked then the rememberMeCookie for this client will be set according to the new credential. If the
        the user unchecks the the rememberMeCheckbox but a rememberMeCookie exists for this client then that
        cookie will be **not** be removed.


        This URL behaves like the createUserUrl but is better suited if it is likely that the user already has
        a ConnectID account.


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: login 

        * **Method**: GET 


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>clientId</td>
            <td>The unique ID of the client, e.g. no.mediaconnect.test</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to on success (the user will be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>errorUrl</td>
            <td>A URL to redirect the user’s browser back to if something goes wrong (the user might not be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>credential</td>
            <td>If specified, the credential field will have this value when the GUI is shown but will still be editable by the user (however, no GUI will be shown if the user already is logged in with this credential or if the user already is logged in and this parameter is not specified)</td>
            <td></td>
          </tr>
          <tr>
            <td>assumeNewUser</td>
            <td>If true then ask for verification code first, if false then ask for account password first. Default false for this URL.</td>
            <td></td>
          </tr>
        </table></div>


        ## URL: azure


        This url is used to setup an already logged in connectid user for azure active directory.

        This only works if the user is already logged in, there exists a configuration for azure active
        directory, if the user havent already registered for this service, that the user is registered in
        their respective azure active directory tenant.


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: azure/{id}?returnUrl={returnUrl}

        * **Method**: GET 


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>id</td>
            <td>The id for which is the configuration to use for this process.</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to. if success (the user will be logged in and validated for azure active directory access) this will be {returnUrl}/callback?azureStatus=success. If something went wrong (error occured) this will be {returnUrl}/callback?azureStatus=error.</td>
            <td>✔</td>
          </tr>
        </table></div>


        ## URL: logout


        You can redirect a user’s browser to this URL to log the user out. This will invalidate the user’s
        ConnectID session so that the user must log in on the next visit to this client (and to other clients
        which do not have rememberMeCookies).


        If the user did not uncheck the rememberMeCheckbox during a previous login to this client and
        therefore has a rememberMeCookie for this client then this rememberMeCookie will also be removed.


        However, rememberMeCookies for other clients will not be removed. If the user logs out from the client
        specified by the clientId parameter (let’s call that client A) but has a rememberMeCookie for another
        client (client B) and visits client B after logging out from client A then the user’s ConnectID
        session will be recreated. If the user then visits client A again before the ConnectID session expires
        (20 minutes) then the user will be automatically logged back in to client A.


        If a user is using a shared computer, for example in an internet cafe, and visits protected content
        belonging to two different clients (let’s call them A and B) within a period of time shorter than the
        ConnectID session duration (20 minutes) then the ConnectID login prompt will only be displayed for the
        first client (let’s call that client A). If the user does not uncheck the rememberMeCheckbox during
        login to client A then the user **must** remember to log out of client A before leaving the internet
        cafe to prevent the next user of the shared computer from gaining access to the ConnectID account.


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: logout   

        * **Method**: GET


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>clientId</td>
            <td>The unique ID of the client, e.g. no.mediaconnect.test</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to on success (the user will be logged in)<br></td>
            <td>✔</td>
          </tr>
          <tr>
            <td>errorUrl</td>
            <td>A URL to redirect the user’s browser back to if something goes wrong (the user might not be logged in)</td>
            <td>✔</td>
          </tr>
        </table></div>


        ## URL: order


        ![](https://img.shields.io/badge/Deprecated-yellow?style=for-the-badge)


        You can redirect a user’s browser to this URL to let the user order and pay for a new subscription or
        other product.


        If the user is not already logged in or the credential parameter is specified but the user is logged
        in with a different credential then the user will first be required to either log in or verify a
        credential using a one time password.


        The orderId parameter must be specified, and shall contain the order id returned from the Order API. 


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: order

        * **Method**: GET


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>clientId</td>
            <td>The unique ID of the client, e.g. no.mediaconnect.test</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to on success (the user will be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>errorUrl</td>
            <td>A URL to redirect the user’s browser back to if something goes wrong (the user might not be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>orderId</td>
            <td>The ID of an order already submitted to ConnectID using the Order API</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>credential</td>
            <td>If specified, the credential field will have this value when the GUI is shown but will still be editable by the user (however, the credential field will not be editable if the user already is logged in with this credential or if the user already is logged in and this parameter is not specified)</td>
            <td></td>
          </tr>
          <tr>
            <td>assumeNewUser</td>
            <td>If true then ask for verification code first, if false then ask for account password first. Default true for this URL.</td>
            <td></td>
          </tr>
        </table></div>


        ## URL: register


        You can redirect a user’s browser to this URL to let the user search for an existing subscription
        registered in Connect and tie the ConnectID user to that subscription.


        If the user is not already logged in or the credential parameter is specified but the user is logged
        in with a different credential then the user will first be required to either log in or verify a
        credential using a one time password.


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: register

        * **Method**: GET 


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>clientId</td>
            <td>The unique ID of the client, e.g. no.mediaconnect.test</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to on success (the user will be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>errorUrl</td>
            <td>A URL to redirect the user’s browser back to if something goes wrong (the user might not be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>credential</td>
            <td>If specified, the credential field will have this value when the GUI is shown but will still be editable by the user (however, the credential field will not be editable if the user already is logged in with this credential or if the user already is logged in and this parameter is not specified)</td>
            <td></td>
          </tr>
          <tr>
            <td>credentialSubmit</td>
            <td>If this parameter is set (credentialSubmit=true) will be submit the form with credential given as credential parameter.</td>
            <td></td>
          </tr>
        </table></div>


        ## URL: resetPassword


        You can redirect a user’s browser to this URL to let the user change password.


        If the user is not already logged in or the credential parameter is specified but the user is logged
        in with a different credential then the user will first be required to either log in or verify a
        credential using a one time password.


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: resetPassword 

        * **Method**: GET 


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>clientId</td>
            <td>The unique ID of the client, e.g. no.mediaconnect.test</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to on success (the user will be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>errorUrl</td>
            <td>A URL to redirect the user’s browser back to if something goes wrong (the user might not be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>credential</td>
            <td>If specified, the credential field will have this value when the GUI is shown but will still be editable by the user (however, the credential field will not be editable if the user already is logged in with this credential or if the user already is logged in and this parameter is not specified)</td>
            <td></td>
          </tr>
          <tr>
            <td>credentialSubmit</td>
            <td>If this parameter is set (credentialSubmit=true) will be submit the form with credential given as credential parameter.</td>
            <td></td>
          </tr>
        </table></div>


        ## URL: merge


        You can redirect a user’s browser to this URL to let the user merge with other user/credential or just
        add other e-mail or mobile phone as new login credential. After that user will have possibility to log
        in with added credential using same password.


        User shall be already logged in, but if the user is not already logged in will be prompt to login.


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: merge

        * **Method**: GET 


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>clientId</td>
            <td>The unique ID of the client, e.g. no.mediaconnect.test</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to on success (the user will be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>errorUrl</td>
            <td>A URL to redirect the user’s browser back to if something goes wrong (the user might not be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>abortUrl<br></td>
            <td>A URL to redirect the user’s browser back to if user click on close widget (X) in gui, close component is not visible as default.</td>
            <td></td>
          </tr>
          <tr>
            <td>heading</td>
            <td>It is possible to change the default heading in the gui, just with sending this param in url</td>
            <td></td>
          </tr>
          <tr>
            <td>credentialType</td>
            <td>If type is not specified then is allowed to put e-mail or mobile, if is set to A - then e-mail is required, if B - mobile is required. Texts on gui will change depends of this credential type.</td>
            <td></td>
          </tr>
        </table></div>


        ## URL: activateMembership


        You can redirect a user’s browser to this URL to let the user search for an existing subscription
        registered in other partner membership system and tie the ConnectID user to that subscription.


        If the user is not already logged in or the credential parameter is specified but the user is logged
        in with a different credential then the user will first be required to either log in or verify a
        credential using a one time password.


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: activateMembership

        * **Method**: GET 


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>clientId</td>
            <td>The unique ID of the client, e.g. no.mediaconnect.test</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to on success (the user will be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>errorUrl</td>
            <td>A URL to redirect the user’s browser back to if something goes wrong (the user might not be logged in)
            <td>✔</td>
          </tr>
            <tr>
            <td>credentialType</td>
            <td> If specified, the credential field will have this value when the GUI is shown but will still be editable by the user (however, the credential field will not be editable if the user already is logged in with this credential or if the user already is logged in and this parameter is not specified)</td> 
            <td></td>
          </tr>
        </table></div>


        ## URL: fulfillment

        After placing an order to the [client order API](#operation/orderclient) or [order
        API](#operation/order), redirect the user to this URL for fulfillment. Depending on the payment method
        on the order the user will be further redirected to an external payment service.


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: fulfillment 

        * **Method**: GET 


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>orderId</td>
            <td>Order ID returned from the order API. Can be list of orders, but orders need to be from same merchant group id and with same paymentMethod - creditcard.</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>The (absolute) URL the user will be redirected to after the fulfillment is completed.</td>
            <td>✔</td>
          </tr>
        </table></div>


        **Return URL parameters**:


        When the user is redirected a parameter is added to the return URL. The parameter is fulfillmentStatus
        and will it will have one of the following values:


        <div class="tg-wrap"><table>
          <tr>
            <th>fulfillmentStatus value</th>
            <th>Description</th>
          </tr>
          <tr>
            <td>success</td>
            <td>Indicating that the fulfillment was successful.</td>
          </tr>
          <tr>
            <td>cancel</td>
            <td>Some payment methods allow the user to cancel the payment.</td>
          </tr>
          <tr>
            <td>error</td>
            <td>An error occured.</td>
          </tr>
          <tr>
            <td>unknown</td>
            <td>Unknown status, is only when was send with more than one order, and something goes wrong with at least one of them.</td>
          </tr>
        </table></div>


        ## GUI: loginCheckUrl


        Check whether a user is already logged in and redirect to either the returnUrl if she is logged in or
        to the errorUrl if she is not.


        **This URL be used in many ways**:


        * Redirect here before displaying a page to known whether to display on your page that the user is
        logged on or not. 

        * Send an ajax request to let javascript on your page know wheter the user is logged in. 

        * Use as the src parameter in a `<script>` tag to load different script depending on whether the user
        is logged in, e.g. `<script
        src="https:\/\/connectid.no\/user\/loginCheck\?returnUrl=https:\/\/mymagazine.no\/logged_in.js&errorUrl=https:\/\/mymagazine.no/not_logged_in.js"
        />`


        If the user is logged in, you can redirect to the oauthAuthorizationEndpoint to get a token to use
        with the API calls in order to find out the customer number and other information.


        This URL will look for the user’s rememberMeCookie and automatically log in the user if it is valid.


        This URL will extend the lifetime of the user’s session, preventing automatic logout in the same way
        as if the user had visited the GUI.


        If the user already is logged in with the specified credential, or the user already is logged in and
        no credential parameter is specified, then the user’s browser will immediately be redirected back to
        the returnUrl.


        If the user is not logged in but has a valid remember me cookie, then the user will be logged in and
        the user’s browser will immediately be redirected back to the returnUrl.


        If the user is not logged in and does not have a valid remember me cookie, then user’s browser will
        immediately be redirected back to the errorUrl.


        * **Server**: [loginServer](#section/Introduction/ConnectID-specifications)  

        * **Relativ path**: loginCheck  

        * **Method**: GET  


        <div class="tg-wrap"><table>
          <tr>
            <th>URL parameters</th>
            <th>Description</th>
            <th>Required</th>
          </tr>
          <tr>
            <td>clientId</td>
            <td>The unique ID of the client, e.g. no.mediaconnect.test</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>returnUrl</td>
            <td>A URL to redirect the user’s browser back to on success (the user will be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>errorUrl</td>
            <td>A URL to redirect the user’s browser back to if something goes wrong (the user might not be logged in)</td>
            <td>✔</td>
          </tr>
          <tr>
            <td>credential</td>
            <td>If specified, the “already logged in” check will be done with this credential</td>
            <td></td>
          </tr>
        </table></div>
    contact:
        email: support@mediaconnect.no
    x-logo:
        url: 'https://doc.mediaconnect.no/doc/ConnectID/logo.png'
        backgroundColor: '#FFFFFF'
        altText: MediaConnect AS
servers:
    -
        url: 'https://api.mediaconnect.no/capi/'
        description: Production
    -
        url: 'https://api-test.mediaconnect.no/capi/'
        description: Test
paths:
    /v1/customer/address:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangeAddress-request'
                        examples:
                            Example 1:
                                value:
                                    product: CO27409
                                    changeType: update
                                    id: 3
                                    careOfAddress: ''
                                    streetAddress: Grubbegata
                                    streetNumber: 6
                                    entrance: A
                                    floor: '6'
                                    postalCode: 0179
                                    postalPlace: Oslo
                                    postalAddress: Postboks 265 Økern
                                    postalAddressPostalCode: '0510'
                                    postalAddressPostalPlace: Oslo
                                    countryCode: 'NO'
                                    period:
                                        startTime: 1559393560000
                                        endTime: 1562158360000
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/ChangeAddress-request'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<addressRequest>\r\n    <product>CO27409</product>\r\n    <changeType>update</changeType>\r\n    <id>3</id>\r\n    <streetAddress>Grubbegata</streetAddress>\r\n    <streetNumber>6</streetNumber>\r\n    <entrance>A</entrance>\r\n    <floor>6</floor>\r\n    <postalCode>0179</postalCode>\r\n    <postalPlace>Oslo</postalPlace>\r\n    <postalAddress>Postboks 265 Økern</postalAddress>\r\n    <postalAddressPostalCode>0510</postalAddressPostalCode>\r\n    <postalAddressPostalPlace>Oslo</postalAddressPostalPlace>\r\n    <countryCode>NO</countryCode>\r\n    <period>\r\n        <startTime>2019-06-01T14:52:40+0000</startTime>\r\n        <endTime>2019-07-03T14:52:40+0000</endTime>\r\n    </period>\r\n</addressRequest>"
                required: true
            tags:
                - Address
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListAddress'
                            examples:
                                Example 1:
                                    value:
                                        addressList:
                                            -
                                                product: CO27409
                                                addressType: delivery
                                                id: 3
                                                careOfAddress: ''
                                                streetAddress: Grubbegata
                                                streetNumber: 6
                                                entrance: A
                                                floor: 6
                                                suite: ''
                                                postalCode: 0179
                                                postalPlace: Oslo
                                                postalAddress: Postboks 265 Økern
                                                postalAddressPostalCode: '0510'
                                                postalAddressPostalPlace: Oslo
                                                countryCode: 'NO'
                                                period:
                                                    startTime: 1559393560000
                                                    endTime: 1562158360000
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-ListAddress'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<addressResponse>\r\n    <addressList>\r\n        <product>CO27409</product>\r\n        <addressType>delivery</addressType>\r\n        <id>3</id>\r\n         <streetAddress>Grubbegata</streetAddress>\r\n        <streetNumber>6</streetNumber>\r\n        <entrance>A</entrance>\r\n        <floor>6</floor>\r\n        <postalCode>0179</postalCode>\r\n        <postalPlace>Oslo</postalPlace>\r\n        <postalAddress>Postboks 265 Økern</postalAddress>\r\n        <postalAddressPostalCode>0510</postalAddressPostalCode>\r\n        <postalAddressPostalPlace>Oslo</postalAddressPostalPlace>\r\n        <countryCode>NO</countryCode>\r\n        <period>\r\n            <startTime>2019-06-01T14:52:40+0000</startTime>\r\n            <endTime>2019-07-03T14:52:40+0000</endTime>\r\n        </period>\r\n    </addressList>\r\n</addressResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Change addresses
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Address API for current and future temporary or permanent address changes.
    /v1/client/customer/search:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchCustomerClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    productCode: CO27409
                                    companyName: Company International Ltd
                                    departmentName: Support
                                    firstName: Ola
                                    middleName: Fjordstrand
                                    lastName: Nordmann
                                    careOfAddress: ''
                                    streetAddress: Grubbegata
                                    streetNumber: 6
                                    entrance: A
                                    postalCode: 0179
                                    postalPlace: Oslo
                                    countryCode: 'NO'
                                    phoneNumber: '+4712345678'
                                    email: ola.nordmann@company.com
            tags:
                - Customer
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchCustomerClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        customers:
                                            -
                                                customerNumber: 563457
                                                companyName: Company International Ltd
                                                departmentName: Support
                                                firstName: Ola
                                                middleName: Fjordstrand
                                                lastName: Nordmann
                                                streetAddress: Grubbegata
                                                streetNumber: 6
                                                postalCode: 0179
                                                postalPlace: Oslo
                                                postalAddress: Postboks 265 Økern
                                                postalAddressPostalCode: '0510'
                                                postalAddressPostalPlace: Oslo
                                                countryCode: 'NO'
                                                emails:
                                                    email:
                                                        - ola.nordmann@company.com
                                                        - ola.nordmann@hotmail.no
                                                phoneNumbers:
                                                    -
                                                        phoneNumber: '+4712345678'
                                                        isMobile: true
                                                    -
                                                        phoneNumber: '+4723339100'
                                                        isMobile: false
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '403':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error403'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: VALIDATION
                                        errorMessage: Try to narrow down your search with more information.
                    description: Forbidden - Number of customers in response are limited to 5 customers
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: "Internal Server Error\r\n"
            deprecated: false
            summary: Search customer - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n\r\nThis API allows to retrieve information about one or more customers.\r\n\r\nSearch results may be one or more customers, depending on the arguments used and what is actually present in the database.\r\n\r\nIn combination with customer number and name, you can also fill in the product. This will \"shrink\" search result.\r\n\r\n\r\n**Requirements for fields**:\r\n\r\nSearching by name or address require following fields to be set in request:\r\n\r\n* `companyName` or `lastName`\r\n* `streetAddress`\r\n* `postalCode` or `postalPlace`\r\n\r\nOtherwise one of following fields to be set in request:\r\n\r\n* `phoneNumber`  \r\n* `email`\r\n\r\n\r\n**Response**\r\n\r\nThe response is a list of customers found. The list is empty if no customer is found.\r\n\r\nNumber of customers in response are limited to 5 customers."
    /v1/client/credential/customers/check:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckCustomerNumberClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    credentials:
                                        -
                                            - '+4787654321'
                                            - kari.nordmann@gmail.com
            tags:
                - Customer
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckCustomerNumberClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        customers:
                                            -
                                                credential: '+4787654321'
                                                customerNumber: 327492
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            operationId: Id
            summary: Check customer number - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                This API will return a list with customers from input with credentials.
    /v1/client/rewardId/check:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckRewardClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    rewardId: '1'
                                    rewardPartnerId: 2674
            tags:
                - Reward
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckRewardClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        customerNumber: 327492
                                        product: '29452'
                                        rewardId: '1'
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Check reward - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                This API will return a response if there exists a reward that correlates with input.
    /v1/customer/ticket/remove:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RemoveTicket-request'
                        examples:
                            Example 1:
                                value:
                                    merchantId: '45723589'
                                    ticket: 4v8nwodhfja
            tags:
                - Ticket
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveTicket-response'
                            examples:
                                Example 1:
                                    value:
                                        success: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Remove ticket
            description: >
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.
    /v1/customer/privacy/consentEvent:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Model-RegisterConsentEvent-request'
                        examples:
                            Example 1:
                                value:
                                    consentId: 1
                                    consentTarget: editoral
                                    consentScope: telephone
                                    subject: '563457'
                                    subjectType: CONNECT
                                    source: Selfservice
                                    action: true
                                    eventTime: 1560277312000
                                    data: dHJ1ZQ==
            tags:
                - Consent
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-RegisterConsentEvent-response'
                            examples:
                                Example 1:
                                    value:
                                        consentId: '1'
                                        subject: '563457'
                                        subjectType: CONNECT
                                        consentEventId: '1'
                                        created: 1560963388000
                                        source: Selfservice
                                        action: true
                                        childEvents:
                                            consentEventId: '1'
                                            consentId: '1'
                                            created: 1560363712000
                                            action: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Register consent event
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nAPI for granting consent.\r\n\r\nIt is required to provide either a `consentId`, or both `target` and `scope`. If all three fields are included, they are required to refer to the same consent."
    /v1/client/customer/privacy/consentEvent:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Model-RegisterConsentEvent-request'
                        examples:
                            Example 1:
                                value:
                                    consentId: 1
                                    consentTarget: editoral
                                    consentScope: telephone
                                    subject: '563457'
                                    subjectType: CONNECT
                                    source: Selfservice
                                    action: true
                                    eventTime: 1560277312000
                                    data: dHJ1ZQ==
            tags:
                - Consent
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-RegisterConsentEvent-response'
                            examples:
                                Example 1:
                                    value:
                                        consentId: '1'
                                        subject: '563457'
                                        subjectType: CONNECT
                                        consentEventId: '1'
                                        created: 1560963388000
                                        source: Selfservice
                                        action: true
                                        childEvents:
                                            consentEventId: '1'
                                            consentId: '1'
                                            created: 1560363712000
                                            action: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Register consent event - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n\r\nAPI for granting consent.\r\n\r\nIt is required to provide either a `consentId`, or both `target` and `scope`. If all three fields are included, they are required to refer to the same consent."
    /v1/customer/pbm:
        get:
            tags:
                - Permission/Shield
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value:
                                        channels:
                                            -
                                                type: SHIELD
                                                value: TM
                                            -
                                                type: SHIELD
                                                value: DM
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<global>\r\n    <channel>\r\n        <value>TM</value>\r\n        <type>SHIELD</type>\r\n    </channel>\r\n    <channel>\r\n        <value>DM</value>\r\n        <type>SHIELD</type>\r\n    </channel>\r\n</global>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List global permissions
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                This API can be used to get the current permissions and shields for the customer. It may also
                be used to update the data.
    /v1/product/delivery/complaint:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterComplaint-request'
                        examples:
                            Example 1:
                                value:
                                    product: CO27409
                                    issue: 2019-63
                                    complaintAction: '14'
                                    createPostDistribution: true
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/RegisterComplaint-request'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<complaintRequest>\r\n    <product>CO27409</product>\r\n    <issue>2019-63</issue>\r\n    <complaintAction>14</complaintAction>\r\n    <createPostDistribution>true</createPostDistribution>\r\n</complaintRequest>"
            tags:
                - Complaint
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Complaint-response'
                            examples:
                                Example 1:
                                    value:
                                        product: CO27409
                                        complaintActions:
                                            -
                                                complaintCode: '14'
                                                description: Wrong Magazine
                                                postDistribution: 'Y'
                                        complaints:
                                            -
                                                issue: 2019-63
                                                existingComplaint: 'N'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Complaint-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<complaintResponse>\r\n    <product>CO27409</product>\r\n    <complaintActions>\r\n        <complaintAction>\r\n            <complaintCode>14</complaintCode>\r\n            <description>Wrong Magazine</description>\r\n            <postDistribution>Y</postDistribution>\r\n        </complaintAction>\r\n    </complaintActions>\r\n    <complaints>\r\n        <complaint>\r\n            <issue>2019-63</issue>\r\n            <existingComplaint>N</existingComplaint>\r\n        </complaint>\r\n    </complaints>\r\n</complaintResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Register complaint
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nAPI is used to register a new complaint."
    '/v1/product/stop/delivery/delete/{id}':
        post:
            tags:
                - DeliveryStop
            parameters:
                -
                    name: id
                    description: The unique id for the stop you want to delete.
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveDeliveryStops-response'
                            examples:
                                Example 1:
                                    value:
                                        deliveryStops:
                                            -
                                                id: 1
                                                product: CO27409
                                                stopTime: 1561121761000
                                                stopEndTime: 1561985761000
                                                stopType: temporary
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/RemoveDeliveryStops-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<deliveryStopRequest>\r\n    <deliveryStop>\r\n        <id>1</id>\r\n        <product>CO27409</product>\r\n        <stopTime>2019-06-21T14:56:01.000+0000</stopTime>\r\n        <stopEndTime>2019-07-01T14:56:01.000+0000</stopEndTime>\r\n        <stopType>temporary</stopType>\r\n    </deliveryStop>\r\n</deliveryStopRequest>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Remove delivery stops
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                It is possible to delete a future stopp, i.e the stop periode can not be activated.
    /v1/product/stop/delivery:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterDeliveryStops-request'
                        examples:
                            Example 1:
                                value:
                                    id: 1
                                    product: CO27409
                                    stopTime: 1561121761000
                                    stopEndTime: 1561985761000
                                    stopType: temporary
                                    deliveryStopChannel: BS
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/RegisterDeliveryStops-request'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<deliveryStopResponse>\r\n    <deliveryStops>\r\n        <deliveryStop>\r\n            <id>1</id>\r\n            <product>CO27409</product>\r\n            <stopTime>2019-06-21T14:56:01.000+0000</stopTime>\r\n            <stopEndTime>2019-07-01T14:56:01.000+0000</stopEndTime>\r\n            <stopType>temporary</stopType>\r\n            <deliveryStopChannel>BS</deliveryStopChannel>\r\n        </deliveryStop>\r\n    </deliveryStops>\r\n</deliveryStopResponse>"
            tags:
                - DeliveryStop
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterDeliveryStops-response'
                            examples:
                                Example 1:
                                    value:
                                        deliveryStops:
                                            -
                                                id: 1
                                                product: CO27409
                                                stopTime: 1561121761000
                                                stopEndTime: 1561985761000
                                                stopType: temporary
                                                deliveryStopChannel: BS
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/RegisterDeliveryStops-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<deliveryStopResponse>\r\n    <deliveryStops>\r\n        <deliveryStop>\r\n            <id>1</id>\r\n            <product>CO27409</product>\r\n            <stopTime>2019-06-21T14:56:01.000+0000</stopTime>\r\n            <stopEndTime>2019-07-01T14:56:01.000+0000</stopEndTime>\r\n            <stopType>temporary</stopType>\r\n             <deliveryStopChannel>BS</deliveryStopChannel>\r\n        </deliveryStop>\r\n    </deliveryStops>\r\n</deliveryStopResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: ' Internal Server Error'
            deprecated: false
            summary: Register delivery stops
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Stop API for stopping delivery to a customer permanently or temporary.
    /v1/customer/product:
        get:
            tags:
                - Product
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProductsClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        products:
                                            -
                                                partnerId: 65
                                                productId: CO27409
                                                accessType: B
                                                startTime: 1560336440000
                                                endTime: 1591958840000
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListProductsClientMode-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<products>\r\n    <product>\r\n       <partnerId>65</partnerId>\r\n       <productId>CO27409</productId>\r\n       <accessType>B</accessType>\r\n        <startTime>2019-06-12T12:47:20.000+02:00</startTime>\r\n        <endTime>2020-06-12T12:47:20.000+02:00</endTime>\r\n    </product>\r\n</products>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List products
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nThis API returns a list of all products the user has access to, either because she currently is a subscriber or a member or because she once was a subscriber or member.\r\n\r\nFor each product extra attributes are included giving the access rights the user has to the content of that product.\r\n\r\nThis list may of course be empty in which case the user has no special access rights to any product related content.\r\n\r\nThe list may contain different types of products:\r\n\r\n* A magazine or newspaper subscribed to\r\n* A membership in a club, group, organization or similar\r\n* A service the user receives\r\n* A book series subscribed to\r\n* Anything similar that in Connect is handled as a so called Subscription/Membership/Service type product."
    '/v1/client/subscription/{customerNumber}':
        get:
            tags:
                - Subscription
            parameters:
                -
                    name: customerNumber
                    description: Customer number
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSubscriptionsClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        subscriptions:
                                            -
                                                product: CO27409
                                                stopped: false
                                                startTime: 1560336440000
                                                endTime: 1591958840000
                                                paid: true
                                                priceDetails:
                                                    couponCode: WMDigi
                                                    couponNumber: 5223
                                                    discountfromfullsm: 0
                                                    promotion: NC
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListSubscriptionsClientMode-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<subscriptions>\r\n    <subscription>\r\n        <product>CO27409</product>\r\n        <stopped>false</stopped>\r\n        <startTime>2019-06-12T12:47:20+01:00</startTime>\r\n        <endTime>2020-06-12T12:47:20+01:00</endTime>\r\n        <paid>true</paid>\r\n        <priceDetails>\r\n           <couponCode>WMDigi</couponCode>\r\n         <couponNumber>5223</couponNumber>\r\n         <discountfromfullsm>0.00</discountfromfullsm>\r\n         <promotion>NC</promotion>\r\n       </priceDetails>\r\n    </subscription>\r\n</subscriptions>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List subscriptions - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n\r\nThis API will return a list of all products the user subscribes to with their status.\r\n\r\nThis list may be empty in cases where the user has no subcriptions in the system."
    /v1/subscription/:
        get:
            tags:
                - Subscription
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSubscriptions-response'
                            examples:
                                Example 1:
                                    value:
                                        subscriptions:
                                            -
                                                product: CO27409
                                                stopped: false
                                                startTime: 1560336440000
                                                endTime: 1591958840000
                                                paid: true
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListSubscriptions-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<subscriptionRequest>\r\n    <product>CO27409</product>\r\n    <stopped>false</stopped>\r\n    <startTime>2019-06-12T12:47:20+0100</startTime>\r\n    <endTime>2020-06-12T12:47:20+0100</endTime>\r\n    <paid>true</paid>\r\n</subscriptionRequest>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List subscriptions
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nThis API will return a list of all products the user subscribes to with their status.\r\n\r\nThis list may be empty in cases where the user has no subcriptions in the system."
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StartSubscription-request'
                        examples:
                            Example 1:
                                value:
                                    companyCode: '468979834'
                                    product: CO27409
                                    startTime: 1560336440000
                                    endTime: 1591958840000
                                    copies: '1'
                                    couponCode: WMDigi
                                    couponNumber: 5223
                                    customerReference: hnas
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/StartSubscription-request'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<subscriptionRequest>\r\n    <companyCode>468979834</companyCode>\r\n    <product>CO27409</product>\r\n    <startTime>2019-06-12T12:47:20+00:00</startTime>\r\n    <endTime>2020-07-12T12:47:20+00:00</endTime>\r\n    <copies>1</copies>\r\n    <couponCode>WMDigi</couponCode>\r\n    <couponNumber>5223</couponNumber>\r\n    <customerReference>hnas</customerReference>\r\n</subscriptionRequest>"
            tags:
                - Subscription
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StartSubscription-response'
                            examples:
                                Example 1:
                                    value:
                                        status: OK
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/StartSubscription-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<subscriptionResponse>\r\n    <status>OK</status>\r\n</subscriptionResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Start subscription
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Start a recurring product using the provided parameters.
    /v1/client/recruitment:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRecruitmentClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    product: CO27409
                                    campaign: Spring2019
                                    recruiter:
                                        name:
                                            firstName: Kari
                                            middleName: Snøhaug
                                            lastName: Nordmann
                                        address:
                                            streetAddress: Osloveien
                                            streetNumber: 12
                                            entrance: B
                                            floor: 3
                                            postalCode: '0101'
                                            postalPlace: Oslo
                                            postalAddress: Postboks 6
                                            postalAddressPostalCode: '0216'
                                            postalAddressPostalPlace: Oslo
                                            countryCode: 'NO'
                                        phoneNumber: '+4787654321'
                                        email: kari.nordmann@gmail.com
                                    recruitmentPremiumPreferences:
                                        -
                                            companyCode: '468979834'
                                            product: HS3829
                                            preferenceNumber: 1
                                    recruitments:
                                        -
                                            name:
                                                firstName: Ola
                                                middleName: Fjordstrand
                                                lastName: Nordmann
                                                companyName: Company International Ltd
                                                departmentName: Support
                                            address:
                                                streetAddress: Grubbegata
                                                streetNumber: 6
                                                entrance: A
                                                floor: 6
                                                postalCode: 0179
                                                postalPlace: Oslo
                                                postalAddress: Postboks 265 Økern
                                                postalAddressPostalCode: '0510'
                                                postalAddressPostalPlace: Oslo
                                                countryCode: 'NO'
                                            couponCode: WMDigi
                                            couponNumber: 5223
                                            amount: 1
                                            quantity: 1
                                            phoneNumber: '+4712345678'
                                            email: ola.nordmann@company.com
            tags:
                - Recruitment
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-RegisterRecruitment-response'
                            examples:
                                Example 1:
                                    value:
                                        status: ok
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Register recruitment - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                Use this API to register recruitments. The recruiter and the persons recruited are created in
                Connect. A recruitment is processed as an order in Connect.
    /v1/recruitment:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRecruitments-request'
                        examples:
                            Example 1:
                                value:
                                    product: CO27409
                                    campaign: Spring2019
                                    recruiter:
                                        name:
                                            firstName: Kari
                                            middleName: Snøhaug
                                            lastName: Nordmann
                                        address:
                                            streetAddress: Osloveien
                                            streetNumber: 12
                                            entrance: B
                                            floor: 3
                                            postalCode: '0101'
                                            postalPlace: Oslo
                                            postalAddress: Postboks 6
                                            postalAddressPostalCode: '0216'
                                            postalAddressPostalPlace: Oslo
                                            countryCode: 'NO'
                                        phoneNumber: '+4787654321'
                                        email: kari.nordmann@gmail.com
                                    recruitmentPremiumPreferences:
                                        -
                                            companyCode: '468979834'
                                            product: HS3829
                                            preferenceNumber: 1
                                    recruitments:
                                        -
                                            name:
                                                firstName: Ola
                                                middleName: Fjordstrand
                                                lastName: Nordmann
                                                companyName: Company International Ltd
                                                departmentName: Support
                                            address:
                                                streetAddress: Grubbegata
                                                streetNumber: 6
                                                entrance: A
                                                floor: 6
                                                postalCode: 0179
                                                postalPlace: Oslo
                                                postalAddress: Postboks 265 Økern
                                                postalAddressPostalCode: '0510'
                                                postalAddressPostalPlace: Oslo
                                                countryCode: 'NO'
                                            companyCode: '5646903690'
                                            product: HS3829
                                            preferenceNumber: '1'
                                            phoneNumber: '+4712345678'
                                            email: ola.nordmann@company.com
            tags:
                - Recruitment
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-RegisterRecruitment-response'
                            examples:
                                Example 1:
                                    value:
                                        status: ok
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Register recruitments
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nUse this API to register recruitments. The recruiter and the persons recruited are created in Connect. A recruitment is processed as an order in Connect.\r\n\r\n* If the recruiter, i.e the ConnectID user, is registered to a customer in Connect, we use this customer as the recruiter. In this case we ignore the recruiter information given in the request (i.e name and address).\r\n* Otherwise the recruiter is created in Connect if no matching customer is found."
    /v1/customer/access:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckAccess-request'
                        examples:
                            Example 1:
                                value:
                                    product: CO27409
                                    articleId: '578943434'
                                    domain: mediaconnect.no
                                    ip: 127.0.0.1
                                    categoryType: SWISJ
                                    accessAzureAd: true
                                    accessAidFamily: true
            tags:
                - Access
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckAccess-response'
                            examples:
                                Example 1:
                                    value:
                                        access: true
                                        accesses:
                                            -
                                                access: false
                                                accessLevel: C
                                                accessType: D
                                            -
                                                access: true
                                                accessLevel: B
                                                accessType: A
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Check access
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nThis API returns accesses for given user.\r\n\r\nThe access can be given on few levels. User can have access base on `ip`, `domain`, `product` subscription, specific `article` or `categoryType` that was bought."
    /v1/client/credential/check:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckCredentialClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    credentials:
                                        -
                                            - '+4787654321'
                                            - kari.nordmann@gmail.com
            tags:
                - Credential
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckCredentialClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        credentials:
                                            -
                                                credential: '+4787654321'
                                                credentialType: mobile
                                                canLogIn: true
                                                hasCustomerNumber: true
                                            -
                                                credential: kari.nordmann@gmail.com
                                                credentialType: email
                                                canLogIn: true
                                                hasCustomerNumber: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Check credential - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.



                Credential check
    /v1/customer/metadata:
        get:
            tags:
                - Metadata
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Metadata'
                            examples:
                                Example 1:
                                    value:
                                        foo: some text
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List metadata
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                General API for storing metadata. The client can add custom data not found in
                ConnectID/Connect. By using GET-request you may see the data that are stored.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Model-Metadata'
                        examples:
                            Example 1:
                                value:
                                    foo: some text
            tags:
                - Metadata
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Metadata'
                            examples:
                                Example 1:
                                    value:
                                        foo: some text
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: ' Internal Server Error'
            deprecated: false
            summary: Change metadata
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                General API for storing metadata. The client can add custom data not found in
                ConnectID/Connect. Clients will have to send the complete JSON-object when updating.
        delete:
            tags:
                - Metadata
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Metadata'
                            examples:
                                Example 1:
                                    value:
                                        foo: some text
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Remove metadata
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                General API for storing metadata. The client can add custom data not found in
                ConnectID/Connect. Clients will have to send the complete JSON-object when updating. Use this
                API to delete the objects.
    /v1/customer/profile:
        get:
            tags:
                - Profile
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCustomerProfile-response'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 6ba7b8149dad11d180b400c04fd430c8
                                        loginCredential:
                                            credential: ola.nordmann@hotmail.no
                                            credentialType: email
                                            verificationLevel: verificationCode
                                        userCredentials:
                                            -
                                                credential: ola.nordmann@hotmail.no
                                                credentialType: email
                                                verificationLevel: verificationCode
                                            -
                                                credential: '+4723339100'
                                                credentialType: phone
                                                verificationLevel: verificationCode
                                        customerNumber: 563457
                                        name:
                                            firstName: Ola
                                            middleName: Fjordstrand
                                            lastName: Nordmann
                                            companyName: Company International Ltd
                                            departmentName: Support
                                        phoneNumbers:
                                            -
                                                phoneNumber: '+4723339100'
                                                phoneNumberType: company
                                            -
                                                phoneNumber: '+4712345678'
                                                phoneNumberType: personal
                                        emails:
                                            - ola.nordmann@hotmail.no
                                            - ola.nordmann@company.com
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListCustomerProfile-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<profile>\r\n    <uniqueId>6ba7b8149dad11d180b400c04fd430c8</uniqueId>\r\n    <loginCredential>\r\n        <credential>ola.nordmann@hotmail.no</credential>\r\n        <credentialType>email</credentialType>\r\n        <verificationLevel>verificationCode</verificationLevel>\r\n    </loginCredential>\r\n    <userCredentials>\r\n        <userCredential>\r\n            <credential>ola.nordmann@hotmail.no</credential>\r\n            <credentialType>email</credentialType>\r\n            <verificationLevel>verificationCode</verificationLevel>\r\n        </userCredential>\r\n        <userCredential>\r\n            <credential>+4723339100</credential>\r\n            <credentialType>phone</credentialType>\r\n            <verificationLevel>verificationCode</verificationLevel>\r\n        </userCredential>\r\n    </userCredentials>\r\n    <customerNumber>563457</customerNumber>\r\n    <name>\r\n        <firstName>Ola</firstName>\r\n        <middleName>Fjordstrand</middleName>\r\n        <lastName>Nordmann</lastName>\r\n        <companyName>Company International Ltd</companyName>\r\n        <departmentName>Support</departmentName>    \r\n    </name>\r\n    <phoneNumbers>\r\n        <phoneNumber>\r\n            <phoneNumber>+4723339100</phoneNumber>\r\n            <phoneNumberType>company</phoneNumberType>\r\n        </phoneNumber>\r\n        <phoneNumber>\r\n            <phoneNumber>+4712345678</phoneNumber>\r\n            <phoneNumberType>personal</phoneNumberType>\r\n        </phoneNumber>\r\n    </phoneNumbers>\r\n    <emails>\r\n        <email>ola.nordmann@hotmail.no</email>\r\n        <email>ola.nordmann@company.com</email>\r\n    </emails>\r\n</profile>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: true
            summary: List customer profile
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Profile API for extracting basic information about the useraccount and the customer if the
                user is currently connected to a `customerNumber` in the partner datastore.
    /v1/client/extid:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterExternalIdClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    externalId: 59cb6372-d3db-11e5-ab30-625662870761
                                    credentialType: D
            tags:
                - External Identity
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ExternalIdentity-response'
                            examples:
                                Example 1:
                                    value:
                                        credential: 'AID:59cb6372-d3db-11e5-ab30-625662870761'
                                        externalId: 59cb6372-d3db-11e5-ab30-625662870761
                                        credentialType: D
                                        canLogin: true
                                        customerNumber: 327492
                                        uniqueId: 681b86aac2cf44ecb13eeb48cb3a7b7d
                                        enabled: true
                                        newUser: false
                                        extidCode: eyJhbGciOiJIUzUxMiJ9.....eyJjdCI6IkRfQ
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Register external Id - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n\r\nThis API is to ensure that the external Id is registered in ConnectID. The API will do a look up for the existence of the `externalId` in ConnectID. In addition, a check will be performed to see if the external id is connected to a customer in Connect. First time this API is called for an external id, a user handle will be created in ConnectID and the data stored on the external id will be returned. `customerNumber` is only returned if was set previously on this `externalId`. The API returns basic information associated for the external id.\r\n\r\n"
    /v1/client/extid/customer:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterCustomerClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    externalId: 59cb6372-d3db-11e5-ab30-625662870761
                                    credentialType: D
                                    customerNumber: 327492
            tags:
                - External Identity
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ExternalIdentity-response'
                            examples:
                                Example 1:
                                    value:
                                        credential: 'AID:59cb6372-d3db-11e5-ab30-625662870761'
                                        externalId: 59cb6372-d3db-11e5-ab30-625662870761
                                        credentialType: D
                                        canLogin: false
                                        uniqueId: 681b86aac2cf44ecb13eeb48cb3a7b7d
                                        enabled: false
                                        newUser: true
                                        extidCode: eyJhbGciOiJIUzUxMiJ9.....eyJjdCI6IkRfQ
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Register customer - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                This API is used to associate a Connect customer with an external id previously registered in
                ConnectID. Based on this data, the user handle will be created or returned if it already
                exists. This API returns the same response data as the register external id API. It can be
                sent as the next API call after register external id API, to associate `externalId` with
                `customerNumber` in Connect.
    /v1/customer/message/:
        get:
            tags:
                - Message
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Message-response'
                            examples:
                                Example 1:
                                    value:
                                        messages:
                                            -
                                                id: 6
                                                date: 1560763683000
                                                direction: IN
                                                messageSubject: creditcard
                                                messageContent: Can I pay with creditcard?
                                            -
                                                id: 6
                                                date: 1560855204000
                                                direction: OUT
                                                messageSubject: creditcard
                                                messageContent: 'Yes, you can.'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Message-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<messageResponse>\r\n    <messages>\r\n        <messages>\r\n            <id>6</id>\r\n            <date>2019-06-17T12:06:48.361+01:00</date>\r\n            <direction>IN</direction>\r\n            <messageSubject>creditcard</messageSubject>\r\n            <messageContent>Can I pay with Creditcard?</messageContent>\r\n        </messages>\r\n        <messages>\r\n            <id>6</id>\r\n            <date>2019-06-18T08:46:48.361+01:00</date>\r\n            <direction>OUT</direction>\r\n            <messageSubject>creditcard</messageSubject>\r\n            <messageContent>Yes, you can.</messageContent>\r\n        </messages>\r\n    </messages>\r\n</messageResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List messages
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Message API for send message to customer service and to see messages created by customer in
                self service.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendMessage-request'
                        examples:
                            Example 1:
                                value:
                                    product: CO27409
                                    messageSubject: creditcard
                                    messageContent: Can I pay with creditcard?
                            Example 2:
                                value:
                                    product: CO27409
                                    caseType: B
                                    messageSubject: cancel
                                    messageContent: Cancel my subscription
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/SendMessage-request'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<messageRequest>\r\n    <product>CO27409</product>\r\n    <messageSubject>creditcard</messageSubject>\r\n    <messageContent>Can I pay with creditcard?</messageContent>\r\n</messageRequest>"
                            Example 2:
                                value: |-
                                    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                    <messageRequest>
                                        <product>CO27409</product>
                                        <caseType>B</caseType>
                                        <messageSubject>cancel</messageSubject>
                                        <messageContent>Cancel my subscription</messageContent>
                                    </messageRequest>
            tags:
                - Message
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Message-response'
                            examples:
                                Example 1:
                                    value:
                                        messages:
                                            -
                                                id: 6
                                                date: 1560763683000
                                                direction: IN
                                                messageSubject: creditcard
                                                messageContent: Can I pay with creditcard?
                                            -
                                                id: 6
                                                date: 1560855204000
                                                direction: OUT
                                                messageSubject: creditcard
                                                messageContent: 'Yes, you can.'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Message-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<messageResponse>\r\n    <messages>\r\n        <messages>\r\n            <id>6</id>\r\n            <date>2019-06-17T12:06:48.361+01:00</date>\r\n            <direction>IN</direction>\r\n            <messageSubject>creditcard</messageSubject>\r\n            <messageContent>Can I pay with Creditcard?</messageContent>\r\n        </messages>\r\n        <messages>\r\n            <id>6</id>\r\n            <date>2019-06-18T08:46:48.361+01:00</date>\r\n            <direction>OUT</direction>\r\n            <messageSubject>creditcard</messageSubject>\r\n            <messageContent>Yes, you can.</messageContent>\r\n        </messages>\r\n    </messages>\r\n</messageResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Send message
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Message API for send message to customer service.
    /v1/client/stock/update:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangeStocksClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    updates:
                                        -
                                            warehouseId: 120
                                            warehouseProductId: House24
                                            stockQuantity: '26'
                                            status: expired
            tags:
                - Stock
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChangeStocksClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        status: ok
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Change stocks - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n"
    /v1/article/price/check:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckArticlePrice-request'
                        examples:
                            Example 1:
                                value:
                                    category: CO3759
                                    companyCode: '23467892'
                                    product: CO27409
            tags:
                - Article
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckArticlePrice-response'
                            examples:
                                Example 1:
                                    value:
                                        articlePriceResponse:
                                            -
                                                categoryCode: CO3759
                                                price: 39.9
                    description: OK
                '500':
                    description: Internal Server Error
            deprecated: false
            summary: Check article price
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                This API returns the price for an given article.
    /v1/client/access:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckAccessClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    domain: mediaconnect.no
                                    ip: 127.0.0.1
                                    product: TOTT
            tags:
                - Access
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckAccessClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        access: true
                                        accesses:
                                            -
                                                access: false
                                                accessLevel: C
                                                accessType: D
                                            -
                                                access: true
                                                accessLevel: D
                                                accessType: E
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Check access - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n\r\nThis API returns accesses for given user.\r\n\r\nThe access can be given on few levels. User can have access base on `ip` and `domain`."
    '/v1/customer/invoiceaddress/{product}':
        get:
            tags:
                - InvoiceAddress
            parameters:
                -
                    name: product
                    description: product code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInvoiceAddress-response'
                            examples:
                                Example 1:
                                    value:
                                        name:
                                            firstName: Ola
                                            middleName: Fjordstrand
                                            lastName: Nordmann
                                            companyName: Company International Ltd
                                            departmentName: Support
                                        address:
                                            streetAddress: Grubbegata
                                            streetNumber: 6
                                            entrance: A
                                            floor: 6
                                            postalCode: 0179
                                            postalPlace: Oslo
                                            postalAddress: Postboks 265 Økern
                                            postalAddressPostalCode: '0510'
                                            postalAddressPostalPlace: Oslo
                                            countryCode: 'NO'
                                        payerSameAsCustomer: true
                                        payerCustomerNumber: 563457
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListInvoiceAddress-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<invoiceAddress>\r\n  <name>\r\n    <firstName>Ola</firstName>\r\n    <middleName>Fjordstrand</middleName>\r\n    <lastName>Nordmann</lastName>\r\n    <companyName>Company International Ltd</companyName>\r\n    <departmentName>Support</departmentName>\r\n  </name>\r\n  <address>\r\n    <streetAddress>Grubbegata</streetAddress>\r\n    <streetNumber>6</streetNumber>\r\n    <entrance>A</entrance>\r\n    <floor>6</floor>\r\n    <postalCode>0179</postalCode>\r\n    <postalPlace>Oslo</postalPlace>\r\n    <postalAddress>Postboks 265 Økern</postalAddress>\r\n    <postalAddressPostalCode>0510</postalAddressPostalCode>\r\n    <postalAddressPostalPlace>Oslo</postalAddressPostalPlace>\r\n    <countryCode>NO</countryCode>\r\n  </address>\r\n  <payerSameAsCustomer>true</payerSameAsCustomer>\r\n  <payerCustomerNumber>563457</payerCustomerNumber>\r\n</invoiceAddress>\r\n"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List invoice address
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nAddress API for invoice address of given product for customer.\r\n\r\nIn response is returned address for customer to a specific product.\r\n\r\nNB! All data is read from sync data in ConnectID."
    '/v1/product/payment/{product}':
        get:
            tags:
                - Payment
            parameters:
                -
                    name: product
                    description: product code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPaymentMethods-response'
                            examples:
                                Example 1:
                                    value:
                                        paymentMethodResponse:
                                            -
                                                paymentMethod: recurringPayment
                                                isActive: 'Y'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListPaymentMethods-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<paymentMethodResponse>\r\n    <paymentMethods>\r\n        <paymentMethod>\r\n            <paymentMethod>recurringPayment</paymentMethod>\r\n            <isActive>Y</isActive>\r\n        </paymentMethod>\r\n    </paymentMethods>\r\n</paymentMethodResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List payment methods
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Payment API for get existing pay method, see possible pay method and changing pay method.
    '/v1/client/coupon/{productId}':
        get:
            tags:
                - Coupon
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCouponClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        coupons:
                                            -
                                                couponCode: DataNews
                                                couponNumber: 27
                                                startTime: 1529405788000
                                                endTime: 1534676188000
                                                description: Students only
                                                couponPrice: '299'
                                                extraProducts:
                                                    -
                                                        productId: '29542'
                                                        description: Newspaper about ICT
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List coupon - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                This API returns all coupons for a subscription product. You may also use this API to check
                the price at the next renewal.
        parameters:
            -
                name: productId
                description: Product id/code
                schema:
                    maxLength: 12
                    type: string
                in: path
                required: true
    '/v1/product/delivery/complaint/{product}':
        get:
            tags:
                - Complaint
            parameters:
                -
                    name: product
                    description: productcode
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Complaint-response'
                            examples:
                                Example 1:
                                    value:
                                        product: CO27409
                                        complaintActions:
                                            -
                                                complaintCode: '14'
                                                description: Wrong Magazine
                                                postDistribution: 'Y'
                                        complaints:
                                            -
                                                issue: 2019-63
                                                existingComplaint: 'N'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Complaint-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<complaintResponse>\r\n    <product>CO27409</product>\r\n    <complaintActions>\r\n        <complaintAction>\r\n            <complaintCode>14</complaintCode>\r\n            <description>Wrong Magazine</description>\r\n            <postDistribution>Y</postDistribution>\r\n        </complaintAction>\r\n    </complaintActions>\r\n    <complaints>\r\n        <complaint>\r\n            <issue>2019-63</issue>\r\n            <existingComplaint>N</existingComplaint>\r\n        </complaint>\r\n    </complaints>\r\n</complaintResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List complaints
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Complaint API used to get possible complaints.
    '/v1/product/delivery/{product}':
        get:
            tags:
                - Delivery
            parameters:
                -
                    name: product
                    description: product code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListNextDistributions-response'
                            examples:
                                Example 1:
                                    value:
                                        nextDistribution:
                                            issue: 2019-07
                                            deliveryDate: 1562277600000
                                            distributionDate: 1562018400000
                                        nextDelivery:
                                            issue: 2019-06
                                            deliveryDate: 1559772000000
                                            distributionDate: 1559512800000
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListNextDistributions-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<deliveryResponse>\r\n  <nextDistribution>\r\n    <issue>2019-07</issue>\r\n    <deliveryDate>2019-07-05T00:00:00.000+0000</deliveryDate>\r\n    <distributionDate>2019-07-02T00:00:00.000+0000</distributionDate>\r\n  </nextDistribution>\r\n  <nextDelivery>\r\n      <issue>2019-06</issue>\r\n      <deliveryDate>2019-06-06T00:00:00.000+0000</deliveryDate>\r\n      <distributionDate>2019-06-03T00:00:00.000+0000</distributionDate>\r\n  </nextDelivery>\r\n</deliveryResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List next distributions
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Delivery API for extracting basic information about next issue to be distributed for a given
                product.
    '/v1/client/delivery/{product}':
        get:
            tags:
                - Delivery
            parameters:
                -
                    name: product
                    description: product code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListNextDistributionsClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        nextDistribution:
                                            issue: 2019-07
                                            deliveryDate: 1562277600000
                                            distributionDate: 1562018400000
                                        nextDelivery:
                                            issue: 2019-06
                                            deliveryDate: 1559772000000
                                            distributionDate: 1559512800000
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List next distributions - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                Delivery API for extracting basic information about next issue to be distributed for a given
                product.
    '/v1/product/stop/delivery/{product}':
        get:
            tags:
                - DeliveryStop
            parameters:
                -
                    name: product
                    description: Product code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeliveryStops-response'
                            examples:
                                Example 1:
                                    value:
                                        deliveryStops:
                                            -
                                                id: 1
                                                product: CO27409
                                                stopTime: 1561121761000
                                                stopEndTime: 1561985761000
                                                stopType: temporary
                                                deliveryStopChannel: BS
                                                deliveryStopReason: CS
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListDeliveryStops-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<deliveryStopResponse>\r\n    <deliveryStops>\r\n        <deliveryStop>\r\n            <id>1</id>\r\n            <product>CO27409</product>\r\n            <stopTime>2019-06-21T14:56:01.000+0000</stopTime>\r\n            <stopEndTime>2019-07-01T14:56:01.000+0000</stopEndTime>\r\n            <stopType>temporary</stopType>\r\n            <deliveryStopChannel>BS</deliveryStopChannel>\r\n            <deliveryStopReason>CS</deliveryStopReason>\r\n        </deliveryStop>\r\n    </deliveryStops>\r\n</deliveryStopResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List delivery stops
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                API is used to get stop registered on customer.
    '/v1/customer/status/{product}':
        get:
            tags:
                - Status
            parameters:
                -
                    name: product
                    description: Product code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListStatusMessage-response'
                            examples:
                                Example 1:
                                    value:
                                        statusMessages:
                                            -
                                                statusMessage: 'Dear Customer, thanks for your feedback.'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListStatusMessage-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<statusResponse>\r\n    <statusMessages>\r\n       <statusMessage>Dear Customer, thanks for your feedback.</statusMessage>\r\n    </statusMessages>\r\n</statusResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List status messages
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Status API to get various status messages for customer and product.
    /v1/customer/privacy/access:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessPrivateData-request'
                        examples:
                            Example 1:
                                value:
                                    sendReceipt: true
            tags:
                - Consent
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ConsentAccess-response'
                            examples:
                                Example 1:
                                    value:
                                        success: true
                                        receiptSend: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Access private data
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                API for granting access to customer private data. Due this API will be created workflow case
                in Connect.
    /v1/customer/privacy/erasure:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RemovePrivateData-request'
                        examples:
                            Example 1:
                                value:
                                    sendReceipt: true
            tags:
                - Consent
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ConsentAccess-response'
                            examples:
                                Example 1:
                                    value:
                                        success: true
                                        receiptSend: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Remove private data
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                API to erasure customer private data. Due this API will be created workflow case in Connect.
    '/v1/customer/pbm/{enterpriseCode}':
        get:
            tags:
                - Permission/Shield
            parameters:
                -
                    name: enterpriseCode
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value:
                                        channels:
                                            -
                                                type: PERMISSION
                                                value: DM
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<enterprise>\r\n    <channel>\r\n        <value>DM</value>\r\n        <type>PERMISSION</type>\r\n    </channel>\r\n</enterprise>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List enterprise permissions
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Model-Pbm-channels'
                        examples:
                            Example 1:
                                value:
                                    channels:
                                        -
                                            type: PERMISSION
                                            value: DM
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Model-Pbm-channels'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<enterprise>\r\n    <channel>\r\n        <value>DM</value>\r\n        <type>PERMISSION</type>\r\n    </channel>\r\n</enterprise>"
            tags:
                - Permission/Shield
            parameters:
                -
                    name: enterpriseCode
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value:
                                        channels:
                                            -
                                                type: PERMISSION
                                                value: DM
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<enterprise>\r\n    <channel>\r\n        <value>DM</value>\r\n        <type>PERMISSION</type>\r\n    </channel>\r\n</enterprise>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Change enterprise permissions
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.
    '/v1/customer/pbm/{enterpriseCode}/{orderType}':
        get:
            tags:
                - Permission/Shield
            parameters:
                -
                    name: enterpriseCode
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
                -
                    name: orderType
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value:
                                        channels:
                                            -
                                                type: PERMISSION
                                                value: DM
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<orderType>\r\n    <channel>\r\n        <value>DM</value>\r\n        <type>PERMISSION</type>\r\n    </channel>\r\n</orderType>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List ordertype permissions
            description: >
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Model-Pbm-channels'
                        examples:
                            Example 1:
                                value:
                                    channels:
                                        -
                                            type: PERMISSION
                                            value: DM
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Model-Pbm-channels'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<orderType>\r\n    <channel>\r\n        <value>DM</value>\r\n        <type>PERMISSION</type>\r\n    </channel>\r\n</orderType>"
            tags:
                - Permission/Shield
            parameters:
                -
                    name: enterpriseCode
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
                -
                    name: orderType
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value:
                                        channels:
                                            -
                                                type: PERMISSION
                                                value: DM
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Pbm-channels'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<orderType>\r\n    <channel>\r\n        <value>DM</value>\r\n        <type>PERMISSION</type>\r\n    </channel>\r\n</orderType>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Change ordertype permissions
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.
    /v1/client/shield/ordertype:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckShieldOrdertypeClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    enterpriseCode: '468979834'
                                    orderTypeCode: '56235'
                                    channel: DM
                                    credential: '+4712345678'
            tags:
                - Permission/Shield
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-CheckShieldClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        count: 0
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Check shield ordertype - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                Use this API to shield customer(s) on order type level by a given `credential`. The
                `credential` is used to find customers. All customers found will be shielded against activity
                on specified `channel`.
    /v1/client/shield/enterprise:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckShieldEnterpriseClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    enterpriseCode: '468979834'
                                    channel: TM
                                    credential: '+4712345678'
            tags:
                - Permission/Shield
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-CheckShieldClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        count: 0
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Check shield enterprise - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n"
    '/v1/customer/privacy/{enterpriseCode}':
        get:
            tags:
                - Privacy
            parameters:
                -
                    name: enterpriseCode
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-PrivacyEnterprise'
                            examples:
                                Example 1:
                                    value:
                                        permission:
                                            -
                                                purpose: DM
                                            -
                                                purpose: EM
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-PrivacyEnterprise'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<enterprisePrivacy>\r\n    <permission>\r\n        <purpose>DM</purpose>\r\n        <purpose>EM</purpose>\r\n    </permission>\r\n</enterprisePrivacy>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List privacy enterprise
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Model-PrivacyEnterprise'
                        examples:
                            Example 1:
                                value:
                                    permission:
                                        -
                                            purpose: DM
                                        -
                                            purpose: EM
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Model-PrivacyEnterprise'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<enterprisePrivacy>\r\n    <permission>\r\n        <purpose>DM</purpose>\r\n        <purpose>EM</purpose>\r\n    </permission>\r\n</enterprisePrivacy>"
            tags:
                - Privacy
            parameters:
                -
                    name: enterpriseCode
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-PrivacyEnterprise'
                            examples:
                                Example 1:
                                    value:
                                        permission:
                                            -
                                                purpose: DM
                                            -
                                                purpose: EM
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-PrivacyEnterprise'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<enterprisePrivacy>\r\n    <permission>\r\n        <purpose>DM</purpose>\r\n        <purpose>EM</purpose>\r\n    </permission>\r\n</enterprisePrivacy>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Change privacy enterprise
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Privacy permissions exists on two levels: enterprise and ordertype. This API can be used to
                get the current privacy permissions the customer. It may also be used to update the data.
    '/v1/customer/privacy/{enterpriseCode}/{orderType}':
        get:
            tags:
                - Privacy
            parameters:
                -
                    name: enterpriseCode
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
                -
                    name: orderType
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-PrivacyOrdertype'
                            examples:
                                Example 1:
                                    value:
                                        permission:
                                            -
                                                purpose: DM
                                            -
                                                purpose: EM
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-PrivacyOrdertype'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<orderTypePrivacy>\r\n    <permission>\r\n        <purpose>DM</purpose>\r\n        <purpose>EM</purpose>\r\n    </permission>\r\n</orderTypePrivacy>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List privacy ordertype
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                This API can be used to get the current privacy permissions the customer.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Model-PrivacyOrdertype'
                        examples:
                            Example 1:
                                value:
                                    permission:
                                        -
                                            purpose: DM
                                        -
                                            purpose: EM
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Model-PrivacyOrdertype'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<orderTypePrivacy>\r\n    <permission>\r\n        <purpose>DM</purpose>\r\n        <purpose>EM</purpose>\r\n    </permission>\r\n</orderTypePrivacy>"
            tags:
                - Privacy
            parameters:
                -
                    name: enterpriseCode
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
                -
                    name: orderType
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-PrivacyOrdertype'
                            examples:
                                Example 1:
                                    value:
                                        permission:
                                            -
                                                purpose: DM
                                            -
                                                purpose: EM
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-PrivacyOrdertype'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<orderTypePrivacy>\r\n    <permission>\r\n        <purpose>DM</purpose>\r\n        <purpose>EM</purpose>\r\n    </permission>\r\n</orderTypePrivacy>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Change privacy ordertype
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                This API can be used to update the current privacy permissions for the customer.
    '/v1/recruitment/{campaign}':
        get:
            tags:
                - Recruitment
            parameters:
                -
                    name: campaign
                    description: Campaign code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
                -
                    name: limit
                    description: Limit the number of records returned.
                    schema:
                        default: 50
                        type: integer
                    in: query
                -
                    name: offset
                    description: 'Offset the records returned. '
                    schema:
                        default: 0
                        type: integer
                    in: query
                -
                    name: ascending
                    description: Sort ascending or descending.
                    schema:
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRecruitment-response'
                            examples:
                                Example 1:
                                    value:
                                        points: 50
                                        products:
                                            - CO27409
                                        recruitments:
                                            -
                                                recruited: 1
                                                product: CO27409
                                                active: true
                                                recruitedDate: 1560524119000
                                                points: 42
                                        unverifiedRecruitments:
                                            -
                                                product: '29452'
                                                recruitedDate: 1550678119000
                                                status: error
                                                points: 34
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListRecruitment-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<recruitmentInfo>\r\n    <points>50</points>\r\n    <products>\r\n        <product>CO27409</product>\r\n    </products>\r\n    <recruitments>\r\n        <recruitment>\r\n            <recruited>1</recruited>\r\n            <product>CO27409</product>\r\n            <active>true</active>\r\n            <recruitedDate>2019-06-14T16:55:19.000+00:00</recruitedDate>\r\n            <points>42</points>\r\n        </recruitment>\r\n    </recruitments>\r\n    <unverifiedRecruitments>\r\n        <unverifiedRecruitment>\r\n            <product>29452</product>\r\n            <recruitedDate>2019-02-20T16:55:19.000+00:00</recruitedDate>\r\n             <status>error</status>\r\n            <points>34</points>\r\n        </unverifiedRecruitment>\r\n    </unverifiedRecruitments>\r\n</recruitmentInfo>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List recruitments
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Use this API for fetching existing recruitments and available points.
    '/v1/recruitment/premium/{campaign}':
        get:
            tags:
                - Recruitment
            parameters:
                -
                    name: campaign
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-PremiumRecruitments-response'
                            examples:
                                Example 1:
                                    value:
                                        recruitmentPremiumPreferences:
                                            -
                                                companyCode: '468979834'
                                                product: HS3829
                                                preferenceNumber: 3
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-PremiumRecruitments-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<recruitmentPremiumPreferences>\r\n    <recruitmentPremiumPreference>\r\n        <companyCode>468979834</companyCode>\r\n        <product>HS3829</product>\r\n        <preferenceNumber>3</preferenceNumber>\r\n    </recruitmentPremiumPreference>\r\n</recruitmentPremiumPreferences>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List premium recruitments
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Use this API for premium preferences.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangePremiumRecruitments-request'
                        examples:
                            Example 1:
                                value:
                                    recruitmentPremiumPreferences:
                                        companyCode: '468979834'
                                        product: HS3829
                                        preferenceNumber: 3
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/ChangePremiumRecruitments-request'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<recruitmentPremiumPreferences>\r\n    <recruitmentPremiumPreference>\r\n        <companyCode>468979834</companyCode>\r\n        <product>HS3829</product>\r\n        <preferenceNumber>3</preferenceNumber>\r\n    </recruitmentPremiumPreference>\r\n</recruitmentPremiumPreferences>"
            tags:
                - Recruitment
            parameters:
                -
                    name: campaign
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-PremiumRecruitments-response'
                            examples:
                                Example 1:
                                    value:
                                        recruitmentPremiumPreferences:
                                            -
                                                companyCode: '468979834'
                                                product: HS3829
                                                preferenceNumber: 3
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-PremiumRecruitments-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<recruitmentPremiumPreferences>\r\n    <recruitmentPremiumPreference>\r\n        <companyCode>468979834</companyCode>\r\n        <product>HS3829</product>\r\n        <preferenceNumber>3</preferenceNumber>\r\n    </recruitmentPremiumPreference>\r\n</recruitmentPremiumPreferences>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Change premium recruitments
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nUse this API for updating premium preference.\r\n\r\nNOTE: Any existing premium preferences on this recruiter will be deleted before the POSTed data is applied"
    '/v1/client/recruitment/campaign/{campaignCode}':
        get:
            tags:
                - RecruitmentCampaign
            parameters:
                -
                    name: campaignCode
                    description: Specific campaign code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
                -
                    name: companyCode
                    description: Specific company code
                    schema:
                        maxLength: 12
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRecruitmentCampaignClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        campaignCode: Sprint2019
                                        campaignDescription: The offer for spring 2019.
                                        companyItems:
                                            -
                                                companyCode: Important News International
                                                companyDescription: A group of Companies
                                        productItems:
                                            -
                                                productCode: CO27409
                                                productDescription: ''
                                                points: 50
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List recruitment campaign - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                Use this API for getting recruitment campaign info. You will get points for each recruitment
                product whitin a company and a recruit campaign.
    '/v1/client/stat/renew/{companyCode}/{orderType}/{endDate}/{days}':
        get:
            tags:
                - Statistics
            parameters:
                -
                    name: companyCode
                    description: Company code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
                -
                    name: endDate
                    description: 'Last date for the statistics (format: yyyy-MM-dd)'
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: days
                    description: 'Number of days to include (max: 90)'
                    schema:
                        maximum: 90
                        type: integer
                    in: path
                    required: true
                -
                    name: orderType
                    description: Order type code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRenewStatisticsClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        items:
                                            -
                                                date: 1560838346000
                                                count: 31
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListRenewStatisticsClientMode-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<renewStatResult>\r\n    <items>\r\n        <item>\r\n            <date>2019-06-18T00:00:00+02:00</date>\r\n            <count>31</count>\r\n        </item>\r\n    </items>\r\n</renewStatResult>\r\n"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List renew statistics - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                Renew statistics.
    '/v1/client/stat/stop/{companyCode}/{product}/{endDate}/{days}':
        get:
            tags:
                - Statistics
            parameters:
                -
                    name: companyCode
                    description: Company code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
                -
                    name: endDate
                    description: 'Last date for the statistics (format: yyyy-MM-dd)'
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: days
                    description: 'Number of days to include (max: 90)'
                    schema:
                        maximum: 90
                        type: integer
                    in: path
                    required: true
                -
                    name: product
                    description: Product
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListStopStatisticsClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        items:
                                            -
                                                date: '1560319946000'
                                                stopReason: Too expensive
                                                count: 5
                                            -
                                                date: '1560579146000'
                                                stopReason: Not useful
                                                count: 1
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListStopStatisticsClientMode-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<stopStatResult>\r\n    <items>\r\n        <item>\r\n            <date>2019-06-12T00:00:00+02:00</date>\r\n            <stopReason>Too expensive</stopReason>\r\n            <count>5</count>\r\n        </item>\r\n        <item>\r\n            <date>2019-06-15T00:00:00+02:00</date>\r\n            <stopReason>Not useful</stopReason>\r\n            <count>1</count>\r\n        </item>\r\n    </items>\r\n</stopStatResult>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List stop statistics - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                Stop statistics.
    '/v1/client/voucher/coupons/{voucherCode}':
        get:
            tags:
                - Voucher Coupons
            parameters:
                -
                    name: voucherCode
                    schema:
                        maxLength: 36
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListVoucherCodeCouponsClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        coupons:
                                            -
                                                couponCode: WMDigi
                                                couponNumber: 5223
                                                description: Offer for new customers
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListVoucherCodeCouponsClientMode-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<voucherCodeCouponsResponse>\r\n    <coupons>\r\n        <couponCode>WMDigi</couponCode>\r\n        <couponNumber>5223</couponNumber>\r\n        <description>Offer for new customers</description>\r\n    </coupons>\r\n</voucherCodeCouponsResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List voucher code coupons - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                This API will return a list with coupons that may be used with a given `voucherCode`. Vocher
                code is additionally validated, i.e is it a valid code and is it possible to use. An invalid
                voucher code result in a validation exception.
    '/v1/client/stock/{productId}':
        get:
            tags:
                - Stock
            parameters:
                -
                    name: productId
                    description: Return all if missing
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: false
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListStocksClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        -
                                            productId: CO27409
                                            stockQuantity: 100
                                            status: instock
                                        -
                                            productId: '29452'
                                            stockQuantity: 200
                                            status: expired
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List stocks - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                Stock information for a single product or all (relevant) products.
    '/v1/customer/addressCategory/categoryCodes/{categoryType}':
        get:
            tags:
                - Category
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCategoryCodes-response'
                            examples:
                                Example 1:
                                    value:
                                        categoryCodeList:
                                            -
                                                categoryType: Job
                                                categoryCode: Software Engineer
                                                description: Coding expert
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListCategoryCodes-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<categoryCodes>\r\n  <categoryCodeList>\r\n    <addressCategoryCode>\r\n      <categoryType>JOB</categoryType>\r\n      <categoryCode>Software Engineer</categoryCode>\r\n      <description>Coding expert</description>\r\n    </addressCategoryCode>\r\n  </categoryCodeList>\r\n</categoryCodes>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List category codes
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                CategoryType is an optional parameter that limits the response to a specific category type.
        parameters:
            -
                name: categoryType
                schema:
                    maxLength: 12
                    type: string
                in: path
                required: false
    /v1/customer/addressCategory/categoryTypes:
        get:
            tags:
                - Category
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCategoryTypes-response'
                            examples:
                                Example 1:
                                    value:
                                        categoryTypeList:
                                            -
                                                categoryType: Job
                                                description: A paid position of regular employment.
                                                hasPriority: 'Y'
                                                maxCodes: 7
                                                useFreeValue: C
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListCategoryTypes-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<categoryTypes>\r\n  <categoryTypeList>\r\n    <addressCategoryType>\r\n      <categoryType>Job</categoryType>\r\n      <description>A paid position of regular employment.</description>\r\n      <hasPriority>Y</hasPriority>\r\n      <maxCodes>7</maxCodes>\r\n      <useFreeValue>C</useFreeValue>\r\n    </addressCategoryType>\r\n  </categoryTypeList>\r\n</categoryTypes>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List category types
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Category API for looking up valid categories that can be used on an order.
    '/v1/client/customer/invoice/payment/{customerNumber}/{product}':
        get:
            tags:
                - Invoice
            parameters:
                -
                    name: customerNumber
                    description: The customer number
                    schema:
                        type: integer
                    in: path
                    required: true
                -
                    name: product
                    description: >-
                        Product is an optional parameter. The response is a list of invoiced products for
                        customer.
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: false
                -
                    name: from
                    description: "From date, not required. If date is specified, then from this date will be invoices/payments returned.\r\n\r\nIf no dates are specified then will be returned last invoice for given (first) product on invoice.\r\n\r\n Specify the date in format: YYYY-MM-DD."
                    schema:
                        maxLength: 10
                        type: string
                    in: query
                -
                    name: to
                    description: "To date, not required. If date is specified then up this date will be returned invoices/payments.\r\n\r\nIf no dates are specified then will be returned last invoice for given (first) product on invoice.\r\n\r\n Specify the date in format: YYYY-MM-DD."
                    schema:
                        maxLength: 10
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInvoiceClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        clientInvoiceInfoList:
                                            -
                                                invoiceId: '1'
                                                invoiceDate: 1560333600
                                                invoiceOfferCount: '1'
                                                customerNumber: 563457
                                                product: CO27409
                                                productName: Weekly Magazine
                                                amount: 2
                                                companyCode: '5646903690'
                                                paymentStatus: '0'
                                                invoiceAmount: 295
                                                paidAmount: 0
                                                paymentMethod: A
                                                invoiceHotelUrl: >-
                                                    http://mediaconnect.no/invoice/view/gkcb93qgt94ca6943bloitxgq4de
                                                paymentDate: 1561716000
                                                dueDate: 1561716000
                                                desc:
                                                    - Weekly Magazine
                                                period: 1
                                                periodUnit: E
                                                fromTime: '2019-06-12'
                                                incltime: '2020-06-12'
                                                invoiceLineInfo:
                                                    -
                                                        productCode: CO27409
                                                        invoiceAmount: 84.54
                                                        invoiceVatAmount: 13.47
                                                        invoiceVatPercent: 36.73
                                Example 2:
                                    value:
                                        clientInvoiceInfoList:
                                            -
                                                invoiceId: '2'
                                                invoiceDate: 1546729740000
                                                dueDate: 1546729740000
                                                invoiceOfferCount: '1'
                                                customerNumber: 3119963
                                                product: CO27409
                                                productName: Weekly Magazine
                                                amount: 1
                                                companyCode: '5646903690'
                                                paymentStatus: '-1'
                                                invoiceAmount: 1
                                                paidAmount: 1
                                                paymentMethod: A
                                                invoiceHotelUrl: >-
                                                    http://server/invoice/view/bbfc76200d6d4c40ae3d1cd2efd4e35a
                                                desc:
                                                    - Conmag
                                                period: 10
                                                periodUnit: A
                                                fromTime: '2019-10   '
                                                inclTime: '2020-08   '
                                                invoiceLineInfo:
                                                    -
                                                        productCode: CO27409
                                                        invoiceAmount: 0.8
                                                        invoiceVatAmount: 0.2
                                                        invoiceVatPercent: 25
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List invoices - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                The API for extracting information about payment history and `paymentMethod` for a customer
                based on `customerNumber`.
    /v1/order/status:
        get:
            tags:
                - Order
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListOrderStatus'
                            examples:
                                Example 1:
                                    value:
                                        orders:
                                            -
                                                orderId: 9
                                                externalOrderId: '2342'
                                                orderTime: 1559372400000
                                                orderStatus: preliminary
                                                orderAmount: 295
                                                customerNumber: 563457
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List orders
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Use this API to get a list of orders with basic status.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListOrderdetails-request'
                        examples:
                            Example 1:
                                value:
                                    orderId: 9
                                    externalOrderId: '2342'
            tags:
                - Order
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrderdetails-response'
                            examples:
                                Example 1:
                                    value:
                                        orders:
                                            -
                                                orderId: 9
                                                externalOrderId: '2342'
                                                orderTime: 1559372400000
                                                orderStatus: preliminary
                                                orderAmount: 295
                                                orderLines:
                                                    -
                                                        productId: CO27409
                                                        description: ''
                                                        invoiceNumber: 7435367
                                                        invoiceTime: 1560290400
                                                        invoiceLineAmount: 295
                                                        invoiceStatus: notInvoiced
                                                        deliveryStatus: waiting
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Search order details
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                API to get detailed information for a given `orderId` or orders with the same
                `externalOrderId`. Note that only one value may be present in the request.
    /v1/client/coupon/price:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckCouponPriceClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    couponCode: TOTT
                                    couponNumber: 60
                                    customerNumber: 10
                                    countryCode: 'NO'
                                    postalCode: '1273'
            tags:
                - Coupon
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckCouponPriceClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        companyCode: FTOTT
                                        product: TOTT
                                        price: 100
                                        vatAmount: 25
                                        vatpercent: 25
                                        vatInclude: false
                                        currency: NOK
                                        distAmount: 0
                                        distAmountvat: 0
                                        customerNumber: 10
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: VALIDATION
                                        errorMessage: 'Error message here, e.g. missing field'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: SEVERE
                                        errorMessage: 'Error message here, i.e unhandled exception'
                    description: Internal Server Error
            deprecated: false
            summary: Check coupon price - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                This API returns the price that is registered on a Coupon. It also returns the distribution
                cost ets. if parameters for country code and postal code are set.
    /v1/api/payment/payex/token:
        get:
            tags:
                - PayEx
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPayExTokens-response'
                            examples:
                                Example 1:
                                    value:
                                        paymentRecurrenceTokens:
                                            -
                                                recurrenceToken: 4v8nwodhfja
                                                merchantId: '45723589'
                                                productCode: CO27409
                                                maskedCardNumber: xxxx-xxxxxx-x2348
                                                expirationMonth: '12'
                                                expirationYear: '18'
                                                cardTypeName: VISA
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List PayEx tokens
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nInformation and functions related to recurring payment tokens.\r\n\r\nProduces a list with tokens related to users Connect customer. Response is based on tokens registered in ConnectID, i.e tokens received from Connect and stored in ConnectID. Only tokens marked as valid are returned."
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddPayExToken-request'
                        examples:
                            Example 1:
                                value:
                                    tokenType: card
                                    productCode: CO27409
            tags:
                - PayEx
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddPayExToken-response'
                            examples:
                                Example 1:
                                    value:
                                        success: true
                                        transactionId: 12378954
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Add PayEx token
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nUse the id from the response to complete the adding the card by redirecting the customer to ``loginServer/payment/payex/token/add?clientId=…&returnUrl=….&errorUrl=…..&transactionId=12378954``. The system will redirect the customer to the proper third-party system for the change, and upon success will then redirect to the given ``returnUrl``. If an system error occurs, the given ``errorUrl`` will be used instead.\r\n\r\nIn addition to return url will be returned the result of operation:\r\n\r\n* **finished** - if token was registered correctly,\r\n* **cancelled** - user cancelled the adding the token, token is not added,\r\n* **failed** - it was not possible to create a token, adding of token fails,\r\n* **unknown** - unknown status of operation,\r\n* **initiated** - creation of token was initiated,\r\n* **error** - never shall happen, instead shall go to `errorUrl`."
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RemovePayExToken-request'
                        examples:
                            Example1:
                                value:
                                    merchantId: 45723589
                                    recurrenceToken: 4v8nwodhfja
                required: true
            tags:
                - PayEx
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemovePayExToken-response'
                            examples:
                                Example1:
                                    value:
                                        success: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: VALIDATION
                                        errorMessage: 'Error message here, e.g. missing field'
                    description: Bad request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: SEVERE
                                        errorMessage: 'Error message here, i.e unhandled exception'
                    description: Internal server error
            deprecated: false
            summary: Remove PayEx token
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                This API can be used for removing tokens from a payex paymentprovider
    /v1/api/payment/invoice/:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PayInvoice-request'
                        examples:
                            Example 1:
                                value:
                                    invoiceNumber: '7435367'
                                    productCode: CO27409
                                    companyCode: '68979834'
                                    paymentMethod: creditcardPayex
            tags:
                - Payment
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PayInvoice-response'
                            examples:
                                Example 1:
                                    value:
                                        success: true
                                        transactionId: 12378954
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Pay invoice
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\n Use the id from the response to complete the payment by redirecting the customer to ``loginServer/payment/invoice/pay?clientId=…&returnUrl=…&errorUrl=…&transactionId=12378954``. The system will redirect the customer to the proper third-party system for the payment, and upon success will then redirect to the given ``returnUrl``. If an system error occurs, the given ``errorUrl`` will be used instead.\r\n\r\nIn addition to return url will be returned the result of operation:\r\n\r\n* **finished** - if payment was registered correctly\r\n* **cancelled** - user cancelled the payment\r\n* **failed** - it was not possible to create a payment\r\n* **unknown** - unknown status of operation\r\n* **initiated** - creation of payment was initiated\r\n* **error** - never shall happen, instead shall go to `errorUrl`."
    /v1/user/profile/:
        get:
            tags:
                - Profile
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserProfile-response'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 6ba7b8149dad11d180b400c04fd430c8
                                        loginCredential:
                                            credential: ola.nordmann@hotmail.no
                                            credentialType: email
                                            verificationLevel: verificationCode
                                        userCredentials:
                                            -
                                                credential: ola.nordmann@hotmail.no
                                                credentialType: email
                                                verificationLevel: verificationCode
                                            -
                                                credential: '+4723339100'
                                                credentialType: phone
                                                verificationLevel: verificationCode
                                        name:
                                            firstName: Ola
                                            lastName: Nordmann
                                        phoneNumbers:
                                            -
                                                phoneNumber: '+4723339100'
                                                phoneNumberType: company
                                            -
                                                phoneNumber: '+4712345678'
                                                phoneNumberType: personal
                                        emails:
                                            - ola.nordmann@hotmail.no
                                            - ola.nordmann@company.com
                                        externalSources:
                                            - Vipps
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListUserProfile-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<profile>\r\n    <uniqueId>6ba7b8149dad11d180b400c04fd430c8</uniqueId>\r\n    <loginCredential>\r\n        <credential>ola.nordmann@hotmail.no</credential>\r\n        <credentialType>email</credentialType>\r\n        <verificationLevel>verificationCode</verificationLevel>\r\n    </loginCredential>\r\n    <userCredentials>\r\n        <userCredential>\r\n            <credential>ola.nordmann@hotmail.no</credential>\r\n            <credentialType>email</credentialType>\r\n            <verificationLevel>verificationCode</verificationLevel>\r\n        </userCredential>\r\n        <userCredential>\r\n            <credential>+4723339100</credential>\r\n            <credentialType>phone</credentialType>\r\n            <verificationLevel>verificationCode</verificationLevel>\r\n        </userCredential>\r\n    </userCredentials>\r\n    <name>\r\n        <firstName>Ola</firstName>\r\n        <lastName>Nordmann</lastName>\r\n    </name>\r\n    <phoneNumbers>\r\n        <phoneNumber>\r\n            <phoneNumber>+4723339100</phoneNumber>\r\n            <phoneNumberType>company</phoneNumberType>\r\n        </phoneNumber>\r\n        <phoneNumber>\r\n            <phoneNumber>+4712345678</phoneNumber>\r\n            <phoneNumberType>personal</phoneNumberType>\r\n        </phoneNumber>\r\n    </phoneNumbers>\r\n    <emails>\r\n        <email>ola.nordmann@hotmail.no</email>\r\n        <email>ola.nordmann@company.com</email>\r\n    </emails>\r\n    <externalSources>\r\n        <externalSource>Vipps</externalSource>\r\n    </externalSources>\r\n</profile>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: VALIDATION
                                        errorMessage: 'Error message here, e.g. missing field'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List user profile
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Profile API for extracting basic information about the useraccount.
    /v1/user/profile/external:
        get:
            tags:
                - Profile
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserExternalProfiles-response'
                            examples:
                                Example 1:
                                    value:
                                        externalProfileList:
                                            -
                                                source: Vipps
                                                info:
                                                    birthDate: -451616400000
                                                    name:
                                                        firstName: Ola
                                                        lastName: Nordmann
                                                    phoneNumbers:
                                                        - '+4748060317'
                                                    emails:
                                                        - ola.nordmann@hotmail.no
                                                    addresses:
                                                        -
                                                            addressType: work
                                                            streetAddress: Grubbegata 6
                                                            postalCode: 0179
                                                            postalPlace: Oslo
                                                            countryCode: 'NO'
                                                        -
                                                            addressType: home
                                                            streetAddress: 'Postboks 6300, ETTERSTAD'
                                                            postalCode: '0603'
                                                            postalPlace: OSLO
                                                            countryCode: 'NO'
                                                        -
                                                            addressType: other
                                                            streetAddress: Møllergata 3
                                                            postalCode: 0179
                                                            postalPlace: Oslo
                                                            countryCode: 'NO'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ListUserExternalProfiles-response'
                            examples:
                                Example 1:
                                    value: "<?xml version='1.0' encoding='UTF-8'?>\r\n<externalProfileResponse>\r\n    <externalProfileList>\r\n        <externalProfile>\r\n            <source>Vipps</source>\r\n            <info>\r\n                <birthDate>1955-09-09T23:00:00.000+0000</birthDate>\r\n                <name>\r\n                    <firstName>Ola</firstName>\r\n                    <lastName>Nordmann</lastName>\r\n                </name>\r\n                <phoneNumbers>\r\n                    <phoneNumber>+4748060317</phoneNumber>\r\n                </phoneNumbers>\r\n                <emails>\r\n                    <email>ola.nordmann@hotmail.no</email>\r\n                </emails>\r\n                <addresses>\r\n                    <address>\r\n                        <addressType>work</addressType>\r\n                        <streetAddress>Grubbegata 6</streetAddress>\r\n                        <postalCode>0179</postalCode>\r\n                        <postalPlace>Oslo</postalPlace>\r\n                        <countryCode>NO</countryCode>\r\n                    </address>\r\n                    <address>\r\n                        <addressType>home</addressType>\r\n                        <streetAddress>Postboks 6300, ETTERSTAD</streetAddress>\r\n                        <postalCode>0603</postalCode>\r\n                        <postalPlace>OSLO</postalPlace>\r\n                        <countryCode>NO</countryCode>\r\n                    </address>\r\n                    <address>\r\n                        <addressType>other</addressType>\r\n                        <streetAddress>Møllergata 3</streetAddress>\r\n                        <postalCode>0179</postalCode>\r\n                        <postalPlace>Oslo</postalPlace>\r\n                        <countryCode>NO</countryCode>\r\n                    </address>\r\n                </addresses>\r\n            </info>\r\n        </externalProfile>\r\n    </externalProfileList>\r\n</externalProfileResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: VALIDATION
                                        errorMessage: 'Error message here, e.g. missing field'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List external user profiles
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Profile API for extracting basic information about the useraccount from external sources.
    /v1/client/order/fulfillment:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CompleteOrderClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    orderId: 14
                required: true
            tags:
                - Fulfillment
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompleteOrderClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        fulfillmentStatus: ERROR
                                        orderId: 14
                                        errorMessage: Descriptiv error message
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Complete order - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n\r\nThe API is used only to fulfill a previously registered order with `orderId`. Currently this API is possible to use on orders with mobile payment or for prepaid  orders. You can only use this API to fulfill the order if `paymentMethod` on the order is sms, invoice, free, kco (Klarna), creditcardPayex or other (own integration with payment provider).\r\n\r\n**Update**: This API previously exposed functionality to create and link a ConnectID user to the order, and possibly send a sms/email notification. This functionality will be removed from this API at a later point. \r\nTo use these features, you need to use the new API named [Assign user](#tag/User/paths/~1v1~1client~1order~1{orderId}~1user/post). This is the reason behind why there are depreacted fields in this API.\r\n"
    '/v1/customer/invoice/{productCode}':
        get:
            tags:
                - Invoice
            parameters:
                -
                    name: productCode
                    description: Product code. Response include all invoices for all products if missing.
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: false
                -
                    name: includeUnpaid
                    description: |-
                        Specifies if invoices returned should include unpaid invoices

                        - **true**: The invoice list includes all invoices.
                        - **false**: The invoice list only includes paid invoices.
                    schema:
                        type: boolean
                    in: query
                    required: false
                -
                    name: fromDate
                    description: >4-
                         If date is specified, then from this date will be invoices/payments returned. 
                        It follows the standard format for date defined by
                        [**RFC3339**](https://tools.ietf.org/html/rfc3339#section-5.6).
                    schema:
                        format: date
                        type: string
                    in: query
                    required: false
                -
                    name: toDate
                    description: >-
                        If date is specified then up this date will be returned invoices/payments.

                        It follows the standard format for date defined by
                        [**RFC3339**](https://tools.ietf.org/html/rfc3339#section-5.6).
                    schema:
                        format: date
                        type: string
                    in: query
                    required: false
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListBasicInvoiceInfo-response'
                            examples:
                                Example 1:
                                    value:
                                        invoices:
                                            -
                                                invoiceNumber: 1234
                                                companyCode: COMP
                                                invoiceOfferCount: 1
                                                invoiceDate: '2019-06-12'
                                                invoicePaymentStatus: paid
                                                invoiceAmount: 295
                                                invoiceCurrency: NOK
                                                invoiceHotelUrl: >-
                                                    http://mediaconnect.no/invoice/view       
                                                    /gkcb93qgt94ca6943bloitxgq4de
                                                invoiceDueDate: '2019-07-17'
                                                invoiceType: invoice
                                                paidAmount: 295
                                                description: Weekly Magazine
                                                fromTime: '2019-06-12'
                                                includeTime: '2019-06-12'
                    description: OK
                '404':
                    content:
                        application/json: {}
                    description: Not Found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List basic invoice info
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                This API returns a list of basic invoice info ordered by decending invoice date.
        parameters:
            -
                name: productCode
                in: path
                required: true
    '/v1/client/order/{orderId}/user':
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssignUserClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    credential: '+4712345678'
                                    isSendMessage: true
                                    returnUrl: www.mediaconect.no/...
                                    errorUrl: www.mediaconect.no/...
                                    linkLifetime: 2
                                    overrideClientId: no.mediaconnect
                required: true
            tags:
                - User
            parameters:
                -
                    name: orderId
                    description: Used to identify an order.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssignUserClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        orderId: 14
                                        uniqueUserId: f21942404003447993b198bdd7ba2ef4
                                        isNewUser: true
                                        isPasswordSet: false
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Assign user - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n\r\n**Update**: Using this endepoint requires configuration of LOGIN_BASE_URL. If `isSendMessage` is true, then `overrideClientId` is required. You may check if the credentials (phone number/email) already exits in ConnectID by using [Check credential - client mode](tag/Credential) API.\r\n\r\nUse this API to assign user to a previously fulfilled order. If the order was registered using the client order API, you have the option to attach the order to a ConnectID user with a specified credential. To perform this action you provide the `credential`.\r\nThe previously created order is attached to the ConnectID user that is specified with the given credential on request. If no user does exist, it will be created based on the provided credential.\r\nThe user is notified on the attachment via an email or an SMS message if `isSendMessage` is set as true. The message is composed using a template that must be configured by Mediaconnect support. A part of this message is a link that the user must click in order to login (for existing users) or set password (for new users). This means that you also must supply the `returnUrl` and `errorUrl`. These urls are used by our systems to generate the link in the message.\r\nSending of email/SMS is asynchronous. Messages that are sent to the user may be customized for SMS/email. In addition messages may be different for new users that needs to set password or existing users with direct link to login."
    /v1/customer/invoice/details:
        get:
            tags:
                - Invoice
            parameters:
                -
                    name: companyCode
                    description: Company invoice belongs to
                    schema:
                        maxLength: 12
                        type: string
                    in: query
                    required: true
                -
                    name: invoiceNumber
                    description: Invoice number
                    schema:
                        type: integer
                    in: query
                    required: true
                -
                    name: reminderNumber
                    description: Reminder number. 0 for invoice
                    schema:
                        type: integer
                    in: query
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInvoiceDetails-response'
                            examples:
                                Example 1:
                                    value:
                                        invoiceInfoWithDetail:
                                            invoiceNumber: 7
                                            companyCode: FTOTT
                                            invoiceOfferCount: 1
                                            invoiceDate: '2018-01-17'
                                            invoicePaymentStatus: partiallyPaid
                                            invoiceAmount: 110
                                            invoiceCurrency: NOK
                                            invoiceHotelUrl: www.invoicehotel.no
                                            invoiceDueDate: '2018-01-17'
                                            invoiceType: invoice
                                            paidAmount: 0
                                            description: Toten testprodukt
                                            fromTime: 01-01-2020
                                            includeTime: 01-01-2021
                                            invoiceOfferInfo:
                                                -
                                                    offerNumber: 1
                                                    invoiceAmount: 100
                                                    invoiceVatAmount: 10
                                                    customerIdentification: '1234567'
                                                    invoiceLineInfoList:
                                                        -
                                                            productCode: TOTT
                                                            invoiceAmount: 50
                                                            invoiceVatAmount: 5
                                                            invoiceVatPercent: 10
                                                            description: TOTEN TEST
                                                            fromTime: 2018-01
                                                            includeTime: 2018-06
                                                        -
                                                            productCode: PORTO
                                                            invoiceAmount: 50
                                                            invoiceVatAmount: 5
                                                            invoiceVatPercent: 10
                                                            description: Porto til utland
                    description: OK
            deprecated: false
            summary: List invoice details
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Retrieves information regarding one invoice based on company code, invoice number and reminder
                number. Information about offers and details in the offer and lines are presented. 
    '/v1/product/payment/{orderType}':
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangePaymentMethod-request'
                        examples:
                            Example 1:
                                value:
                                    paymentMethod: recurringPayment
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/ChangePaymentMethod-request'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<paymentMethodRequest>\r\n    <paymentMethod>recurringPayment</paymentMethod>\r\n</paymentMethodRequest>"
            tags:
                - Payment
            parameters:
                -
                    name: orderType
                    schema:
                        maxLength: 12
                        minLength: 1
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChangePaymentMethod-response'
                            examples:
                                Example 1:
                                    value:
                                        paymentChangeId: 12378954
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ChangePaymentMethod-response'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<paymentMethodRequestResponse>\r\n    <paymentChangeId>12378954</paymentChangeId>\r\n</paymentMethodRequestResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Change payment method
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Use the id from the response to complete the change by redirecting the customer to
                `/paymentChange?clientId=…&returnUrl=….&errorUrl=…..&paymentChangeId=12378954`. The system
                will redirect the customer to the proper third-party system for the change, and upon success
                will then redirect to the given `returnUrl`. If an error occurs, the given `errorUrl` will be
                used instead.


                For DIBS payment provider if payment change is for recurring payment (recurringPayment) and
                user has already valid ticket it is possible to reuse it during payment change. It can be done
                just with extra param `&ticket=1234567890`, that user already has. In that case payment change
                will be done using existing ticket (no need to go to third-part system)
                ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square). 


                For PayEx payment provider if payment change is for recurring payment
                (recurringPayExCardPayment) and user has already valid ticket assigned to product then the new
                ticket has to be authorized by verification and the old one should be removed to get one
                ticket per product as a final result. It can be done with extra param
                `&ticket=1234567890`(ticket as recurrence token)
                ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square).     




                In addition to return url will be returned the **result** of operation:


                - **finished** - if ticket was registered correctly.

                - **cancelled** - user cancelled the adding the ticket, ticket is not added.

                - **failed** - it was not possible to create a ticket, adding of ticket fails.

                - **unknown** - unknown status of operation.

                - **initiated** - creation of ticket was initiated.

                - **error** - never shall happen, instead shall go to `errorUrl`.
    '/v1/client/customer/privacy/consentEvent/history/{issuer}/{subjectType}/{subject}':
        get:
            tags:
                - Consent
            parameters:
                -
                    name: issuer
                    description: 'Used to identify who has required the consent, ex. name of the company.'
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: subjectType
                    description: "The vaild type of subject is one of these:\r\n\r\n* **CONNECT**\r\n* **CONNECTID**\r\n* **EXTERNAL**\r\n* **ORDER**"
                    schema:
                        enum:
                            - CONNECT
                            - CONNECTID
                            - EXTERNAL
                            - ORDER
                        type: string
                    in: path
                    required: true
                -
                    name: subject
                    description: "Identification of the subject:\r\n\r\n* Enter **customer number** for `subjectType` CONNECT\r\n* Enter **credential** for `subjectType` CONNECTID\r\n* Enter **external id** for `subjectType` External\r\n* Enter **ConnectID orderid** for `subjectType` ORDER."
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: onlyActive
                    description: |-
                        Whether to return active records or all the data:

                        * **true**: It returns data only for active records.
                        * **false**: It returns all the data.
                    schema:
                        default: true
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListConsentEventHistory'
                            examples:
                                Example 1:
                                    value:
                                        issuer: '468979834'
                                        subject: '563457'
                                        subjectType: CONNECT
                                        consents:
                                            -
                                                consentId: 1
                                                target: editoral
                                                scope: email
                                                events:
                                                    -
                                                        consentEventId: 1
                                                        created: 1560963388000
                                                        source: Selfservice
                                                        action: false
                                                    -
                                                        consentEventId: 2
                                                        created: 1560968512000
                                                        source: Selfservice
                                                        action: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List consent event history - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                API for getting consents event history to given `issuer` and `subject` (subject type).
    '/v1/client/customer/privacy/consent/text/{issuer}':
        get:
            tags:
                - Consent
            parameters:
                -
                    name: issuer
                    description: Identification of the issuer for consent text
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: consentGroupId
                    description: 'If group is specified, only for this group will be consent text returned'
                    schema:
                        type: integer
                    in: query
                -
                    name: consentId
                    description: That only for this consent will be text returned
                    schema:
                        type: integer
                    in: query
                -
                    name: target
                    description: If target is specified for this target will be returned text info
                    schema:
                        maxLength: 255
                        type: string
                    in: query
                -
                    name: scope
                    description: In addition to target scope specified consent
                    schema:
                        maxLength: 255
                        type: string
                    in: query
                -
                    name: onlyActive
                    description: |-
                        Whether to return active records or all the data:

                        * **true**: It returns data only for active records.
                        * **false**: It returns all the data.          
                    schema:
                        default: true
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListConsentTextClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        issuer: '468979834'
                                        consents:
                                            -
                                                consentId: 1
                                                consentGroupId: 1
                                                target: editoral
                                                scope: email
                                                texts:
                                                    -
                                                        textId: 1
                                                        languageCode: nb_NO
                                                        text: Samtykker du til å motta eposter?
                                                        fromDate: 1561932001000
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List consent text - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                API for getting consent text in additon to consent name and description. Consent text can be
                get for all `issuer` consents, for consents of given group or for specyfic consent (by
                `consentId` or `target` and `scope`).
    '/v1/client/customer/privacy/consent/text/history/{issuer}':
        get:
            tags:
                - Consent
            parameters:
                -
                    name: issuer
                    description: 'Used to identify who has required the consent, ex. name of the company.'
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: consentGroupId
                    description: 'If group is specified, only for this group will be consent text history returned'
                    schema:
                        type: integer
                    in: query
                -
                    name: consentId
                    description: That only for this consent will be text history returned
                    schema:
                        type: integer
                    in: query
                -
                    name: target
                    description: If target is specified for this target will be returned history
                    schema:
                        maxLength: 255
                        type: string
                    in: query
                -
                    name: scope
                    description: >-
                        In addition to target scope specified consent, so `target` & `scope` can identified
                        consent
                    schema:
                        maxLength: 255
                        type: string
                    in: query
                -
                    name: onlyActive
                    description: |-
                        Whether to return active records or all the data:

                        * **true**: It returns data only for active records.
                        * **false**: It returns all the data.
                    schema:
                        default: true
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListConsentTextHistoryClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        issuer: '468979834'
                                        consents:
                                            -
                                                consentId: 1
                                                consentGroupId: 1
                                                target: editoral
                                                scope: email
                                                texts:
                                                    -
                                                        consentTextId: 1
                                                        languageCode: nb_NO
                                                        textHistory:
                                                            -
                                                                consentTextHistoryId: 1
                                                                text: Samtykker du til å motta eposter?
                                                                fromDate: 1559386588000
                                                                toDate: 1561892188000
                                                            -
                                                                consentTextHistoryId: 2
                                                                text: Samtykker du til å motta epostmeldinger?
                                                                fromDate: 1561986769000
                                                                toDate: 1593609208000
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: "Internal Server Error\r\n"
            deprecated: false
            summary: List consent text history - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n"
    '/v1/client/customer/privacy/consentGroups/{issuer}':
        get:
            tags:
                - Consent
            parameters:
                -
                    name: issuer
                    description: Identification of the issuer principal of the consent.
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: onlyActive
                    description: |-
                        Whether to return active records or all the data:

                        * **true**: It returns data only for active records.
                        * **false**: It returns all the data.
                    schema:
                        default: true
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListConsentGroups'
                            examples:
                                Example 1:
                                    value:
                                        issuer: '468979834'
                                        groups:
                                            -
                                                consentGroupId: 1
                                                created: 1560851788000
                                                selectionOrder: 2
                                                texts:
                                                    -
                                                        languageCode: en_GB
                                                        name: Digital Communication
                                                        description: Consent for digital communication
                                                    -
                                                        languageCode: nb_NO
                                                        name: Digital kommunikasjon
                                                        description: Samtykke for digital kommunikasjon
                                                active: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List consent groups - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                API for getting consent group.
    '/v1/client/customer/privacy/consents/{issuer}':
        get:
            tags:
                - Consent
            parameters:
                -
                    name: issuer
                    description: 'Used to identify who has required the consent, ex. name of the company.'
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: consentGroupId
                    description: 'If group is specified, only for this group will be consents returned'
                    schema:
                        type: integer
                    in: query
                -
                    name: onlyActive
                    description: |-
                        Whether to return active records or all the data:

                        * **true**: It returns data only for active records.
                        * **false**: It returns all the data.
                    schema:
                        default: true
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListConsentGivenIssuer'
                            examples:
                                Example 1:
                                    value:
                                        issuer: '468979834'
                                        consents:
                                            -
                                                consentId: 1
                                                consentGroupId: 1
                                                target: editoral
                                                scope: email
                                                parentConsentId: 1
                                                selectionOrder: 2
                                                displayMode: A
                                                created: 1560855388000
                                                texts:
                                                    -
                                                        languageCode: nb_NO
                                                        name: Kommunikasjon på epost
                                                        description: Samtykker du til å motta eposter?
                                                    -
                                                        languageCode: en_GB
                                                        name: Communication on email
                                                        description: Do you agree to recevice emails?
                                                active: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List consent given issuer - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                API for getting consents to given issuer.
    '/v1/customer/privacy/consentEvent/history/{issuer}/{subjectType}/{subject}':
        get:
            tags:
                - Consent
            parameters:
                -
                    name: issuer
                    description: 'Used to identify who has required the consent, ex. name of the company'
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: subjectType
                    description: |-
                        The vaild type of subject is one of these:

                        - **CONNECT**
                        - **CONNECTID**
                        - **EXTERNAL**
                        - **ORDER**
                    schema:
                        enum:
                            - CONNECT
                            - CONNECTID
                            - EXTERNAL
                            - ORDER
                        type: string
                    in: path
                    required: true
                -
                    name: subject
                    description: "Identification of the subject:\r\n\r\n* Enter **customer number** for `subjectType` CONNECT\r\n* Enter **credential** for `subjectType` CONNECTID\r\n* Enter **external id** for `subjectType` External\r\n* Enter **ConnectID orderid** for `subjectType` ORDER."
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: onlyActive
                    description: |-
                        Whether to return active records or all the data:

                        * **true**: It returns data only for active records.
                        * **false**: It returns all the data.
                    schema:
                        default: true
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListConsentEventHistory'
                            examples:
                                Example 1:
                                    value:
                                        issuer: '468979834'
                                        subject: '563457'
                                        subjectType: CONNECT
                                        consents:
                                            -
                                                consentId: 1
                                                target: editoral
                                                scope: email
                                                events:
                                                    -
                                                        consentEventId: 1
                                                        created: 1560963388000
                                                        source: Selfservice
                                                        action: true
                                                    -
                                                        consentEventId: 2
                                                        created: 1560963388000
                                                        source: Selfservice
                                                        action: false
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List consent event history
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                API for getting consents event history to given `issuer` and `subject` (subject type).
    '/v1/customer/privacy/consents/{issuer}':
        get:
            tags:
                - Consent
            parameters:
                -
                    name: issuer
                    description: 'Used to identify who has required the consent, ex. name of the company.'
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: consentGroupId
                    description: 'If group is specified, only for this group will be consents returned.'
                    schema:
                        type: integer
                    in: query
                -
                    name: onlyActive
                    description: |-
                        Whether to return active records or all the data:

                        * **true**: It returns data only for active records.
                        * **false**: It returns all the data.
                    schema:
                        default: true
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListConsentGivenIssuer'
                            examples:
                                Example 1:
                                    value:
                                        issuer: '468979834'
                                        consents:
                                            -
                                                consentId: 1
                                                consentGroupId: 1
                                                target: editoral
                                                scope: email
                                                parentConsentId: 1
                                                selectionOrder: 2
                                                displayMode: A
                                                created: 1560855388000
                                                texts:
                                                    -
                                                        languageCode: nb_NO
                                                        name: Kommunikasjon på epost
                                                        description: Samtykker du til å motta eposter?
                                                    -
                                                        languageCode: en_GB
                                                        name: Communication on email
                                                        description: Do you agree to recevice emails?
                                                active: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List consent given issuer
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                API for getting consents to given issuer.
    '/v1/customer/privacy/consentGroups/{issuer}':
        get:
            tags:
                - Consent
            parameters:
                -
                    name: issuer
                    description: Identification of the issuer principal of the consent.
                    schema:
                        maxLength: 255
                        type: string
                    in: path
                    required: true
                -
                    name: onlyActive
                    description: |-
                        Whether to return active records or all the data:

                        * **true**: It returns data only for active records.
                        * **false**: It returns all the data.
                    schema:
                        default: true
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListConsentGroups'
                            examples:
                                Example 1:
                                    value:
                                        issuer: '468979834'
                                        groups:
                                            -
                                                consentGroupId: 1
                                                created: 1560851788000
                                                selectionOrder: 2
                                                texts:
                                                    -
                                                        languageCode: en_GB
                                                        name: Digital Communication
                                                        description: Consent for digital communication
                                                    -
                                                        languageCode: nb_NO
                                                        name: Digital kommunikasjon
                                                        description: Samtykke for digital kommunikasjon
                                                active: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List consent groups
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                API for getting consent group.
    /v1/client/order:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Model-RegisterOrder-request'
                        examples:
                            Self-pay customer:
                                description: >-
                                    A self-pay customer is a customer who are payer and receiver. Only payer
                                    is required and receiver is not relevant here. 
                                value:
                                    externalOrderId: '23456'
                                    orderDate: 1570658400
                                    paymentMethod: creditcard
                                    orderAmount: 150
                                    currency: NOK
                                    marketingCouponCode: NOA3263
                                    marketingCouponNumber: 51
                                    companyCode: '468979834'
                                    seller: AY
                                    payer:
                                        customerNumber: 71
                                        personsSocialSecurityNumber: 890102-3286
                                        firstName: Kari
                                        middleName: Snøhaug
                                        lastName: Nordmann
                                        street: Osloveien
                                        streetNumber: 12
                                        floor: 3
                                        postalCode: '0101'
                                        postalPlace: Oslo
                                        postalAddress: Postboks 6
                                        postalAddressPostalCode: '0216'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 438649200
                                        sex: female
                                        emails:
                                            - kari.nordmann@gmail.com
                                        phoneNumbers:
                                            - '+4787654321'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: VS283
                                            productSpecNo: 1673
                                            quantity: 1
                                            unitPrice: 150
                                            voucherCode: '582358'
                                            allowAccessProduct: '29452'
                                            allowAccessSeconds: 259200
                                            startInfo:
                                                startDate: 1573340400
                                                startIssue: 2019-10
                                    recurring: true
                                    paymentInfo:
                                        ticket: 7b9nwomhbok
                                        cardNumberMasked: xxxx-xxxxxx-x8271
                                        expMonth: '10'
                                        expYear: '19'
                                        cardTypeName: Mastercard
                                        transactionId: '472'
                                        merchantId: '54823419'
                                        ticketMerchantId: '54823419'
                                        secure3d: true
                                        verificationIdPresent: true
                                        enrolled: true
                            Business customer:
                                description: An example of business customer.
                                value:
                                    externalOrderId: '2342'
                                    orderDate: 1559372400000
                                    paymentMethod: kco
                                    orderAmount: 295
                                    currency: NOK
                                    marketingCouponCode: CN3759
                                    marketingCouponNumber: 2
                                    companyCode: '468979834'
                                    seller: S05
                                    customerReference: '234242'
                                    payer:
                                        customerNumber: 563457
                                        companyRegistrationNumber: '5646903690'
                                        companyName: Company International Ltd
                                        department: Support
                                        firstName: Ola
                                        middleName: Fjordstrand
                                        lastName: Nordmann
                                        coAddress: Nedre Vollsgate XII
                                        street: Grubbegata
                                        streetNumber: 6
                                        entrance: A
                                        floor: 6
                                        postalCode: 0179
                                        postalPlace: Oslo
                                        postalAddress: Postboks 265 Økern
                                        postalAddressPostalCode: '0510'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        sex: unknown
                                        emails:
                                            - ola.nordmann@company.com
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4723339100'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: WMDigi
                                            productSpecNo: 5223
                                            product: ''
                                            quantity: 1
                                            unitPrice: 295
                                            voucherCode: '34572'
                                            allowAccessProduct: CO27409
                                            allowAccessSeconds: 259200
                                            rewardPartnerId: 3567
                                            rewardId: '2'
                                    recurring: true
                                    prepaid: true
                                    paymentInfoKCO:
                                        recurringToken: ayh2a8cd7-a672-4bd1-b1ee-0188238394bc
                                        klarnaReference: 29ACD8HA
                                        klarnaOrderId: 77a9aef5-9v88-094b-9de0-f1d83c1ec3f5
                                        merchantId: PK07982_de8cdb673d55
                                        cardNumberMasked: '**********3849'
                                        cardExpiryDate: 06/2021
                                        cardBrand: VISA
                            Gift:
                                description: >-
                                    The payer and receiver are two different persons. The payer and receiver
                                    are required here.
                                value:
                                    orderDate: 1568109600
                                    paymentMethod: invoice
                                    orderAmount: 199
                                    currency: NOK
                                    payer:
                                        customerNumber: 26
                                        firstName: Finn
                                        lastName: Nordmann
                                        street: Brugata
                                        streetNumber: 66
                                        floor: 4
                                        postalCode: 0385
                                        postalPlace: Oslo
                                        postalAddress: Postboks 7
                                        postalAddressPostalCode: 0385
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 716119200
                                        sex: male
                                        emails:
                                            - finn@mediaconnect.no
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4714567899'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: VJ4824
                                            productSpecNo: 63
                                            quantity: 1
                                            unitPrice: 199
                                            voucherCode: '57392'
                                            allowAccessProduct: DV373592
                                            allowAccessSeconds: 2542300
                                            startInfo:
                                                startDate: 1568109600
                                                startIssue: 2019-10
                                            rewardPartnerId: 7642
                                            rewardId: '63'
                                            receiver:
                                                customerNumber: 84
                                                firstName: Else
                                                lastName: Nordmann
                                                street: Bergensgata
                                                streetNumber: 2
                                                floor: 2
                                                postalCode: '5026'
                                                postalPlace: Bergen
                                                postalAddress: Bergensgata 5
                                                postalAddressPostalCode: '5026'
                                                postalAddressPostalPlace: Bergen
                                                countryCode: 'NO'
                                                birthDate: 676591200
                                                sex: female
                                                emails:
                                                    - else.nordmann@email.com
                                                phoneNumbers:
                                                    - '+4732165498'
                            Creditcard recurring payment via Nets:
                                description: An example of recurring payment via Nets. The order is not prepaid.
                                value:
                                    externalOrderId: '23456'
                                    orderDate: 1570658400
                                    paymentMethod: creditcard
                                    orderAmount: 150
                                    currency: NOK
                                    marketingCouponCode: NOA3263
                                    marketingCouponNumber: 51
                                    companyCode: '468979834'
                                    seller: AY
                                    payer:
                                        customerNumber: 71
                                        firstName: Kari
                                        middleName: Snøhaug
                                        lastName: Nordmann
                                        street: Osloveien
                                        streetNumber: 12
                                        floor: 3
                                        postalCode: '0101'
                                        postalPlace: Oslo
                                        postalAddress: Postboks 6
                                        postalAddressPostalCode: '0216'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 438649200
                                        sex: female
                                        emails:
                                            - kari.nordmann@gmail.com
                                        phoneNumbers:
                                            - '+4787654321'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: VS283
                                            productSpecNo: 1673
                                            quantity: 1
                                            unitPrice: 150
                                            voucherCode: '582358'
                                            allowAccessProduct: '29452'
                                            allowAccessSeconds: 259200
                                            startInfo:
                                                startDate: 1573340400
                                                startIssue: 2019-10
                                    recurring: true
                                    prepaid: false
                                    paymentInfo:
                                        ticket: 7b9nwomhbok
                                        cardNumberMasked: xxxx-xxxxxx-x8271
                                        expMonth: '10'
                                        expYear: '19'
                                        cardTypeName: Mastercard
                                        transactionId: '472'
                                        merchantId: '54823419'
                                        ticketMerchantId: '54823419'
                                        secure3d: true
                                        verificationIdPresent: true
                                        enrolled: true
                            Invoice:
                                value:
                                    orderDate: 1570112600
                                    paymentMethod: invoice
                                    orderAmount: 698
                                    currency: NOK
                                    payer:
                                        customerNumber: 19
                                        firstName: Bjørn
                                        lastName: Nordmann
                                        street: Trondheimsvegen
                                        streetNumber: 24
                                        floor: 1
                                        postalCode: '7023'
                                        postalPlace: Trondheim
                                        postalAddress: Postboks 7
                                        postalAddressPostalCode: 0385
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 163119600
                                        sex: female
                                        emails:
                                            - bjorn.nordmann@email.no
                                        phoneNumbers:
                                            - '+4777777777'
                                    orderLines:
                                        -
                                            productSpecType: issue
                                            productSpecCode: KSDAT
                                            productSpecNo: 523
                                            product: KAT
                                            quantity: 2
                                            unitPrice: 349
                                            allowAccessProduct: DV373592
                                            allowAccessSeconds: 2542300
                                            rewardPartnerId: 7642
                                            rewardId: '63'
                            Vipps recurring payment:
                                description: >-
                                    An example of recurring payment via Faste betalinger med Vipps. The order
                                    is not prepaid.
                                value:
                                    orderDate: 1542744400
                                    paymentMethod: vippsRecurring
                                    orderAmount: 130
                                    currency: NOK
                                    companyCode: '461182373'
                                    seller: SB
                                    payer:
                                        customerNumber: 11
                                        firstName: Ola
                                        lastName: Nordmann
                                        street: Drammensveien
                                        streetNumber: 11
                                        postalCode: '0202'
                                        postalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 438649200
                                        sex: male
                                        emails:
                                            - ola.nordmann@gmail.com
                                        phoneNumbers:
                                            - '+4787654321'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: KB937
                                            productSpecNo: 1349
                                            quantity: 1
                                            unitPrice: 130
                                            allowAccessProduct: '48229'
                                            allowAccessSeconds: 259200
                                            startInfo:
                                                startDate: 1542744400
                                                startIssue: 2019-11
                                    recurring: true
                                    prepaid: false
                            Klarna recurring payment:
                                description: An example of recurring payment via Klarna. The order is prepaid.
                                value:
                                    orderDate: 1558076400
                                    paymentMethod: kco
                                    orderAmount: 295
                                    currency: NOK
                                    seller: S05
                                    customerReference: '234242'
                                    payer:
                                        customerNumber: 563457
                                        companyRegistrationNumber: '5646903690'
                                        companyName: Company International Ltd
                                        department: Support
                                        firstName: Ola
                                        middleName: Fjordstrand
                                        lastName: Nordmann
                                        coAddress: Nedre Vollsgate XII
                                        street: Grubbegata
                                        streetNumber: 6
                                        entrance: A
                                        floor: 6
                                        postalCode: 0179
                                        postalPlace: Oslo
                                        postalAddress: Postboks 265 Økern
                                        postalAddressPostalCode: '0510'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        emails:
                                            - ola.nordmann@company.com
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4723339100'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: WMDigi
                                            productSpecNo: 5223
                                            product: ''
                                            quantity: 1
                                            unitPrice: 295
                                            voucherCode: '34572'
                                            allowAccessProduct: CO27409
                                            allowAccessSeconds: 259200
                                            rewardPartnerId: 3567
                                            rewardId: '2'
                                    recurring: true
                                    prepaid: true
                                    paymentInfoKCO:
                                        recurringToken: ayh2a8cd7-a672-4bd1-b1ee-0188238394bc
                                        klarnaReference: 29ACD8HA
                                        klarnaOrderId: 77a9aef5-9v88-094b-9de0-f1d83c1ec3f5
                                        merchantId: PK07982_de8cdb673d55
                                        cardNumberMasked: '**********3849'
                                        cardExpiryDate: 06/2021
                                        cardBrand: VISA
                            PayEx recurring payment:
                                description: An example of recurring payment via PayEx. The order is prepaid.
                                value:
                                    orderDate: 1559076400
                                    paymentMethod: creditcardPayex
                                    orderAmount: 150
                                    currency: NOK
                                    seller: S05
                                    customerReference: '234242'
                                    payer:
                                        customerNumber: 563457
                                        companyRegistrationNumber: '5646903690'
                                        companyName: Company International Ltd
                                        department: Support
                                        firstName: Ola
                                        middleName: Fjordstrand
                                        lastName: Nordmann
                                        coAddress: Nedre Vollsgate XII
                                        street: Grubbegata
                                        streetNumber: 6
                                        entrance: A
                                        floor: 6
                                        postalCode: 0179
                                        postalPlace: Oslo
                                        postalAddress: Postboks 265 Økern
                                        postalAddressPostalCode: '0510'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        emails:
                                            - ola.nordmann@company.com
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4723339100'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: WMDigi
                                            productSpecNo: 5223
                                            product: ''
                                            quantity: 1
                                            unitPrice: 295
                                            voucherCode: '34577'
                                            allowAccessProduct: CO27409
                                            allowAccessSeconds: 259200
                                            rewardPartnerId: 3567
                                            rewardId: '2'
                                    recurring: true
                                    prepaid: true
                                    paymentInfoPayEx:
                                        transactionId: '472'
                                        merchantId: '54823419'
                                        recurrenceToken: 7b9nwomhbok
                                        cardDetails:
                                            cardMaskedPan: '****-******-8271'
                                            expMonth: '10'
                                            expYear: '24'
                                            issuingBank: Mastercard
                                            cardBrand: Mastercard
                                            isPanEnrolled: true
                            Other payment:
                                description: >-
                                    An example of payment based on own integration with payment provider. The
                                    order is prepaid.
                                value:
                                    orderDate: 1559076400
                                    paymentMethod: creditcardPayex
                                    orderAmount: 150
                                    currency: NOK
                                    seller: S05
                                    customerReference: '234242'
                                    payer:
                                        customerNumber: 563457
                                        companyRegistrationNumber: '5646903690'
                                        companyName: Company International Ltd
                                        department: Support
                                        firstName: Ola
                                        middleName: Fjordstrand
                                        lastName: Nordmann
                                        coAddress: Nedre Vollsgate XII
                                        street: Grubbegata
                                        streetNumber: 6
                                        entrance: A
                                        floor: 6
                                        postalCode: 0179
                                        postalPlace: Oslo
                                        postalAddress: Postboks 265 Økern
                                        postalAddressPostalCode: '0510'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        emails:
                                            - ola.nordmann@company.com
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4723339100'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: WMDigi
                                            productSpecNo: 5223
                                            product: ''
                                            quantity: 1
                                            unitPrice: 295
                                            voucherCode: '34577'
                                            allowAccessProduct: CO27409
                                            allowAccessSeconds: 259200
                                            rewardPartnerId: 3567
                                            rewardId: '2'
                                    recurring: false
                                    prepaid: true
                                    paymentInfoOther:
                                        transactionId: '472'
                                        merchantId: '54823419'
                                        description: Own integration with Klarna
            tags:
                - Order
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-RegisterOrder-response'
                            examples:
                                Example 1:
                                    value:
                                        orderId: 9
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            operationId: orderclient
            summary: Register order - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n\r\nAPI for creating an order. The order can contain one or more lines. Each line may contain a receiver. If Marketing coupon is used both marketing coupon, i.e `marketingCouponCode` and `marketingCouponNumber`, fields are required.\r\n\r\nThere are several possible payment methods. Payment provider configuration is needed to use these payment methods, excluding free and invoice. In order to set up this configuration, please contact Mediaconnect by sending an email to Support at Mediaconnect. Some of the payment providers support recurring payment and prepayment, see the table below.\r\n\r\n<table>\r\n  <tr>\r\n    <th>paymentMethod</th>\r\n    <th> recurring=true</th>\r\n    <th>recurring=false</th>\r\n    <th>prepaid=true</th>\r\n    <th>prepaid=false</th>\r\n  </tr>\r\n  <tr>\r\n    <td>creditcard (Nets)</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n  </tr>\r\n  <tr>\r\n    <td>invoice</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td></td>\r\n    <td>&#x2714;</td>\r\n  </tr>\r\n  <tr>\r\n    <td>sms (Link Mobility)</td>\r\n    <td>&#x2714;</td>\r\n    <td></td>\r\n    <td></td>\r\n    <td>&#x2714;</td>\r\n  </tr>\r\n  <tr>\r\n    <td>smsPay</td>\r\n    <td></td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>vippsRecurring <br/>(Faste betalinger med Vipps)</td>\r\n    <td>&#x2714;</td>\r\n    <td></td>\r\n    <td></td>\r\n    <td>&#x2714;</td>\r\n  </tr>\r\n  <tr>\r\n    <td>kco (Klarna)</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n  </tr>\r\n  <tr>\r\n    <td>creditcardPayex</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n  </tr>\r\n  <tr>\r\n    <td>swishPayex</td>\r\n    <td></td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n  </tr>\r\n<tr>\r\n    <td>other</td>\r\n    <td></td>\r\n    <td>&#x2714;</td>\r\n    <td>&#x2714;</td>\r\n    <td></td>\r\n  </tr>\r\n</table>\r\n\r\n**Commonly required fields:**\r\n\r\n* `companyName` or `lastName`\r\n* `postalCode`\r\n* `emails` or `phoneNumbers`\r\n\r\nAfter placing an order to the client order API, the order needs to be fulfilled. This can be done either with a redirect or using an API call.\r\nThe specific use-case dictates whether how the fulfillment process can be performed. If the fulfillment includes an interactive payment process (e.g. card payment), the redirect must be used. If the order is prepaid, or does not involve the user for payment (e.g. invoice), the API for fulfillment may be used.\r\n\r\nFor the redirect case, the user must be redirected to the URL for fulfillment (https://connectid.no/user/fulfillment or https://connectid.se/user/fulfillment). Depending on the payment method on the order the user will be further redirected to an external payment service.\r\nRead more about [fulfillment URL](#section/About-the-URLs/URL:-fulfillment).\r\n\r\nThe API endpoint for fulfillment is described [here](#tag/Fulfillment/paths/~1v1~1client~1order~1fulfillment/post).\r\n\r\n"
    /v1/order:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Model-RegisterOrder-request'
                        examples:
                            Self-pay customer:
                                description: >-
                                    A self-pay customer is a customer who are payer and receiver. Only payer
                                    is required and receiver is not relevant here. 
                                value:
                                    externalOrderId: '23456'
                                    orderDate: 1570658400
                                    paymentMethod: creditcard
                                    orderAmount: 150
                                    currency: NOK
                                    marketingCouponCode: NOA3263
                                    marketingCouponNumber: 51
                                    companyCode: '468979834'
                                    seller: AY
                                    payer:
                                        customerNumber: 71
                                        personsSocialSecurityNumber: 890102-3286
                                        firstName: Kari
                                        middleName: Snøhaug
                                        lastName: Nordmann
                                        street: Osloveien
                                        streetNumber: 12
                                        floor: 3
                                        postalCode: '0101'
                                        postalPlace: Oslo
                                        postalAddress: Postboks 6
                                        postalAddressPostalCode: '0216'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 438649200
                                        sex: female
                                        emails:
                                            - kari.nordmann@gmail.com
                                        phoneNumbers:
                                            - '+4787654321'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: VS283
                                            productSpecNo: 1673
                                            quantity: 1
                                            unitPrice: 150
                                            voucherCode: '582358'
                                            allowAccessProduct: '29452'
                                            allowAccessSeconds: 259200
                                            startInfo:
                                                startIssue: 2019-10
                                    recurring: true
                                    paymentInfo:
                                        ticket: 7b9nwomhbok
                                        cardNumberMasked: xxxx-xxxxxx-x8271
                                        expMonth: '10'
                                        expYear: '19'
                                        cardTypeName: Mastercard
                                        transactionId: '472'
                                        merchantId: '54823419'
                                        ticketMerchantId: '54823419'
                                        secure3d: true
                                        verificationIdPresent: true
                                        enrolled: true
                            Business customer:
                                description: An example of business customer.
                                value:
                                    externalOrderId: '2342'
                                    orderDate: 1559372400000
                                    paymentMethod: kco
                                    orderAmount: 295
                                    currency: NOK
                                    marketingCouponCode: CN3759
                                    marketingCouponNumber: 2
                                    companyCode: '468979834'
                                    seller: S05
                                    customerReference: '234242'
                                    payer:
                                        customerNumber: 563457
                                        companyRegistrationNumber: '5646903690'
                                        companyName: Company International Ltd
                                        department: Support
                                        firstName: Ola
                                        middleName: Fjordstrand
                                        lastName: Nordmann
                                        coAddress: Nedre Vollsgate XII
                                        street: Grubbegata
                                        streetNumber: 6
                                        entrance: A
                                        floor: 6
                                        postalCode: 0179
                                        postalPlace: Oslo
                                        postalAddress: Postboks 265 Økern
                                        postalAddressPostalCode: '0510'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        sex: unknown
                                        emails:
                                            - ola.nordmann@company.com
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4723339100'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: WMDigi
                                            productSpecNo: 5223
                                            product: ''
                                            quantity: 1
                                            unitPrice: 295
                                            voucherCode: '34572'
                                            allowAccessProduct: CO27409
                                            allowAccessSeconds: 259200
                                            rewardPartnerId: 3567
                                            rewardId: '2'
                                    recurring: true
                                    prepaid: true
                                    paymentInfoKCO:
                                        recurringToken: ayh2a8cd7-a672-4bd1-b1ee-0188238394bc
                                        klarnaReference: 29ACD8HA
                                        klarnaOrderId: 77a9aef5-9v88-094b-9de0-f1d83c1ec3f5
                                        merchantId: PK07982_de8cdb673d55
                                        cardNumberMasked: '**********3849'
                                        cardExpiryDate: 06/2021
                                        cardBrand: VISA
                            Gift:
                                description: >-
                                    The payer and receiver are two different persons. The payer and receiver
                                    are required here.
                                value:
                                    orderDate: 1568109600
                                    paymentMethod: invoice
                                    orderAmount: 199
                                    currency: NOK
                                    payer:
                                        customerNumber: 26
                                        firstName: Finn
                                        lastName: Nordmann
                                        street: Brugata
                                        streetNumber: 66
                                        floor: 4
                                        postalCode: 0385
                                        postalPlace: Oslo
                                        postalAddress: Postboks 7
                                        postalAddressPostalCode: 0385
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 716119200
                                        sex: male
                                        emails:
                                            - finn@mediaconnect.no
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4714567899'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: VJ4824
                                            productSpecNo: 63
                                            quantity: 1
                                            unitPrice: 199
                                            voucherCode: '57392'
                                            allowAccessProduct: DV373592
                                            allowAccessSeconds: 2542300
                                            startInfo:
                                                startDate: 1568109600
                                            rewardPartnerId: 7642
                                            rewardId: '63'
                                            receiver:
                                                customerNumber: 84
                                                firstName: Else
                                                lastName: Nordmann
                                                street: Bergensgata
                                                streetNumber: 2
                                                floor: 2
                                                postalCode: '5026'
                                                postalPlace: Bergen
                                                postalAddress: Bergensgata 5
                                                postalAddressPostalCode: '5026'
                                                postalAddressPostalPlace: Bergen
                                                countryCode: 'NO'
                                                birthDate: 676591200
                                                sex: female
                                                emails:
                                                    - else.nordmann@email.com
                                                phoneNumbers:
                                                    - '+4732165498'
                            Creditcard recurring payment via Nets:
                                description: An example of recurring payment via Nets. The order is not prepaid.
                                value:
                                    externalOrderId: '23456'
                                    orderDate: 1570658400
                                    paymentMethod: creditcard
                                    orderAmount: 150
                                    currency: NOK
                                    marketingCouponCode: NOA3263
                                    marketingCouponNumber: 51
                                    companyCode: '468979834'
                                    seller: AY
                                    payer:
                                        customerNumber: 71
                                        firstName: Kari
                                        middleName: Snøhaug
                                        lastName: Nordmann
                                        street: Osloveien
                                        streetNumber: 12
                                        floor: 3
                                        postalCode: '0101'
                                        postalPlace: Oslo
                                        postalAddress: Postboks 6
                                        postalAddressPostalCode: '0216'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 438649200
                                        sex: female
                                        emails:
                                            - kari.nordmann@gmail.com
                                        phoneNumbers:
                                            - '+4787654321'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: VS283
                                            productSpecNo: 1673
                                            quantity: 1
                                            unitPrice: 150
                                            voucherCode: '582358'
                                            allowAccessProduct: '29452'
                                            allowAccessSeconds: 259200
                                            startInfo:
                                                startIssue: 2019-10
                                    recurring: true
                                    prepaid: false
                                    paymentInfo:
                                        ticket: 7b9nwomhbok
                                        cardNumberMasked: xxxx-xxxxxx-x8271
                                        expMonth: '10'
                                        expYear: '19'
                                        cardTypeName: Mastercard
                                        transactionId: '472'
                                        merchantId: '54823419'
                                        ticketMerchantId: '54823419'
                                        secure3d: true
                                        verificationIdPresent: true
                                        enrolled: true
                            Invoice:
                                value:
                                    orderDate: 1570112600
                                    paymentMethod: invoice
                                    orderAmount: 698
                                    currency: NOK
                                    payer:
                                        customerNumber: 19
                                        firstName: Bjørn
                                        lastName: Nordmann
                                        street: Trondheimsvegen
                                        streetNumber: 24
                                        floor: 1
                                        postalCode: '7023'
                                        postalPlace: Trondheim
                                        postalAddress: Postboks 7
                                        postalAddressPostalCode: 0385
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 163119600
                                        sex: female
                                        emails:
                                            - bjorn.nordmann@email.no
                                        phoneNumbers:
                                            - '+4777777777'
                                    orderLines:
                                        -
                                            productSpecType: issue
                                            productSpecCode: KSDAT
                                            productSpecNo: 523
                                            product: KAT
                                            quantity: 2
                                            unitPrice: 349
                                            allowAccessProduct: DV373592
                                            allowAccessSeconds: 2542300
                                            rewardPartnerId: 7642
                                            rewardId: '63'
                            Vipps recurring payment:
                                description: >-
                                    An example of recurring payment via Faste betalinger med Vipps. The order
                                    is not prepaid.
                                value:
                                    orderDate: 1542744400
                                    paymentMethod: vippsRecurring
                                    orderAmount: 130
                                    currency: NOK
                                    companyCode: '461182373'
                                    seller: SB
                                    payer:
                                        customerNumber: 11
                                        firstName: Ola
                                        lastName: Nordmann
                                        street: Drammensveien
                                        streetNumber: 11
                                        postalCode: '0202'
                                        postalPlace: Oslo
                                        countryCode: 'NO'
                                        birthDate: 438649200
                                        sex: male
                                        emails:
                                            - ola.nordmann@gmail.com
                                        phoneNumbers:
                                            - '+4787654321'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: KB937
                                            productSpecNo: 1349
                                            quantity: 1
                                            unitPrice: 130
                                            allowAccessProduct: '48229'
                                            allowAccessSeconds: 259200
                                            startInfo:
                                                startDate: 1542744400
                                    recurring: true
                                    prepaid: false
                            Klarna recurring payment:
                                description: An example of recurring payment via Klarna. The order is prepaid.
                                value:
                                    orderDate: 1558076400
                                    paymentMethod: kco
                                    orderAmount: 295
                                    currency: NOK
                                    seller: S05
                                    customerReference: '234242'
                                    payer:
                                        customerNumber: 563457
                                        companyRegistrationNumber: '5646903690'
                                        companyName: Company International Ltd
                                        department: Support
                                        firstName: Ola
                                        middleName: Fjordstrand
                                        lastName: Nordmann
                                        coAddress: Nedre Vollsgate XII
                                        street: Grubbegata
                                        streetNumber: 6
                                        entrance: A
                                        floor: 6
                                        postalCode: 0179
                                        postalPlace: Oslo
                                        postalAddress: Postboks 265 Økern
                                        postalAddressPostalCode: '0510'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        emails:
                                            - ola.nordmann@company.com
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4723339100'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: WMDigi
                                            productSpecNo: 5223
                                            product: ''
                                            quantity: 1
                                            unitPrice: 295
                                            voucherCode: '34572'
                                            allowAccessProduct: CO27409
                                            allowAccessSeconds: 259200
                                            rewardPartnerId: 3567
                                            rewardId: '2'
                                    recurring: true
                                    prepaid: true
                                    paymentInfoKCO:
                                        recurringToken: ayh2a8cd7-a672-4bd1-b1ee-0188238394bc
                                        klarnaReference: 29ACD8HA
                                        klarnaOrderId: 77a9aef5-9v88-094b-9de0-f1d83c1ec3f5
                                        merchantId: PK07982_de8cdb673d55
                                        cardNumberMasked: '**********3849'
                                        cardExpiryDate: 06/2021
                                        cardBrand: VISA
                            PayEx recurring payment:
                                description: An example of recurring payment via PayEx. The order is prepaid.
                                value:
                                    orderDate: 1558076400
                                    paymentMethod: creditcardPayex
                                    orderAmount: 295
                                    currency: NOK
                                    seller: S05
                                    customerReference: '234242'
                                    payer:
                                        customerNumber: 563457
                                        companyRegistrationNumber: '5646903690'
                                        companyName: Company International Ltd
                                        department: Support
                                        firstName: Ola
                                        middleName: Fjordstrand
                                        lastName: Nordmann
                                        coAddress: Nedre Vollsgate XII
                                        street: Grubbegata
                                        streetNumber: 6
                                        entrance: A
                                        floor: 6
                                        postalCode: 0179
                                        postalPlace: Oslo
                                        postalAddress: Postboks 265 Økern
                                        postalAddressPostalCode: '0510'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        emails:
                                            - ola.nordmann@company.com
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4723339100'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: WMDigi
                                            productSpecNo: 5223
                                            product: ''
                                            quantity: 1
                                            unitPrice: 295
                                            voucherCode: '34572'
                                            allowAccessProduct: CO27409
                                            allowAccessSeconds: 259200
                                            rewardPartnerId: 3567
                                            rewardId: '2'
                                    recurring: true
                                    prepaid: true
                                    paymentInfoPayEx:
                                        transactionId: '472'
                                        merchantId: '54823419'
                                        recurrenceToken: 7b9nwomhbok
                                        cardDetails:
                                            cardMaskedPan: '****-******-8271'
                                            expMonth: '10'
                                            expYear: '24'
                                            issuingBank: Mastercard
                                            cardBrand: Mastercard
                                            isPanEnrolled: true
                            Other payment:
                                description: >-
                                    An example of payment based on own integration with payment provider. The
                                    order is prepaid.
                                value:
                                    orderDate: 1559076400
                                    paymentMethod: creditcardPayex
                                    orderAmount: 150
                                    currency: NOK
                                    seller: S05
                                    customerReference: '234242'
                                    payer:
                                        customerNumber: 563457
                                        companyRegistrationNumber: '5646903690'
                                        companyName: Company International Ltd
                                        department: Support
                                        firstName: Ola
                                        middleName: Fjordstrand
                                        lastName: Nordmann
                                        coAddress: Nedre Vollsgate XII
                                        street: Grubbegata
                                        streetNumber: 6
                                        entrance: A
                                        floor: 6
                                        postalCode: 0179
                                        postalPlace: Oslo
                                        postalAddress: Postboks 265 Økern
                                        postalAddressPostalCode: '0510'
                                        postalAddressPostalPlace: Oslo
                                        countryCode: 'NO'
                                        emails:
                                            - ola.nordmann@company.com
                                        phoneNumbers:
                                            - '+4712345678'
                                            - '+4723339100'
                                    orderLines:
                                        -
                                            productSpecType: coupon
                                            productSpecCode: WMDigi
                                            productSpecNo: 5223
                                            product: ''
                                            quantity: 1
                                            unitPrice: 295
                                            voucherCode: '34577'
                                            allowAccessProduct: CO27409
                                            allowAccessSeconds: 259200
                                            rewardPartnerId: 3567
                                            rewardId: '2'
                                    recurring: false
                                    prepaid: true
                                    paymentInfoOther:
                                        transactionId: '472'
                                        merchantId: '54823419'
                                        description: Own integration with Klarna
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Model-RegisterOrder-request'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<order>\r\n    <externalOrderId>2342</externalOrderId>\r\n    <orderDate>2019-06-01T09:00:00.000+0000</orderDate>\r\n    <paymentMethod>creditcard</paymentMethod>\r\n    <orderAmount>295</orderAmount>\r\n    <currency>NOK</currency>\r\n    <marketingCouponCode>CN3759</marketingCouponCode>\r\n    <marketingCouponNumber>2</marketingCouponNumber>\r\n    <companyCode>468979834</companyCode>\r\n    <customerReference>234242</customerReference>\r\n    <seller>S05</seller>\r\n    <payer>\r\n        <customerNumber>563457</customerNumber>\r\n        <companyRegistrationNumber>5646903690</companyRegistrationNumber>\r\n        <companyName>Company International Ltd</companyName>\r\n        <department>Support</department>\r\n        <personsSocialSecurityNumber>890102-3286</personsSocialSecurityNumber>\r\n        <firstName>Ola</firstName>\r\n        <middleName>Fjordstrand</middleName>\r\n        <lastName>Nordmann</lastName>\r\n        <coAddress>Nedre Vollsgate XII</coAddress>\r\n        <street>Grubbegata</street>\r\n        <streetNumber>6</streetNumber>\r\n        <entrance>A</entrance>\r\n        <floor>6</floor>\r\n        <postalCode>0179</postalCode>\r\n        <postalPlace>Oslo</postalPlace>\r\n        <postalAddress>Postboks 265 Økern</postalAddress>\r\n        <postalAddressPostalCode>0510</postalAddressPostalCode>\r\n        <postalAddressPostalPlace>Oslo</postalAddressPostalPlace>\r\n        <countryCode>NO</countryCode>\r\n        <sex>unknown</sex>\r\n        <emails>\r\n            <email>ola.nordmann@company.com</email>\r\n        </emails>\r\n        <phoneNumbers>\r\n            <phoneNumber>+4745678901</phoneNumber>\r\n            <phoneNumber>+4722339100</phoneNumber>\r\n        </phoneNumbers>\r\n    </payer>\r\n    <orderLines>\r\n        <productSpecType>coupon</productSpecType>\r\n        <productSpecCode>WMDigi</productSpecCode>\r\n        <productSpecNo>5223</productSpecNo>\r\n        <quantity>1</quantity>\r\n        <unitPrice>295</unitPrice>\r\n        <voucherCode>34572</voucherCode>\r\n        <allowAccessProduct>CO27409</allowAccessProduct>\r\n        <allowAccessSeconds>259200</allowAccessSeconds>\r\n        <rewardPartnerId>3597</rewardPartnerId>\r\n        <rewardId>2</rewardId>\r\n    </orderLines>\r\n    <recurring>true</recurring>\r\n    <prepaid>false</prepaid>\r\n    <paymentinfo>\r\n        <ticket>4v8nwodhfja</ticket>\r\n        <cardNumberMasked>xxxx-xxxxxx-x2348</cardNumberMasked>\r\n        <expMonth>12</expMonth>\r\n        <expYear>18</expYear>\r\n        <cardTypeName>VISA</cardTypeName>\r\n        <transactionId>32</transactionId>\r\n        <merchantId>45723589</merchantId>\r\n        <ticketMerchantId>45723589</ticketMerchantId>\r\n        <secure3d>true</secure3d>\r\n        <verificationIdPresent>true</verificationIdPresent>\r\n        <enrolled>true</enrolled>\r\n    </paymentinfo>\r\n</order>"
            tags:
                - Order
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-RegisterOrder-response'
                            examples:
                                Example 1:
                                    value:
                                        orderId: 9
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-RegisterOrder-response'
                            examples:
                                Example 1:
                                    value: |-
                                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                                        <orderResponse>
                                            <orderId>9</orderId>
                                        </orderResponse>
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            operationId: order
            summary: Register order
            description: >
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                API for creating an order. The order can contain one or more lines. Each line may contain a
                receiver. If Marketing coupon is used both marketing coupon, i.e `marketingCouponCode` and
                `marketingCouponNumber`, fields are required. 


                There are several possible payment methods. Payment provider configuration is needed to use
                these payment methods, excluding free and invoice. In order to set up this configuration,
                please contact Mediaconnect by sending an email to Support at Mediaconnect. Some of the
                payment providers support recurring payment and prepayment, see the table below.


                <table>
                  <tr>
                    <th>paymentMethod</th>
                    <th> recurring=true</th>
                    <th>recurring=false</th>
                    <th>prepaid=true</th>
                    <th>prepaid=false</th>
                  </tr>
                  <tr>
                    <td>creditcard (Nets)</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                  </tr>
                  <tr>
                    <td>invoice</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td></td>
                    <td>&#x2714;</td>
                  </tr>
                  <tr>
                    <td>sms (Link Mobility)</td>
                    <td>&#x2714;</td>
                    <td></td>
                    <td></td>
                    <td>&#x2714;</td>
                  </tr>
                  <tr>
                    <td>smsPay</td>
                    <td></td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td></td>
                  </tr>
                  <tr>
                    <td>vippsRecurring <br/>(Faste betalinger med Vipps)</td>
                    <td>&#x2714;</td>
                    <td></td>
                    <td></td>
                    <td>&#x2714;</td>
                  </tr>
                  <tr>
                    <td>kco (Klarna)</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                  </tr>
                  <tr>
                    <td>creditcardPayex</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                  </tr>
                  <tr>
                    <td>swishPayex</td>
                    <td></td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                  </tr>  
                  <tr>
                    <td>other</td>
                    <td></td>
                    <td>&#x2714;</td>
                    <td>&#x2714;</td>
                    <td></td>
                  </tr>
                </table>


                **Commonly required fields:**


                * `companyName` or `lastName`

                * `postalCode`

                * `emails` or `phoneNumbers`


                After placing an order to the client order API, the order needs to be fulfilled. This can be
                done either with a redirect or using an API call.

                The specific use-case dictates whether how the fulfillment process can be performed. If the
                fulfillment includes an interactive payment process (e.g. card payment), the redirect must be
                used. If the order is prepaid, or does not involve the user for payment (e.g. invoice), the
                API for fulfillment may be used.


                For the redirect case, the user must be redirected to the URL for fulfillment
                (https://connectid.no/user/fulfillment or https://connectid.se/user/fulfillment). Depending on
                the payment method on the order the user will be further redirected to an external payment
                service.

                Read more about [fulfillment URL](#section/About-the-URLs/URL:-fulfillment).


                The API endpoint for fulfillment is described
                [here](#tag/Fulfillment/paths/~1v1~1client~1order~1fulfillment/post).
    /v1/customer/ticket/add:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddTicket-request'
                        examples:
                            Example 1:
                                value:
                                    transactionType: creditCard
                                    productCode: CO27409
            tags:
                - Ticket
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddTicket-response'
                            examples:
                                Example 1:
                                    value:
                                        success: true
                                        transactionId: 12378954
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Add ticket
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nUse the id from the response to complete the adding the card by redirecting the customer to ``loginServer/ticket/add?clientId=…&returnUrl=….&errorUrl=…..&transactionId=12378954``. The system will redirect the customer to the proper third-party system for the change, and upon success will then redirect to the given ``returnUrl``. If an system error occurs, the given ``errorUrl`` will be used instead.\r\n\r\nIn addition to return url will be returned the result of operation:\r\n\r\n* **finished** - if ticket was registered correctly,\r\n* **cancelled** - user cancelled the adding the ticket, ticket is not added,\r\n* **failed** - it was not possible to create a ticket, adding of ticket fails,\r\n* **unknown** - unknown status of operation,\r\n* **initiated** - creation of ticket was initiated,\r\n* **error** - never shall happen, instead shall go to `errorUrl`."
    /v1/customer/ticket:
        get:
            tags:
                - Ticket
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTickets-response'
                            examples:
                                Example 1:
                                    value:
                                        paymentTickets:
                                            -
                                                ticket: 4v8nwodhfja
                                                merchantId: '45723589'
                                                productCode: CO27409
                                                maskedCardNumber: xxxx-xxxxxx-x2348
                                                expirationMonth: '12'
                                                expirationYear: '18'
                                                cardTypeName: VISA
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List tickets
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nInformation and functions related to recurring payment tickets.\r\n\r\nProduces a list with tickets related to users Connect customer. Response is based on tickets registered in ConnectID, i.e tickets received from Connect and stored in ConnectID. Only tickets marked as valid are returned."
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterTicket-request'
                        examples:
                            Example 1:
                                value:
                                    ticket: 4v8nwodhfja
                                    merchantId: '45723589'
                                    productCode: CO27409
                                    maskedCardNumber: xxxx-xxxxxx-x2348
                                    expirationMonth: '12'
                                    expirationYear: '18'
                                    cardTypeName: VISA
            tags:
                - Ticket
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterTicket-response'
                            examples:
                                Example 1:
                                    value:
                                        result: true
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: Register ticket
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                This API register a new payment ticket in Connect. The ticket is linked to users Connect
                customer.
    '/v1/customer/issues/{productCode}':
        get:
            tags:
                - Issue
            parameters:
                -
                    name: productCode
                    description: Response includes issues for selected subscription product.
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListIssuesCustomerMode-response'
                            examples:
                                Example 1:
                                    value:
                                        deliveredIssues:
                                            -
                                                issue: 2019-06
                                                distributedDate: 1561035361000
                                            -
                                                issue: 2019-07
                                                distributedDate: 1563627361000
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List issues
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                This API returns customer issues for subscription product.
    '/v1/client/issues/{productCode}':
        get:
            tags:
                - Issue
            parameters:
                -
                    name: productCode
                    description: Response include issues for all products if missing.
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: false
                -
                    name: from
                    description: "If date is specified, then from this date will be issues returned (if to date is not specified then will be one year from that date ).\r\n\r\n Specify the date in format: YYYY-MM-DD."
                    schema:
                        maxLength: 10
                        type: string
                    in: query
                -
                    name: to
                    description: "If date is specified then up this date will be returned issues (if from date is not specified then will be one year before that date).\r\n\r\nSpecify the date in format: YYYY-MM-DD."
                    schema:
                        maxLength: 10
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListIssuesClientMode-response'
                            examples:
                                Example 1:
                                    value:
                                        issues:
                                            -
                                                productId: CO27409
                                                productType: subscription
                                                subscriptionIssues:
                                                    -
                                                        issue: 2019-06
                                                        publicationTime: 1561035361000
                                                    -
                                                        issue: 2019-07
                                                        publicationTime: 1563627361000
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List issues - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                This API returns all issues for subscription products. If product is a series product, all
                issues for series is return. If ordinary subscription product, all issues within one year is
                returned (i.e one year from current time).
    /v1/customer/order/product/history:
        get:
            tags:
                - Order
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrderProductHistory-response'
                            examples:
                                Example 1:
                                    value:
                                        orders:
                                            -
                                                amount: 500
                                                companyCode: FTOTT
                                                customerNumber: 371
                                                description: Hjemmedrakt 07/08 S
                                                invoiceDate: 1198018800000
                                                invoiceHotelUrl: >-
                                                    https://invoice.mediaconnect.no/view/c3743c8162bf474291c6a7cbb5af80e6
                                                invoiceNumber: 7231
                                                invoiceStatus: invoiced
                                                orderDate: 1197500400000
                                                orderNumber: 44
                                                vat: 100
                                                target: C
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List order product history
            description: >
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Use this API to get a list of purchase history on order product (enkeltordre)
    '/v1/customer/invoice/payment/{product}':
        get:
            tags:
                - Invoice
            parameters:
                -
                    name: product
                    description: product code
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: false
                -
                    name: unpaid
                    description: |-
                        Specifies if invoices returned should include unpaid invoices

                        - **true**: The invoice list includes all invoices.
                        - **false**: The invoice list only includes paid invoices.
                    schema:
                        type: boolean
                    in: query
                    required: false
                -
                    name: from
                    description: "If date is specified, then from this date will be invoices/payments returned\r\n\r\nIf no dates are specified then will be returned last invoice for given (first) product on invoice.\r\n\r\n Specify the date in format: YYYY-MM-DD."
                    schema:
                        maxLength: 10
                        type: string
                    in: query
                    required: false
                -
                    name: to
                    description: "If date is specified then up this date will be returned invoices/payments.\r\n\r\n Specify the date in format: YYYY-MM-DD."
                    schema:
                        maxLength: 10
                        type: string
                    in: query
                    required: false
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInvoices-response'
                            examples:
                                Example 1:
                                    value:
                                        invoices:
                                            -
                                                customerNumber: 563457
                                                product: CO27409
                                                productName: Weekly Magazine
                                                amount: 49
                                                invoiceDate: 1560333600
                                                invoiceNumber: '7435367'
                                                invoiceOfferCount: '1'
                                                companyCode: '5646903690'
                                                paymentDate: 1561716000
                                                dueDate: 1561716000
                                                paymentStatus: '0'
                                                invoiceAmount: '295.00'
                                                paidAmount: 0
                                                paymentMethod: A
                                                invoiceHotelUrl: >-
                                                    http://mediaconnect.no/invoice/view/gkcb93qgt94ca6943bloitxgq4de
                                                invoiceStatus: Invoiced
                                        reminders:
                                            -
                                                invoiceNumber: 7435367
                                                product: CO27409
                                                fromTime: 2021-15
                                                includeTime: 2021-15
                                                reminderDate: 1560333600
                                                amount: 49
                                                dueDate: 1561716000
                                                reminderNumber: 1
                                                reminderType: reminder
                                                invoiceHotelUrl: >-
                                                    http://mediaconnect.no/invoice/view/gkcb93qgt94ca6943bloitxgq4de
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List invoices and reminders
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nInvoice, invoice payments API for customer.\r\n\r\nIn response is returned list of invoiced products for customer. This is also payments info if paid amount is specified."
    /v1/customer/payment/vipps/agreement:
        get:
            tags:
                - Vipps
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListVippsAgreement-response'
                            examples:
                                Vipps agreement response example:
                                    value:
                                        recurringAgreements:
                                            -
                                                agreementRef: abcd-efgh
                                                paymentProviderId: 55
                                                productCode: CO27409
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: VALIDATION
                                        errorMessage: 'Error message here, e.g. missing field'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: SEVERE
                                        errorMessage: 'Error message here, i.e unhandled exception'
                    description: Internal Server Error
            summary: List vipps agreements
            description: "The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to read more.\r\n\r\nProduces a list with Vipps recurring agreements. Only agreements marked as valid are returned."
    /v1/client/message/:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendMessageClientMode-Request'
                        examples:
                            Example 1:
                                value:
                                    product: CO27409
                                    caseType: B
                                    messageSubject: cancel
                                    messageContent: Cancel my subscription
            tags:
                - Message
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Message-response'
                            examples:
                                Example 1:
                                    value:
                                        messages:
                                            -
                                                id: 6
                                                date: 1560763683000
                                                direction: IN
                                                messageSubject: creditcard
                                                messageContent: Can I pay with creditcard?
                                            -
                                                id: 6
                                                date: 1560855204000
                                                direction: OUT
                                                messageSubject: creditcard
                                                messageContent: 'Yes, you can.'
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: VALIDATION
                                        errorMessage: 'Error message here, e.g. missing field'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value:
                                        uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                                        exceptionType: SEVERE
                                        errorMessage: 'Error message here, i.e unhandled exception'
                    description: Internal Server Error
            summary: Send message - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n\r\nMessage API to send message to customer service."
    '/v1/client/order/status/{orderId}':
        get:
            tags:
                - Order
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListOrderStatus'
                            examples:
                                Example 1:
                                    value:
                                        orders:
                                            -
                                                orderId: 9
                                                externalOrderId: '2342'
                                                orderTime: 1559372400000
                                                orderStatus: preliminary
                                                orderAmount: 295
                                                customerNumber: 563457
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List order status - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                Use this API to get basic status regarding an order.
        parameters:
            -
                name: orderId
                description: ConnectID order id is used to identify an order.
                schema:
                    type: string
                in: path
                required: true
    '/v1/client/address/{queryType}/{customernumber}/{product}/{numberOfLines}':
        get:
            tags:
                - Address
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListAddress'
                            examples:
                                Example 1:
                                    value:
                                        addressList:
                                            -
                                                product: CO27409
                                                addressType: Delivery
                                                id: 243
                                                streetAddress: Grubbegata
                                                streetNumber: 6
                                                entrance: A
                                                floor: 6
                                                postalCode: '0510'
                                                postalPlace: Oslo
                                                postalAddress: Postboks 265 Økern
                                                countryCode: 'NO'
                                                period:
                                                    startTime: 1561035160000
                                                    endTime: 1566305560000
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                    description: Internal Server Error
            deprecated: false
            summary: List addresses - client mode
            description: >-
                Only the client needs to be logged in to use this endpoint. The user does not need to be
                logged in, [click here](#section/About-the-Client-Mode) to read more.


                Address API for current and future temporary or permanent address changes. API is also used to
                get info on the current address/delivery address and existing changes.
        parameters:
            -
                name: queryType
                description: |-
                    * **currentAddress**: Get the current home(/delivery) address  
                    * **historicalAddress**: Get historical address items  
                    * **futureAddressChange**: Get future address changes  
                    * **all**: Get all address items
                schema:
                    enum:
                        - currentAddress
                        - historicalAddress
                        - futureAddressChange
                        - all
                    type: string
                in: path
                required: true
            -
                name: customernumber
                description: Customer number is the customer identification.
                schema:
                    type: integer
                in: path
                required: true
            -
                name: product
                description: Product is an optional parameter that limits the response to a specific product.
                schema:
                    maxLength: 12
                    type: string
                in: path
                required: false
            -
                name: numberOfLines
                description: Number of lines included in the response.
                schema:
                    default: 20
                    type: integer
                in: path
                required: false
    '/v1/customer/address/{queryType}/{product}/{numberOfLines}':
        get:
            tags:
                - Address
            parameters:
                -
                    name: product
                    description: |-
                        The product code


                        This element is an optional parameter that limits the response to a specific product.
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: false
                -
                    name: queryType
                    description: |-
                        * **currentAddress**: Get the current home(/delivery) address  
                        * **historicalAddress**: Get historical address items  
                        * **futureAddressChange**: Get future address changes  
                        * **all**: Get all address items
                    schema:
                        enum:
                            - currentAddress
                            - historicalAddress
                            - futureAddressChange
                            - all
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListAddress'
                            examples:
                                Example 1:
                                    value:
                                        addressList:
                                            -
                                                product: CO27409
                                                addressType: delivery
                                                id: 3
                                                streetAddress: Grubbegata
                                                streetNumber: 6
                                                entrance: A
                                                floor: 6
                                                postalCode: 0179
                                                postalPlace: Oslo
                                                postalAddress: Postboks 265 Økern
                                                postalAddressPostalCode: '0510'
                                                postalAddressPostalPlace: Oslo
                                                countryCode: 'NO'
                                                period:
                                                    startTime: 1559393560000
                                                    endTime: 1562158360000
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-ListAddress'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<addressResponse>\r\n    <addressList>\r\n        <address>\r\n            <product>CO27409</product>\r\n            <addressType>delivery</addressType>\r\n            <id>3</id>\r\n            <careOfAdress>Nedre Vollgate XII</careOfAdress>\r\n            <streetAddress>Grubbegata</streetAddress>\r\n            <streetNumber>6</streetNumber>\r\n            <entrance>A</entrance>\r\n            <floor>6</floor>\r\n            <postalCode>0179</postalCode>\r\n            <postalPlace>Oslo</postalPlace>\r\n            <postalAddress>Postboks 265 Økern</postalAddress>\r\n            <postalAddressPostalCode>0510</postalAddressPostalCode>\r\n            <postalAddressPostalPlace>Oslo</postalAddressPostalPlace>\r\n            <countryCode>NO</countryCode>\r\n            <period>\r\n                <startTime>2019-06-20T14:52:40+02:00</startTime>\r\n                <endTime>2019-08-20T14:52:40+01:00</endTime>\r\n            </period>\r\n        </address>\r\n    </addressList>\r\n</addressResponse>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List addresses
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                API is used to get info on the current address and existing changes.
        parameters:
            -
                name: numberOfLines
                description: Number of lines returned in response
                schema:
                    default: 20
                    type: string
                in: path
                required: false
    /v1/client/product:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CheckProductClientMode-request'
                        examples:
                            Example 1:
                                value:
                                    changedAfter: 1550336440000
                                    onlyActive: true
            tags:
                - Product
            parameters:
                -
                    name: shop
                    description: |-
                        Informs if a product is available for web shop.

                        - **true**: The product is available for web shop.
                        - **false**: The product is unavailable for web shop.
                    schema:
                        default: false
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Product'
                            examples:
                                Example 1:
                                    value:
                                        products:
                                            -
                                                companyCode: '468979834'
                                                product: CO27409
                                                description: This is a product
                                                productType: magazine
                                                startTime: 1560336440000
                                                endTime: 1591958840000
                                                weight: 99.9
                                                currency: NOK
                                                webOfferPrice: 89.9
                                                retailPrice: 67.75
                                                vatPercent: 0
                                                digital: false
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Product'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<products>\r\n  <product>\r\n    <companyCode>468979834</companyCode>\r\n    <product>CO27409</product>\r\n    <description>This is a product</description>\r\n    <productType>magazine</productType>\r\n    <startTime>2019-06-12T12:47:20+02:00</startTime>\r\n    <endTime>2020-06-12T12:47:20+01:00</endTime>    \r\n    <weight>99.9</weight>\r\n    <currency>NOK</currency>\r\n    <webOfferPrice>89.9</webOfferPrice>\r\n    <retailPrice>67.75</retailPrice>\r\n    <vatPercent>0</vatPercent>\r\n    <digital>false</digital>\r\n  </product>\r\n</products>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Check product - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n"
    '/v1/client/product/{productType}':
        get:
            tags:
                - Product
            parameters:
                -
                    name: productType
                    description: 'not required, i.e. return all if missing. Possible value: subscription.'
                    schema:
                        maxLength: 12
                        type: string
                    in: path
                    required: false
                -
                    name: productId
                    description: Only return info about one product
                    schema:
                        maxLength: 12
                        type: string
                    in: query
                -
                    name: shop
                    description: |-
                        Informs if a product is available for web shop.

                        - **true**: The product is available for web shop.
                        - **false**: The product is unavailable for web shop.
                    schema:
                        default: false
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Product'
                            examples:
                                Example 1:
                                    value:
                                        products:
                                            -
                                                companyCode: '468979834'
                                                product: CO27409
                                                description: This is a product
                                                productType: magazine
                                                startTime: 1560336440000
                                                endTime: 1591958840000
                                                weight: 99.9
                                                currency: NOK
                                                webOfferPrice: 89.9
                                                retailPrice: 67.75
                                                vatPercent: 0
                                                digital: false
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Product'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<products>\r\n  <product>\r\n    <companyCode>468979834</companyCode>\r\n    <product>CO27409</product>\r\n    <description>This is a product</description>\r\n    <productType>magazine</productType>\r\n    <startTime>2019-06-12T12:47:20+02:00</startTime>\r\n    <endTime>2020-06-12T12:47:20+01:00</endTime>    \r\n    <weight>99.9</weight>\r\n    <currency>NOK</currency>\r\n    <webOfferPrice>89.9</webOfferPrice>\r\n    <retailPrice>67.75</retailPrice>\r\n    <vatPercent>0</vatPercent>\r\n    <digital>false</digital>\r\n  </product>\r\n</products>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List products - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n"
    /v1/customer/info:
        get:
            tags:
                - Customer
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListCustomerInfo'
                            examples:
                                Example 1:
                                    value:
                                        customerNumber: 563457
                                        name:
                                            firstName: Ola
                                            middleName: Fjordstrand
                                            lastName: Nordmann
                                            companyName: Company International Ltd
                                            departmentName: Support
                                        phoneNumbers:
                                            -
                                                phoneNumber: '+4712345678'
                                                phoneNumberType: personal
                                            -
                                                phoneNumber: '+4723339100'
                                                phoneNumberType: company
                                        emails:
                                            - ola.nordmann@hotmail.no
                                            - ola.nordmann@company.com
                                        invoiceEmailAddress: ola.nordmann@hotmail.no
                                        attachedUsers:
                                            uniqueId: abc123ee63461dd
                                            credentials:
                                                -
                                                    credential: ola.nordmann@hotmail.no
                                                    credentialType: A_EMAIL_ADDRESS
                                                    verificationLevel: Externally_verified
                                                -
                                                    credential: '+4790123456'
                                                    credentialType: B_SMS_PHONE
                                                    verificationLevel: Not verified
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-ListCustomerInfo'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<customer>\r\n    <customerNumber>563457</customerNumber>\r\n    <name>\r\n        <firstName>Ola</firstName>\r\n        <middleName>Fjordstrand</middleName>\r\n        <lastName>Nordmann</lastName>\r\n        <companyName>Company International Ltd</companyName>\r\n        <departmentName>Support</departmentName>\r\n    </name>\r\n    <phoneNumbers>\r\n        <phoneNumber>\r\n            <phoneNumber>+4712345678</phoneNumber>\r\n            <phoneNumberType>personal</phoneNumberType>\r\n        </phoneNumber>\r\n        <phoneNumber>\r\n            <phoneNumber>+4723339100</phoneNumber>\r\n            <phoneNumberType>company</phoneNumberType>\r\n        </phoneNumber>\r\n    </phoneNumbers>\r\n    <emails>\r\n        <email>ola.nordmann@hotmail.no</email>\r\n        <email>ola.nordmann@company.com</email>\r\n    </emails>\r\n    <invoiceEmailAddress>ola.nordmann@hotmail.no</invoiceEmailAddress>\r\n    <attachedUsers>\r\n        <uniqueId>a6050b212fd24fc2bbe493888e8a4dc3</uniqueId>\r\n        <credentials>\r\n            <credential>+4790123456</credential>\r\n            <credentialType>C_NON_SMS_PHONE</credentialType>\r\n            <verificationLevel>notVerified</verificationLevel>\r\n        </credentials>\r\n        <credentials>\r\n            <credential>ola.nordmann@mediaconnect.no</credential>\r\n            <credentialType>A_EMAIL_ADDRESS</credentialType>\r\n            <verificationLevel>notVerified</verificationLevel>\r\n        </credentials>\r\n    </attachedUsers>\r\n</customer>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List customer info
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                Customer API for customer details.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangeCustomerInfo-request'
                        examples:
                            Example 1:
                                value:
                                    name:
                                        firstName: Ola
                                        middleName: Fjordstrand
                                        lastName: Nordmann
                                        companyName: Company International Ltd
                                        departmentName: Support
                                    phoneNumbers:
                                        -
                                            phoneNumber: '+4712345678'
                                            phoneNumberType: personal
                                        -
                                            phoneNumber: '+4723339100'
                                            phoneNumberType: company
                                    emails:
                                        - ola.nordmann@hotmail.no
                                        - ola.nordmann@company.com
                                    invoiceEmailAddress: ola.nordmann@hotmail.no
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/ChangeCustomerInfo-request'
                        examples:
                            Example 1:
                                value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<customer>\r\n    <name>\r\n        <firstName>Ola</firstName>\r\n        <middleName>Fjordstrand</middleName>\r\n        <lastName>Nordmann</lastName>\r\n        <companyName>Company International Ltd</companyName>\r\n        <departmentName>Support</departmentName>\r\n    </name>\r\n    <phoneNumbers>\r\n        <phoneNumber>\r\n            <phoneNumber>+4712345678</phoneNumber>\r\n            <phoneNumberType>personal</phoneNumberType>\r\n        </phoneNumber>\r\n        <phoneNumber>\r\n            <phoneNumber>+4723339100</phoneNumber>\r\n            <phoneNumberType>company</phoneNumberType>\r\n        </phoneNumber>\r\n    </phoneNumbers>\r\n    <emails>\r\n        <email>ola.nordmann@hotmail.no</email>\r\n        <email>ola.nordmann@company.com</email>\r\n    </emails>\r\n        <invoiceEmailAddress>ola.nordmann@hotmail.no</invoiceEmailAddress>\r\n</customer>"
            tags:
                - Customer
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-Success'
                            examples:
                                Example 1:
                                    value:
                                        success: true
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-Success'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<success>OK</success>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: Change customer Info
            description: >-
                The user needs to be logged in to use this endpoint, [click here](#section/About-the-API) to
                read more.


                This API updates customer data. Name in Connect required minimum `lastName` or `companyName`.
                If request is null or empty, then `lastName` will be set to “-”. In this API we may set an
                email  address that shall be used for sending email invoice.
    '/v1/client/customer/info/{customerNumber}':
        get:
            tags:
                - Customer
            parameters:
                -
                    name: customerNumber
                    description: Customer number
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Model-ListCustomerInfo'
                            examples:
                                Example 1:
                                    value:
                                        customerNumber: 563457
                                        name:
                                            firstName: Ola
                                            middleName: Fjordstrand
                                            lastName: Nordmann
                                            companyName: Company International Ltd
                                            departmentName: Support
                                        phoneNumbers:
                                            -
                                                phoneNumber: '+4712345678'
                                                phoneNumberType: personal
                                            -
                                                phoneNumber: '+4723339100'
                                                phoneNumberType: company
                                        emails:
                                            - ola.nordmann@hotmail.no
                                            - ola.nordmann@company.com
                                        invoiceEmailAddress: ola.nordmann@hotmail.no
                                        attachedUsers:
                                            uniqueId: abc123ee63461dd
                                            credentials:
                                                -
                                                    credential: ola.nordmann@hotmail.no
                                                    credentialType: A_EMAIL_ADDRESS
                                                    verificationLevel: Externally_verified
                                                -
                                                    credential: '+4790123456'
                                                    credentialType: B_SMS_PHONE
                                                    verificationLevel: Not verified
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Model-ListCustomerInfo'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<customer>\r\n    <customerNumber>563457</customerNumber>\r\n    <name>\r\n        <firstName>Ola</firstName>\r\n        <middleName>Fjordstrand</middleName>\r\n        <lastName>Nordmann</lastName>\r\n        <companyName>Company International Ltd</companyName>\r\n        <departmentName>Support</departmentName>\r\n    </name>\r\n    <phoneNumbers>\r\n        <phoneNumber>\r\n            <phoneNumber>+4712345678</phoneNumber>\r\n            <phoneNumberType>personal</phoneNumberType>\r\n        </phoneNumber>\r\n        <phoneNumber>\r\n            <phoneNumber>+4723339100</phoneNumber>\r\n            <phoneNumberType>company</phoneNumberType>\r\n        </phoneNumber>\r\n    </phoneNumbers>\r\n    <emails>\r\n        <email>ola.nordmann@hotmail.no</email>\r\n        <email>ola.nordmann@company.com</email>\r\n    </emails>\r\n    <invoiceEmailAddress>ola.nordmann@hotmail.no</invoiceEmailAddress>\r\n    <attachedUsers>\r\n        <uniqueId>a6050b212fd24fc2aae493888e8a4dc3</uniqueId>\r\n        <credentials>\r\n            <credential>+4790123456</credential>\r\n            <credentialType>C_NON_SMS_PHONE</credentialType>\r\n            <verificationLevel>notVerified</verificationLevel>\r\n        </credentials>\r\n        <credentials>\r\n            <credential>ola.nordmann@mediaconnect.no</credential>\r\n            <credentialType>A_EMAIL_ADDRESS</credentialType>\r\n            <verificationLevel>notVerified</verificationLevel>\r\n        </credentials>\r\n    </attachedUsers>\r\n</customer>"
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error400'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error400'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>VALIDATION</exceptionType>\r\n    <errorMessage>Error message here, e.g. missing field</errorMessage>\r\n</error>"
                    description: Bad Request
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error500'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error500'
                            examples:
                                Example 1:
                                    value: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<error>\r\n    <uniqueId>33ddb545-a88f-4e5d-906d-5af03e9a8dd1</uniqueId>\r\n    <exceptionType>SEVERE</exceptionType>\r\n    <errorMessage>Error message here, i.e unhandled exception </errorMessage>\r\n</error>"
                    description: Internal Server Error
            deprecated: false
            summary: List customer info - client mode
            description: "Only the client needs to be logged in to use this endpoint. The user does not need to be logged in, [click here](#section/About-the-Client-Mode) to read more.\r\n"
components:
    schemas:
        AddTicket-response:
            description: ''
            type: object
            properties:
                success:
                    description: "It informs if the ticket was added.\r\n\r\n* **true:** The ticket was added.\r\n* **false:** The ticket was not added.\r\n"
                    type: boolean
                transactionId:
                    description: The transactionId
                    type: integer
        Model-Success:
            title: Success
            description: ''
            type: object
            properties:
                success:
                    description: |-
                        Success is
                        * **true** if data was updated.
                        * **false** if data was not updated.
                    type: boolean
        RegisterTicket-response:
            description: ''
            type: object
            properties:
                result:
                    description: >-
                        Register new payment ticket.


                        - **true**: Registered a new payment ticket.

                        - **false**: Did not registered a new payment ticket because the user is not linked to
                        Connect customer.
                    type: boolean
        AccessPrivateData-request:
            description: ''
            required:
                - sendReceipt
            type: object
            properties:
                sendReceipt:
                    description: |-
                        Says if there is need to send receipt message to customer on email/sms

                        - **true**: Customer need receipt.
                        - **false**: Customer does not need receipt.
                    type: boolean
        Model-ConsentAccess-response:
            description: ''
            type: object
            properties:
                success:
                    description: |-
                        Status of creating a workflow case in Connect.

                        - **true**:  The workflow case was created in Connect.
                        - **false**: The workflow case was not created in Connect.
                    type: boolean
                receiptSend:
                    description: |-
                        Status of sending a receipt to the customer for created workflow case in Connect.

                        - **true**: A receipt was sent to the customer.
                        - **false**: The customer did not ask for receipt or an exception has occured.
                    type: boolean
        RemovePrivateData-request:
            description: ''
            required:
                - sendReceipt
            type: object
            properties:
                sendReceipt:
                    description: |-
                        Says if there is need to send receipt message to customer on email/sms

                        - **true**: Customer need receipt.
                        - **false**: Customer does not need receipt.
                    type: boolean
        Model-RegisterRecruitment-response:
            description: ''
            type: object
            properties:
                status:
                    description: The value "ok" if the request was received and processed successfully.
                    type: string
        Model-Metadata:
            description: ''
            type: object
            properties:
                foo:
                    type: string
        CheckCustomerNumberClientMode-request:
            description: ''
            required:
                - credentials
            type: object
            properties:
                credentials:
                    description: List of credentials to check
                    type: array
                    items:
                        type: string
        CheckCredentialClientMode-request:
            description: ''
            required:
                - credentials
            type: object
            properties:
                credentials:
                    description: "List of credentials to check\t"
                    type: array
                    items:
                        type: string
                        example:
                            - '+4798765432'
                            - kari.nordmann@gmail.com
        ListStopStatisticsClientMode-response:
            description: ''
            type: object
            properties:
                items:
                    type: array
                    items:
                        type: object
                        properties:
                            date:
                                description: Date
                                type: string
                            stopReason:
                                description: Stop reason code
                                type: string
                            count:
                                description: Count
                                type: integer
        ChangeStocksClientMode-response:
            description: ''
            type: object
            properties:
                status:
                    description: The value “ok” if the request was received successfully.
                    type: string
                    example: ok
        ListRenewStatisticsClientMode-response:
            description: ''
            type: object
            properties:
                items:
                    type: array
                    items:
                        type: object
                        properties:
                            date:
                                description: Date
                                type: integer
                            count:
                                description: Count
                                type: integer
        ListStatusMessage-response:
            description: ''
            type: object
            properties:
                statusMessages:
                    type: array
                    items:
                        type: object
                        properties:
                            statusMessage:
                                description: Describing text
                                type: string
        Model-Address:
            title: Address
            type: object
            properties:
                careOfAddress:
                    description: The C/O for this address
                    maxLength: 40
                    type: string
                streetAddress:
                    description: The street for this address
                    maxLength: 40
                    type: string
                streetNumber:
                    description: The street number for this address
                    type: integer
                entrance:
                    description: The entrance for this address
                    maxLength: 12
                    type: string
                floor:
                    description: The floor for this address
                    type: integer
                suite:
                    description: The suite for this address
                    maxLength: 10
                    type: string
                postalCode:
                    description: The postal code for this address
                    maxLength: 10
                    type: string
                postalPlace:
                    description: The postal place for this address
                    maxLength: 30
                    type: string
                postalAddress:
                    description: The postal address for this address
                    maxLength: 40
                    type: string
                postalAddressPostalCode:
                    description: The postal code for this address's postal address
                    maxLength: 10
                    type: string
                postalAddressPostalPlace:
                    description: The postal place for this address's postal address
                    maxLength: 30
                    type: string
                countryCode:
                    description: >-
                        The country code for this address - [**ISO 3166 -
                        alpha-2**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
                    maxLength: 3
                    type: string
        CheckRewardClientMode-request:
            description: ''
            required:
                - rewardId
                - rewardPartnerId
            type: object
            properties:
                rewardId:
                    description: rewardId to check
                    maxLength: 36
                    type: string
                rewardPartnerId:
                    description: rewardPartnerId to check
                    type: integer
        CheckRewardClientMode-response:
            description: ''
            type: object
            properties:
                customerNumber:
                    description: Customer number (found customernumber)
                    type: integer
                product:
                    description: Product Code on found reward
                    maxLength: 12
                    type: string
                rewardId:
                    description: RewardId on found reward
                    maxLength: 36
                    type: string
        RemoveTicket-request:
            description: ''
            required:
                - merchantId
                - ticket
            type: object
            properties:
                merchantId:
                    description: Merchant id for ticket.
                    maxLength: 64
                    type: string
                ticket:
                    description: Ticket that shall be marked as deleted.
                    maxLength: 128
                    type: string
        Model-RegisterConsentEvent-response:
            title: RegisterConsentEvent - response
            type: object
            properties:
                consentId:
                    description: Consent ID for this event
                    type: integer
                subject:
                    description: Identification of the subject e.g. customer number or credential
                    maxLength: 255
                    type: string
                subjectType:
                    description: "Type of subject, allowed is:\n* **CONNECT**\n* **CONNECTID**\n* **EXTERNAL**\t"
                    enum:
                        - CONNECT
                        - CONNECTID
                        - EXTERNAL
                    type: string
                consentEventId:
                    description: The ID of this event
                    type: integer
                created:
                    description: |-
                        The time this event was saved.

                        JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                    type: integer
                source:
                    description: Identification of the source of the consent principal
                    maxLength: 255
                    type: string
                action:
                    description: |-
                        It informs if the consent is granted.

                        - **true**: The consent is granted.
                        - **false**:  The consent is revoked or not granted.
                    type: boolean
                childEvents:
                    description: >-
                        If consent has flag followParent set, so all child consent will be also pushed. Here
                        will be list of changed consent/events to main consent/event
                    type: array
                    items:
                        type: object
                        properties:
                            consentEventId:
                                description: The ID of this event for child consent
                                type: integer
                            consentId:
                                description: Consent ID for child consent
                                type: integer
                            created:
                                description: |-
                                    The time this event was saved for child consent.

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                                type: integer
                            action:
                                description: |-
                                    It informs if the consent is granted.

                                    - **true**: The child consent is granted.
                                    - **false**: The child consent is revoked or not granted.
                                type: boolean
        Model-ListConsentGroups:
            type: object
            properties:
                issuer:
                    description: 'Used to identify who has required the consent, ex. name of the company.'
                    maxLength: 255
                    type: string
                groups:
                    description: Used to structure the consents that belongs together based on your choice.
                    type: array
                    items:
                        type: object
                        properties:
                            consentGroupId:
                                description: The identfication number of a gruop of consents.
                                type: integer
                            created:
                                description: |-
                                    Group creation date.

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            selectionOrder:
                                description: Selection order for display
                                type: integer
                            texts:
                                description: A consent text for group of consents in different language.
                                type: array
                                items:
                                    type: object
                                    properties:
                                        languageCode:
                                            description: >-
                                                Language code for group texts.


                                                Combine [**ISO
                                                639**](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
                                                language

                                                code (lower-case two letter code) with underscore ( _ ) and  a
                                                [**ISO-3166**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                                                country code (upper-case two letter).
                                            maxLength: 10
                                            type: string
                                        name:
                                            description: The name of consent group in the chosen language.
                                            maxLength: 255
                                            type: string
                                        description:
                                            description: The description of consent group in the chosen language.
                                            maxLength: 1024
                                            type: string
                            active:
                                description: |-
                                    It informs if the consent group is in use.

                                    - **true**: The consent group is in use.
                                    - **false**:  The consent group is not in use.
                                type: boolean
        ListConsentTextClientMode-response:
            description: ''
            type: object
            properties:
                issuer:
                    description: Identification of the issuer principal of the consent
                    maxLength: 255
                    type: string
                consents:
                    description: 'Consents to given issuer, that has text'
                    type: array
                    items:
                        type: object
                        properties:
                            consentId:
                                description: Consent id that has text info for consent
                                type: integer
                            consentGroupId:
                                description: Consent group id
                                type: integer
                            target:
                                description: Identification of the target of consent (e.g. URL of a policy)
                                maxLength: 255
                                type: string
                            scope:
                                description: The scope of the consent can refer to a section or clause in the target
                                maxLength: 255
                                type: string
                            texts:
                                description: Texts to given consent
                                type: array
                                items:
                                    type: object
                                    properties:
                                        textId:
                                            description: Consent text id
                                            type: integer
                                        languageCode:
                                            description: >-
                                                Text language code. Combine [**ISO
                                                639**](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
                                                language code (lower-case two letter code) with underscore ( _
                                                ) and a
                                                [**ISO-3166**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                                                country code (upper-case two letter). Example: en_GB
                                            maxLength: 10
                                            type: string
                                        text:
                                            description: Text to given consent
                                            maxLength: 2048
                                            type: string
                                        fromDate:
                                            description: Date from witch this text is valid
                                            type: integer
        Model-Pbm-channels:
            description: ''
            type: object
            properties:
                channels:
                    type: array
                    items:
                        type: object
                        properties:
                            type:
                                description: |-
                                    State for the channel.  Valid values: 
                                    - **PERMISSION**:
                                    - **SHIELD**:
                                    - **NONE**:
                                enum:
                                    - PERMISSION
                                    - SHIELD
                                    - NONE
                                type: string
                            value:
                                description: Channel code as defined in Connect.
                                maxLength: 20
                                type: string
        Model-PrivacyOrdertype:
            description: ''
            type: object
            properties:
                permission:
                    description: Wrapper for order type level permission/shield.
                    type: array
                    items:
                        type: object
                        properties:
                            purpose:
                                description: Purpose of permission.
                                maxLength: 20
                                type: string
        RegisterComplaint-request:
            description: ''
            required:
                - product
                - issue
                - complaintAction
            type: object
            properties:
                product:
                    description: Product code
                    maxLength: 12
                    type: string
                issue:
                    description: Issue code
                    maxLength: 10
                    type: string
                complaintAction:
                    description: Complaint action code
                    maxLength: 2
                    type: string
                createPostDistribution:
                    description: |-
                        Whether to create postdistribution or not. Default is false.

                        * **true**: The postdistribution is created.
                        * **false**: The postdistribution is not created.
                    default: false
                    type: boolean
        Model-Complaint-response:
            description: ''
            type: object
            properties:
                product:
                    description: Product code
                    maxLength: 12
                    type: string
                complaintActions:
                    type: array
                    items:
                        type: object
                        properties:
                            complaintCode:
                                description: Complaint action code value
                                maxLength: 2
                                type: string
                            description:
                                description: Description of the complaint action
                                maxLength: 40
                                type: string
                            postDistribution:
                                description: Whether this complaint action can trigger a post distribution
                                maxLength: 1
                                type: string
                complaints:
                    type: array
                    items:
                        type: object
                        properties:
                            issue:
                                description: Issue code
                                maxLength: 10
                                type: string
                            existingComplaint:
                                description: 'Whether this is an existing complaint or not, Y or N'
                                maxLength: 1
                                type: string
        Model-PrivacyEnterprise:
            description: ''
            type: object
            properties:
                permission:
                    description: Wrapper for enterprise level permission/shield.
                    type: array
                    items:
                        type: object
                        properties:
                            purpose:
                                description: Purpose of permission.
                                maxLength: 20
                                type: string
        ListSubscriptions-response:
            description: ''
            type: object
            properties:
                subscriptions:
                    type: array
                    items:
                        type: object
                        properties:
                            product:
                                description: The product id- A unique id for the product
                                maxLength: 12
                                type: string
                            stopped:
                                description: |-
                                    Informs if the  subscription is stopped.

                                    - **true**: The subscription is stopped.
                                    - **false**:  The subscription is not stopped.
                                type: boolean
                            startTime:
                                description: >-
                                    Start of the current subscription period.


                                    startTime is 00:00:00 on the subscription start date. If the user
                                    continues to pay for the subscription then startTime does not change. If
                                    the user stops paying for the subscription and later starts a new
                                    subscription on the same product (and some time has passed during which
                                    the user did not pay) then startTime will be 00:00:00 on the new start
                                    date.


                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC


                                    XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
                                type: integer
                            endTime:
                                description: >-
                                    End of the current subscription period.


                                    endTime is 23:59:59 on the last date that the user has paid for or
                                    23:59:59 on the publication date of the last issue that the user has
                                    received if that is a later date (relevant for free subscriptions).


                                    End of the current subscription period.


                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC


                                    XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
                                type: integer
                            paid:
                                description: |-
                                    Informs if the subscription period is paid.

                                    - **true**: The subscription period is paid.
                                    - **false**:  The subscription period is unpaid.
                                type: boolean
        StartSubscription-request:
            description: ''
            required:
                - product
                - startTime
                - copies
                - couponCode
                - couponNumber
            type: object
            properties:
                companyCode:
                    description: "Company code for the product\t"
                    maxLength: 12
                    type: string
                product:
                    description: "product code for the product\t"
                    maxLength: 12
                    type: string
                startTime:
                    description: "The time the subscription should start\t\n\n\nXML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)\n\nJSON timestamps are specified in milliseconds since January 1, 1970 UTC"
                    type: integer
                endTime:
                    description: |-
                        The time the subscription should end.

                        XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)

                        JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                    type: integer
                copies:
                    description: "Number of copies (often 1)\t"
                    type: integer
                couponCode:
                    description: Coupon code used to start the subscription
                    maxLength: 12
                    type: string
                couponNumber:
                    description: Coupon number used to start the subscription.
                    type: integer
                customerReference:
                    description: Coustomer reference
                    maxLength: 37
                    type: string
        Model-PremiumRecruitments-response:
            description: ''
            type: object
            properties:
                premiumRecruitments:
                    type: array
                    items:
                        required:
                            - companyCode
                            - product
                            - preferenceNumber
                        type: object
                        properties:
                            companyCode:
                                description: The company that owns the product
                                maxLength: 12
                                type: string
                            product:
                                description: "The premium product\t"
                                maxLength: 12
                                type: string
                            preferenceNumber:
                                description: >-
                                    The preference number for this premium, representing the sorting order of
                                    wanted premiums, with 1 representing the preferred premium product
                                type: integer
        ChangePremiumRecruitments-request:
            description: ''
            type: object
            properties:
                premiumRecruitments:
                    type: array
                    items:
                        required:
                            - companyCode
                            - product
                            - preferenceNumber
                        type: object
                        properties:
                            companyCode:
                                description: The company that owns the product
                                maxLength: 12
                                type: string
                            product:
                                description: "The premium product\t"
                                maxLength: 12
                                type: string
                            preferenceNumber:
                                description: >-
                                    The preference number for this premium, representing the sorting order of
                                    wanted premiums, with 1 representing the preferred premium product
                                type: integer
        RegisterExternalIdClientMode-request:
            description: ''
            required:
                - externalId
                - credentialType
            type: object
            properties:
                externalId:
                    description: External system unique id that represents user in third part system.
                    maxLength: 60
                    type: string
                credentialType:
                    description: |-
                        Credential type, for now it is only allowed type 
                        * **D** : AID
                    enum:
                        - D
                    type: string
        RegisterCustomerClientMode-request:
            description: ''
            required:
                - externalId
                - credentialType
            type: object
            properties:
                externalId:
                    description: External system unique id that represents user in third part system
                    maxLength: 60
                    type: string
                credentialType:
                    description: |-
                        Credential type, for now it is only allowed type:
                        * **D**: AID
                    type: string
                customerNumber:
                    description: Customer number for this user
                    type: integer
        ChangeStocksClientMode-request:
            description: ''
            type: object
            properties:
                updates:
                    type: array
                    items:
                        type: object
                        properties:
                            warehouseId:
                                description: Warehouse ID in the client database
                                type: integer
                            warehouseProductId:
                                description: Warehouse product ID
                                maxLength: 32
                                type: string
                            stockQuantity:
                                description: Stock quantity
                                type: number
                            status:
                                description: |-
                                    Stock status
                                    * **instock**
                                    * **blocked**
                                    * **expired**
                                enum:
                                    - instock
                                    - blocked
                                    - expired
                                type: string
        ListStocksClientMode-response:
            description: ''
            type: object
            properties:
                products:
                    type: array
                    items:
                        type: object
                        properties:
                            productId:
                                description: Product ID
                                maxLength: 12
                                type: string
                            stockQuantity:
                                description: Stock quantity
                                type: number
                            status:
                                description: |-
                                    Stock status:
                                    * **instock**
                                    * **blocked**
                                    * **expired**
                                enum:
                                    - instock
                                    - blocked
                                    - expired
                                type: string
        Model-CheckShieldClientMode-response:
            description: ''
            type: object
            properties:
                count:
                    description: Number of customers found and shielded.
                    type: integer
        Model-Name:
            title: Name
            type: object
            properties:
                firstName:
                    description: First name
                    maxLength: 30
                    type: string
                middleName:
                    description: Middle name
                    maxLength: 30
                    type: string
                lastName:
                    description: Last name
                    maxLength: 30
                    type: string
                companyName:
                    description: Company name
                    maxLength: 40
                    type: string
                departmentName:
                    description: Department name
                    maxLength: 40
                    type: string
        Model-ListConsentGivenIssuer:
            type: object
            properties:
                issuer:
                    description: Identification of the issuer principal of the consent
                    maxLength: 255
                    type: string
                consents:
                    description: Consents to given issuer
                    type: array
                    items:
                        type: object
                        properties:
                            consentId:
                                description: Identification number of consent
                                type: integer
                            consentGroupId:
                                description: "Group id\t"
                                type: integer
                            target:
                                description: Identification of the target of consent (e.g. URL of a policy)
                                maxLength: 255
                                type: string
                            scope:
                                description: The scope of the consent can refer to a section or clause in the target
                                maxLength: 255
                                type: string
                            parentConsentId:
                                description: Parent consent id - if belongs to other consent
                                type: integer
                            selectionOrder:
                                description: Selection order for display
                                type: integer
                            displayMode:
                                description: |-
                                    Display behavior of consent:

                                    - **I**: Display if parent is inactive.
                                    - **A**: Display if parent is active
                                    - **S**: Display regardless of parent state.
                                    - **null**: Default by application
                                default: 'null'
                                enum:
                                    - I
                                    - A
                                    - S
                                    - 'null'
                                type: string
                            created:
                                description: |-
                                    Consent creation date

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            texts:
                                description: Consent texts
                                type: array
                                items:
                                    type: object
                                    properties:
                                        languageCode:
                                            description: >-
                                                Language code for consent texts. Combine [**ISO
                                                639**](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
                                                language code (lower-case two letter code) with underscore ( _
                                                ) and a
                                                [**ISO-3166**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                                                country code (upper-case two letter). Example: en_GB
                                            maxLength: 10
                                            type: string
                                        name:
                                            description: Consent name
                                            maxLength: 255
                                            type: string
                                        description:
                                            description: Consent description
                                            maxLength: 1024
                                            type: string
                            active:
                                description: |-
                                    It informs if the consent group is in use.

                                    - **true**: The consent group is in use.
                                    - **false**:  The consent group is not in use.
                                type: boolean
        CheckCustomerNumberClientMode-response:
            description: ''
            type: object
            properties:
                customers:
                    type: array
                    items:
                        type: object
                        properties:
                            credential:
                                description: Credential (input credential)
                                maxLength: 60
                                type: string
                            customerNumber:
                                description: "Customer number (found customernumber)\t"
                                type: integer
        Error500:
            description: ''
            type: object
            properties:
                uniqueId:
                    description: Unique ID. In some cases we use this id when logging severe errors
                    type: string
                exceptionType:
                    description: |-
                        Type of exceptions to indicate severity. Types:

                        - **DUPLICATE_KEY**: The key is already used.
                        - **UNKNOWN_ID**: The Id is unknown.
                        - **VALIDATION**: The input is not validated.
                        - **SEVERE**: This is an unhandled exception, please contact Mediaconnect.
                    enum:
                        - DUPLICATE_KEY
                        - UNKNOWN_ID
                        - VALIDATION
                        - SEVERE
                    type: string
                errorMessage:
                    description: A descriptive error message.
                    type: string
            example:
                uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                exceptionType: SEVERE
                errorMessage: 'Error message here, i.e unhandled exception'
        CheckAccessClientMode-response:
            description: ''
            type: object
            properties:
                access:
                    description: |-
                        The information says if the user has access:

                        * **true**:  The user has access.
                        * **false**: The user has not access.
                    type: boolean
                accesses:
                    type: array
                    items:
                        type: object
                        properties:
                            access:
                                description: Access value for specific level of access
                                type: boolean
                            accessLevel:
                                description: |-
                                    * **C:** Domain, when is asking base on domain in request  
                                    * **D:** IP, when is asking base on IP address in request
                                enum:
                                    - C
                                    - D
                                type: string
                            accessType:
                                description: >-
                                    Type of access:  

                                    * **D:** Domain, when user has access base on domain  

                                    * **E:** IP, when user has access base on IP  

                                    * **F**: IP, but user has to be logged in. If this level returns true, but
                                    the main level is false, user has to logg in. Then the user Api can be
                                    called.
                                enum:
                                    - D
                                    - E
                                    - F
                                type: string
        Error400:
            description: ''
            type: object
            properties:
                uniqueId:
                    description: Unique ID. In some cases we use this id when logging severe errors
                    type: string
                exceptionType:
                    description: |-
                        Type of exceptions to indicate severity. Types:

                        - **DUPLICATE_KEY**: The key is already used.
                        - **UNKNOWN_ID**: The Id is unknown.
                        - **VALIDATION**: The input is not validated.
                    enum:
                        - DUPLICATE_KEY
                        - UNKNOWN_ID
                        - VALIDATION
                    type: string
                errorMessage:
                    description: A descriptive error message.
                    type: string
            example:
                uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                exceptionType: VALIDATION
                errorMessage: 'Error message here, e.g. missing field'
        Error403:
            description: ''
            type: object
            properties:
                uniqueId:
                    description: Unique ID. In some cases we use this id when logging severe errors
                    type: string
                exceptionType:
                    description: |-
                        Type of exceptions to indicate severity. Types:
                        - **VALIDATION**: The input is not validated.
                    enum:
                        - VALIDATION
                    type: string
                errorMessage:
                    description: A descriptive error message.
                    type: string
            example:
                uniqueId: 33ddb545-a88f-4e5d-906d-5af03e9a8dd1
                exceptionType: VALIDATION
                errorMessage: Try to narrow down your search with more information.
        ListVoucherCodeCouponsClientMode-response:
            description: ''
            type: object
            properties:
                coupons:
                    type: array
                    items:
                        type: object
                        properties:
                            couponCode:
                                description: Coupon code
                                maxLength: 12
                                type: string
                            couponNumber:
                                description: Coupon number
                                type: integer
                            description:
                                description: Coupon description
                                maxLength: 255
                                type: string
        ChangePaymentMethod-response:
            description: ''
            type: object
            properties:
                paymentChangeId:
                    type: integer
        CheckShieldEnterpriseClientMode-request:
            description: ''
            required:
                - enterpriseCode
                - channel
                - credential
            type: object
            properties:
                enterpriseCode:
                    description: Enterprise company code
                    maxLength: 12
                    type: string
                channel:
                    description: Distribution channel code
                    maxLength: 20
                    type: string
                credential:
                    description: Credential - e.g mobile phonenumber or email address. I.e credential used in ConnectID
                    maxLength: 60
                    type: string
        CheckShieldOrdertypeClientMode-request:
            description: ''
            required:
                - enterpriseCode
                - orderTypeCode
                - channel
                - credential
            type: object
            properties:
                enterpriseCode:
                    description: Enterprise company code
                    maxLength: 12
                    type: string
                orderTypeCode:
                    description: Ordertype code
                    maxLength: 12
                    type: string
                channel:
                    description: Distribution channel code
                    maxLength: 20
                    type: string
                credential:
                    description: Credential - e.g mobile phonenumber or email address. I.e credential used in ConnectID
                    maxLength: 60
                    type: string
        CheckCredentialClientMode-response:
            description: ''
            type: object
            properties:
                credentials:
                    type: array
                    items:
                        type: object
                        properties:
                            credential:
                                description: Formatted credential
                                maxLength: 60
                                type: string
                            credentialType:
                                description: |-
                                    Credential type:
                                    * **A**: Email
                                    *  **B**:  Phone number
                                enum:
                                    - A
                                    - B
                                type: string
                            canLogIn:
                                description: |-
                                    Informs if credential is created and valid for login:

                                    * **true**: The credential is created and valid for login
                                    * **false**: The credential is either not created or/and vaild for login.
                                type: boolean
                            hasCustomerNumber:
                                description: >-
                                    Informs if the user is connected to a customer number in the customer
                                    database:


                                    * **true**: The customer is connected to a customer number in the customer
                                    database.

                                    * **false**: The customer is not connected to a customer number in the
                                    customer database.
                                type: boolean
        StartSubscription-response:
            description: ''
            type: object
            properties:
                status:
                    description: Status inicating result of the operation.
                    type: string
        ListRecruitmentCampaignClientMode-response:
            description: ''
            type: object
            properties:
                campaignCode:
                    description: Campaign code for the recruitment campaign
                    maxLength: 12
                    type: string
                campaignDescription:
                    description: Description for the recruitment campaign
                    maxLength: 40
                    type: string
                companyItems:
                    description: "Company wrapper element, containing a list of companies\t"
                    type: array
                    items:
                        type: object
                        properties:
                            companyCode:
                                description: Company code whitin the recruitment campaign
                                maxLength: 12
                                type: string
                            companyDescription:
                                description: Description for the company
                                maxLength: 50
                                type: string
                productItems:
                    type: array
                    items:
                        type: object
                        properties:
                            productCode:
                                description: Product code whitin the recruitment company
                                maxLength: 12
                                type: string
                            productDescription:
                                description: Description for the product
                                maxLength: 40
                                type: string
                            points:
                                description: Points given for recruitment product
                                type: integer
        Model-PhoneNumber:
            title: Phone Number
            description: ''
            type: array
            items:
                type: object
                properties:
                    phoneNumber:
                        description: >-
                            A phone number has to follow the telephone number standard
                            [**E.164**](https://en.wikipedia.org/wiki/E.164)
                        maxLength: 20
                        type: string
                    phoneNumberType:
                        description: >-
                            Phone number type: 


                            - **home**: Home or private number
                            ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square)

                            - **mobile**: Mobile number
                            ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square)

                            - **companyDirect**: Company or work number
                            ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square)

                            - **companyPbx**: Private number within company 
                            ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square)

                            - **company**: A phone number you can call the customer at work.

                            - **personal**: Personal phone number.

                            - **fax**: A phone number to a fax machine.
                        enum:
                            - home
                            - mobile
                            - companyDirect
                            - companyPbx
                            - company
                            - personal
                            - fax
                        type: string
        Model-RegisterOrder-response:
            title: Order
            type: object
            properties:
                orderId:
                    description: OrderId for created order.
                    type: integer
        ListCouponClientMode-response:
            description: ''
            properties:
                coupons:
                    type: array
                    items:
                        type: object
                        properties:
                            couponCode:
                                description: Coupon code
                                maxLength: 12
                                type: string
                            couponNumber:
                                description: Coupon number
                                type: integer
                            startTime:
                                description: |-
                                    Start time, i.e time coupon can be used from.

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                                type: integer
                            endTime:
                                description: |-
                                    End time, i.e time coupon no longer can be used.

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                                type: integer
                            description:
                                description: Coupon description
                                maxLength: 255
                                type: string
                            couponPrice:
                                description: Coupon price/amount
                                maxLength: 12
                                type: string
                            extraProducts:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        productId:
                                            description: Product id/code
                                            maxLength: 12
                                            type: string
                                        description:
                                            description: Product description
                                            maxLength: 40
                                            type: string
        ChangeAddress-request:
            description: ''
            required:
                - changeType
            type: object
            properties:
                product:
                    description: >
                        Product code: Multiple values separated by comma (each value maximum 12 character). 
                        Required unless `changeType` is createPermanent.
                    maxLength: 12
                    type: string
                changeType:
                    description: >-
                        The type of this address change. Types must be one of: 


                        * **update:** either requires an id for a current/future address, or updates the
                        current home address. Specified dates but no id means a failure.  

                        * **delete:** requires an id for a future address, only works until that address'
                        start date has not been reached  

                        * **create:** creates a future address change, can optionally take an id from a
                        historical address to reuse that address, requires product  

                        * **createPermanent:** same as create, but creates a permanent future address change,
                        ignores product and end time  


                        It is not possible to update the address data on a future address change, this is done
                        by deleting an id and creating a new one with the correct address. When a period is
                        specified to an update request, it is implied that the change is to be done to a
                        future address change.
                    enum:
                        - update
                        - delete
                        - create
                        - createPermanent
                    type: string
                id:
                    description: >-
                        Unique id for an address to use.


                        This is required in these instances:


                        * Update of the period on a future address change.

                        * Deleting a future address change.

                        * Creating a future address change using an historical address.


                        This is optional in these instances:


                        * Updating the current home address.


                        These instances will lead to errors:


                        * Specifying the id for the current home address, but specifying period data on an
                        update.

                        * Leaving the id blank when specifying period data on an update.

                        * Specifying the id for the current home address when creating a new future address
                        change.

                        * Leaving the id blank when deleting a future address change.
                    type: integer
                careOfAddress:
                    description: The C/O for this address change.
                    maxLength: 40
                    type: string
                streetAddress:
                    description: "The street for this address change\t"
                    maxLength: 40
                    type: string
                streetNumber:
                    description: The street number for this address change
                    type: integer
                entrance:
                    description: The entrance for this address change
                    maxLength: 12
                    type: string
                postalCode:
                    description: "The postal code for this address change\t"
                    maxLength: 10
                    type: string
                postalPlace:
                    description: The postal place for this address change
                    maxLength: 30
                    type: string
                postalAddress:
                    description: The postal address for this address change
                    maxLength: 40
                    type: string
                postalAddressPostalCode:
                    description: The postal code for this address change's postal address
                    maxLength: 10
                    type: string
                postalAddressPostalPlace:
                    description: The postal place for this address change's postal address
                    maxLength: 30
                    type: string
                countryCode:
                    description: >-
                        The country code for this address - [**ISO 3166 -
                        alpha-2**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)


                        This field is required for update and create.
                    maxLength: 3
                    type: string
                period:
                    type: object
                    properties:
                        startTime:
                            description: |-
                                The start of an address's active period.

                                This field is required when creating a new future address.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.

                                 XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
                            type: integer
                        endTime:
                            description: |-
                                The end of an address's active period.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.

                                 XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601).
                            type: integer
        ListNextDistributionsClientMode-response:
            description: ''
            type: object
            properties:
                nextDistribution:
                    type: object
                    properties:
                        issue:
                            description: The next issue that is going to be publish
                            maxLength: 10
                            type: string
                        deliveryDate:
                            description: |-
                                Delivery date of next unpublished issue.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                            type: integer
                        distributionDate:
                            description: |-
                                Distribution date of next unpublished issue.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                            type: integer
                nextDelivery:
                    type: object
                    properties:
                        issue:
                            description: Next possible issue for delivery to the customer
                            maxLength: 10
                            type: string
                        deliveryDate:
                            description: |-
                                Delivery date of next possible issue for delivery to the customer. 

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                            type: integer
                        distributionDate:
                            description: |-
                                Distribution date of next possible issue for delivery to the customer

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                            type: integer
        ListCategoryCodes-response:
            description: ''
            type: object
            properties:
                categoryCodeList:
                    type: array
                    items:
                        type: object
                        properties:
                            categoryType:
                                description: Category type that this category code belongs to
                                maxLength: 12
                                type: string
                            categoryCode:
                                description: Category code
                                maxLength: 12
                                type: string
                            description:
                                description: Description of this `categoryCode`
                                maxLength: 255
                                type: string
        ListCategoryTypes-response:
            description: ''
            type: object
            properties:
                categoryTypeList:
                    type: array
                    items:
                        type: object
                        properties:
                            categoryType:
                                description: Category type code
                                maxLength: 12
                                type: string
                            description:
                                description: Description of this `categoryType`
                                maxLength: 255
                                type: string
                            hasPriority:
                                description: Indicates that the categories on this type are prioritised
                                maxLength: 1
                                type: string
                            maxCodes:
                                description: 'Max number of categories, if any, from this type allowed on a customer'
                                type: integer
                            useFreeValue:
                                description: |-
                                    How free values are used on this type:
                                    *  **C** means string codes
                                    * **I** means number codes
                                    * **null** means no free values allowed
                                enum:
                                    - C
                                    - I
                                    - 'null'
                                type: string
        CompleteOrderClientMode-response:
            description: ''
            type: object
            properties:
                fulfillmentStatus:
                    description: >-
                        Possible values are:

                        *  **OK**: A message is sent to user and a callback is done (if `callbackUrl` is given
                        in request) when payment is done.

                        * **ERROR**:
                    enum:
                        - OK
                        - ERROR
                    type: string
                orderId:
                    description: "Something went wrong calling fullfilment API, e.g mobile phone number not accepted. Is null if status OK.\t"
                    type: integer
                errorMessage:
                    description: "Descriptiv error message if error status.\t"
                    type: string
        ListInvoiceAddress-response:
            description: ''
            required:
                - payerCustomerNumber
            type: object
            properties:
                name:
                    $ref: '#/components/schemas/Model-Name'
                address:
                    $ref: '#/components/schemas/Model-Address'
                payerSameAsCustomer:
                    description: >-
                        It informs if customer and payer is same.


                        * **true:** Payer is same as customer, means customer and payer have same name and
                        address.

                        * **false:** Payer is not same as customer. Customer has a payer.
                    type: boolean
                payerCustomerNumber:
                    nullable: true
                    description: >-
                        If `payerSameAsCustomer` is true, this is the payers customer number. If
                        `payerSameAsCustomer` is false, this is *null*.
                    type: integer
        ListConsentTextHistoryClientMode-response:
            description: ''
            type: object
            properties:
                issuer:
                    description: Identification of the issuer principal of the consent
                    maxLength: 255
                    type: string
                consents:
                    description: 'Consents to given `issuer` and `subject`, that has text history'
                    type: array
                    items:
                        type: object
                        properties:
                            consentId:
                                description: Consent id that has text history
                                type: integer
                            consentGroupId:
                                description: Consent group id
                                type: integer
                            target:
                                description: Identification of the target of consent (e.g. URL of a policy)
                                maxLength: 255
                                type: string
                            scope:
                                description: The scope of the consent can refer to a section or clause in the `target`
                                maxLength: 255
                                type: string
                            texts:
                                description: Texts to given consent
                                type: array
                                items:
                                    type: object
                                    properties:
                                        consentTextId:
                                            description: Consent text id
                                            type: integer
                                        languageCode:
                                            description: >-
                                                Consent text language code. Combine [**ISO
                                                639**](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
                                                language code (lower-case two letter code) with underscore ( _
                                                ) and a
                                                [**ISO-3166**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                                                country code (upper-case two letter).
                                            maxLength: 10
                                            type: string
                                        textHistory:
                                            description: >-
                                                Text changes history to given consent and text by language
                                                code.
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    consentTextHistoryId:
                                                        description: Consent text history id
                                                        type: integer
                                                    text:
                                                        description: Historical text to given text for consent
                                                        maxLength: 2048
                                                        type: string
                                                    fromDate:
                                                        description: >-
                                                            Date from witch this text was valid


                                                            JSON timestamps are specified in milliseconds
                                                            since January 1, 1970 UTC
                                                        type: integer
                                                    toDate:
                                                        description: >-
                                                            Date from witch this text was not valid, if null
                                                            it is last valid text.


                                                            JSON timestamps are specified in milliseconds
                                                            since January 1, 1970 UTC.
                                                        type: integer
        ListIssuesClientMode-response:
            description: ''
            type: object
            properties:
                issues:
                    type: array
                    items:
                        type: object
                        properties:
                            productId:
                                description: Product id/code
                                maxLength: 12
                                type: string
                            productType:
                                description: "There are two product types:\n\n- **subscription**: An arrangement to receive a publication, regularly by paying in advance.\n\n- **series**:\tA set of periodicals, books or other documents published under a common title."
                                enum:
                                    - subscription
                                    - series
                                type: string
                            subscriptionIssues:
                                description: >-
                                    List with subscriptionIssues objects for an ordinary subscription
                                    product. 


                                    Issues are found here if `productType` is subscription.
                                type: array
                                items:
                                    type: object
                                    properties:
                                        issue:
                                            description: Issue code
                                            maxLength: 10
                                            type: string
                                        publicationTime:
                                            description: >-
                                                Publication date


                                                JSON timestamps are specified in milliseconds since January 1,
                                                1970 UTC.
                                            type: integer
                            seriesIssues:
                                description: |-
                                    List with seriesIssues objects for an ordinary subscription product. 

                                    Issues are found here if `productType` is series.
                                type: array
                                items:
                                    type: object
                                    properties:
                                        issue:
                                            description: Issue code
                                            maxLength: 10
                                            type: string
                                        productIdAttached:
                                            description: Product id/code attached to this issue.
                                            maxLength: 12
                                            type: string
        ListProductsClientMode-response:
            description: ''
            type: object
            properties:
                products:
                    type: array
                    items:
                        type: object
                        properties:
                            partnerId:
                                description: The partner id the product below belongs to
                                type: integer
                            productId:
                                description: The product id. A unique code for the product
                                maxLength: 12
                                type: string
                            accessType:
                                description: "* **A:** The user has access to everything  \n* **B:** The user has access to everything  \nbetween `startTime` and `endTime`\n* **D:** The user has no access\t  "
                                enum:
                                    - A
                                    - B
                                    - D
                                type: string
                            startTime:
                                description: >-
                                    Start of the current access period. For subscriptions, startTime is
                                    00:00:00 on the subscription start date. If the user continues to pay for
                                    the subscription then startTime does not change. If the user stops paying
                                    for the subscription and later starts a new subscription on the same
                                    product (and some time has passed during which the user did not pay) then
                                    startTime will be 00:00:00 on the new start date. This value is only
                                    returned for `accessType` B.


                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC.


                                    XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
                                type: integer
                            endTime:
                                description: >-
                                    End of the current access period. For subscriptions, endTime is 23:59:59
                                    on the last date that the user has paid for or 23:59:59 on the publication
                                    date of the last issue that the user has received if that is a later date
                                    (relevant for free subscriptions). This value is only returned for
                                    `accessType` B.


                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC.

                                     XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
                                type: integer
        CheckProductClientMode-request:
            description: ''
            type: object
            properties:
                changedAfter:
                    description: Only get products changed after this time
                    type: integer
                onlyActive:
                    description: Only get active products (time now is between `startTime` and `endTime`).
                    type: boolean
        Model-ListConsentEventHistory:
            type: object
            properties:
                issuer:
                    description: "Identification of the issuer principal of the consent\t"
                    maxLength: 255
                    type: string
                subject:
                    description: Identification of the subject e.g. customer number or credential
                    maxLength: 255
                    type: string
                subjectType:
                    description: |-
                        The vaild type of subject is one of these:

                        - **CONNECT**
                        - **CONNECTID**
                        - **EXTERNAL**
                        - **ORDER**
                    enum:
                        - CONNECT
                        - CONNECTID
                        - EXTERNAL
                        - ORDER
                    type: string
                consents:
                    description: Consents to given `issuer` and `subject`
                    type: array
                    items:
                        type: object
                        properties:
                            consentId:
                                description: Consent id
                                type: integer
                            target:
                                description: Identification of the target of consent (e.g. URL of a policy)
                                maxLength: 255
                                type: string
                            scope:
                                description: The scope of the consent can refer to a section or clause in the `target`
                                maxLength: 255
                                type: string
                            events:
                                description: Events to given consent
                                type: array
                                items:
                                    type: object
                                    properties:
                                        consentEventId:
                                            description: Consent event id
                                            type: integer
                                        created:
                                            description: >-
                                                Consent creation date


                                                JSON timestamps are specified in milliseconds since January 1,
                                                1970 UTC
                                            type: integer
                                        source:
                                            description: Identification of the source of the consent principal.
                                            maxLength: 255
                                            type: string
                                        action:
                                            description: |-
                                                It informs if the consent is granted.

                                                - **true**: The consent is granted.
                                                - **false**:  The consent is revoked or not granted.
                                            type: boolean
        Model-RegisterConsentEvent-request:
            title: RegisterConsentEvent - request
            required:
                - subject
                - subjectType
                - action
            type: object
            properties:
                consentId:
                    description: Consent ID for this event - required unless `target` / `scope` is provided
                    type: integer
                consentTarget:
                    description: >-
                        Identification of the `target` of the consent (e.g. URL of a policy) - required if
                        none `consentId` is provided
                    maxLength: 255
                    type: string
                consentScope:
                    description: >-
                        Scope of the consent. Typically, this will refer to a section or clause in the
                        `target` - required if none `consentId` is provided
                    maxLength: 255
                    type: string
                subject:
                    description: "Identification of the subject:\r\n\r\n* Enter **customer number** for `subjectType` CONNECT\r\n* Enter **credential** for `subjectType` CONNECTID\r\n* Enter **external id** for `subjectType` EXTERNAL\r\n* Enter **ConnectID orderid** for `subjectType` ORDER."
                    maxLength: 255
                    type: string
                subjectType:
                    description: |-
                        Type of subject, allowed is:
                        * **CONNECT**
                        * **CONNECTID** 
                        * **EXTERNAL** 
                        * **ORDER**
                    enum:
                        - CONNECT
                        - CONNECTID
                        - EXTERNAL
                        - ORDER
                    type: string
                source:
                    description: Identification of the source of the consent principal
                    maxLength: 255
                    type: string
                action:
                    description: |-
                        It informs if the consent is granted.

                        * **true:** The consent is granted.
                        * **false:** The consent is revoked or not granted.
                    type: boolean
                eventTime:
                    description: |-
                        Time when the consent was given, if different from the current time.

                        JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                    type: integer
                data:
                    format: byte
                    description: 'Data documenting the collecting of the consent, base64-encoded.'
                    type: string
        RegisterDeliveryStops-request:
            description: ''
            type: object
            properties:
                deliveryStop:
                    required:
                        - product
                        - stopTime
                        - stopType
                    type: object
                    properties:
                        id:
                            description: 'Unique id for this stop, change existing stop if id is given'
                            type: integer
                        product:
                            description: Product to be stopped
                            maxLength: 12
                            type: string
                        stopTime:
                            description: |-
                                When to stop delivery.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                            type: integer
                        stopEndTime:
                            description: |-
                                When to start after a stop period. Required when `stopType` is not permanent.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                            type: integer
                        stopType:
                            description: >-
                                Permanent or temporary stop. Stop type to be used: 


                                * **permanent:** permanent stop

                                * **temporary:** temporary stop

                                * **donation:** donation stop, i.e somebody else is getting product in stop
                                period

                                * **storing:** storing stop, i.e issues in period will be post distributed

                                * **noDelivery:** no delivery, i.e issues in period will not be distributed
                                and no extension of paid period. A digital product will be started in the stop
                                period.
                            enum:
                                - permanent
                                - temporary
                                - donation
                                - storing
                                - noDelivery
                            type: string
                        deliveryStopChannel:
                            description: 'The stop channel-code for the stop (Ex. "CS", "EMAIL","INV"...)'
                            maxLength: 12
                            type: string
                        deliveryStopReason:
                            description: 'The stop reason-code for the stop (Ex. "BS", "DS", "MO"...)'
                            maxLength: 2
                            type: string
        RegisterDeliveryStops-response:
            description: ''
            type: object
            properties:
                deliveryStop:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                description: Unique id for this stop
                                type: integer
                            product:
                                description: Product code
                                maxLength: 12
                                type: string
                            stopTime:
                                description: "Time to stop\t\n\nJSON timestamps are specified in milliseconds since January 1, 1970 UTC"
                                type: integer
                            stopEndTime:
                                description: |-
                                    Time to start after a stop period

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            stopType:
                                description: >-
                                    Permanent or temporary stop. Stop type to be used: 


                                    * **permanent:** permanent stop

                                    * **temporary:** temporary stop

                                    * **donation:** donation stop, i.e somebody else is getting product in
                                    stop period

                                    * **storing:** storing stop, i.e issues in period will be post distributed

                                    * **noDelivery:** no delivery, i.e issues in period will not be
                                    distributed and no extension of paid period.
                                enum:
                                    - permanent
                                    - temporary
                                    - donation
                                    - storing
                                    - noDelivery
                                type: string
                            deliveryStopChannel:
                                description: 'The stop channel-code for the stop (Ex. "CS", "EMAIL","INV"...)'
                                maxLength: 12
                                type: string
                            deliveryStopReason:
                                description: 'The stop reason-code for the stop (Ex. "BS", "DS", "MO"...)'
                                maxLength: 2
                                type: string
        RemoveDeliveryStops-response:
            description: ''
            type: object
            properties:
                deliveryStops:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                description: Unique id for this stop
                                type: integer
                            product:
                                description: Product code
                                maxLength: 12
                                type: string
                            stopTime:
                                description: "Time to stop\t\n\nJSON timestamps are specified in milliseconds since January 1, 1970 UTC\n\n XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)"
                                type: integer
                            stopEndTime:
                                description: |-
                                    Time to start after a stop period

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC.

                                     XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601).
                                type: integer
                            stopType:
                                description: >-
                                    Permanent or temporary stop. Stop type to be used: 


                                    * **permanent:** permanent stop

                                    * **temporary:** temporary stop

                                    * **donation:** donation stop, i.e somebody else is getting product in
                                    stop period

                                    * **storing:** storing stop, i.e issues in period will be post distributed

                                    * **noDelivery:** no delivery, i.e issues in period will not be
                                    distributed and no extension of paid period.
                                enum:
                                    - permanent
                                    - temporary
                                    - donation
                                    - storing
                                    - noDelivery
                                type: string
                            deliveryStopChannel:
                                description: 'The stop channel-code for the stop (Ex. "CS", "EMAIL","INV"...)'
                                maxLength: 12
                                type: string
                            deliveryStopReason:
                                description: 'The stop reason-code for the stop (Ex. "BS", "DS", "MO"...)'
                                maxLength: 2
                                type: string
        ListDeliveryStops-response:
            description: ''
            type: object
            properties:
                deliveryStops:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                description: Unique id for this stop
                                type: integer
                            product:
                                description: Product code
                                maxLength: 12
                                type: string
                            stopTime:
                                description: "Time to stop\t\n\nJSON timestamps are specified in milliseconds since January 1, 1970 UTC\n\n XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)"
                                type: integer
                            stopEndTime:
                                description: |-
                                    Time to start after a stop period

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC.

                                     XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601).
                                type: integer
                            stopType:
                                description: >-
                                    Permanent or temporary stop. Stop type to be used: 


                                    * **permanent:** permanent stop

                                    * **temporary:** temporary stop

                                    * **donation:** donation stop, i.e somebody else is getting product in
                                    stop period

                                    * **storing:** storing stop, i.e issues in period will be post distributed

                                    * **noDelivery:** no delivery, i.e issues in period will not be
                                    distributed and no extension of paid period.
                                enum:
                                    - permanent
                                    - temporary
                                    - donation
                                    - storing
                                    - noDelivery
                                type: string
                            deliveryStopChannel:
                                description: 'The stop channel-code for the stop (Ex. "CS", "EMAIL","INV"...)'
                                maxLength: 12
                                type: string
                            deliveryStopReason:
                                description: 'The stop reason-code for the stop (Ex. "BS", "DS", "MO"...)'
                                maxLength: 2
                                type: string
        Model-ExternalIdentity-response:
            description: ''
            type: object
            properties:
                credential:
                    description: Representation of user that uses the ConnectID service
                    maxLength: 60
                    type: string
                externalId:
                    description: External system unique id that represents user in third part system
                    maxLength: 60
                    type: string
                credentialType:
                    description: "Credential type, for now it is only returned type:\n*  **D**: AID\t"
                    type: string
                canLogin:
                    description: |-
                        Says if user can login, eg. call other logged in user API:

                        * **true**: User can login.
                        * **false**: User can not login.
                    type: boolean
                customerNumber:
                    description: Customer number in Connect system if is set.
                    type: integer
                uniqueId:
                    description: 'External id to user in ConnectID, additional info'
                    maxLength: 32
                    type: string
                enabled:
                    description: |-
                        Says if user is enabled in ConnectID and can be used by other systems.

                        * **true**: User is enabled in ConnectID and can be used by other systems.
                        * **false**: User is not enabled in ConnectedID and can not be used by other systems.
                    type: boolean
                newUser:
                    description: |-
                        Says if user is created just now or exist from before.

                        * **true**:  The user is created just now.
                        * **false**: The user exist from before.
                    type: boolean
                extidCode:
                    description: "Generated jwt token to be used with custom grant_type described here to obtain an access_token\t"
                    type: string
        CheckArticlePrice-request:
            description: ''
            required:
                - companyCode
                - product
            type: object
            properties:
                category:
                    nullable: true
                    description: The category code. If null this function returns all prices for this product.
                    maxLength: 12
                    type: string
                companyCode:
                    description: The company code for the article
                    maxLength: 12
                    type: string
                product:
                    description: The product code
                    maxLength: 12
                    type: string
        CheckCouponPriceClientMode-request:
            description: ''
            required:
                - couponCode
                - couponNumber
            type: object
            properties:
                couponCode:
                    description: Coupon code
                    maxLength: 12
                    type: string
                couponNumber:
                    description: 'Coupon number '
                    type: integer
                customerNumber:
                    description: Customer number
                    type: integer
                countryCode:
                    description: |-
                        The country code - [**ISO 3166 -
                                    alpha-2**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
                    maxLength: 3
                    type: string
                postalCode:
                    description: Postal code for address
                    maxLength: 10
                    type: string
        SearchCustomerClientMode-request:
            description: ''
            type: object
            properties:
                productCode:
                    description: Product code to match in search.
                    maxLength: 12
                    type: string
                companyName:
                    description: Company name to match in a name/address search.
                    maxLength: 40
                    type: string
                departmentName:
                    description: Department name to match in a name/address search.
                    maxLength: 40
                    type: string
                firstName:
                    description: First name to match in a name/address search.
                    maxLength: 30
                    type: string
                middleName:
                    description: Middle name to match in a name/address search.
                    maxLength: 30
                    type: string
                lastName:
                    description: Last name to match in a name/address search.
                    maxLength: 30
                    type: string
                careOfAddress:
                    description: Care of address to match in a name/address search.
                    maxLength: 40
                    type: string
                streetAddress:
                    description: Street name to match in a name/address search.
                    maxLength: 40
                    type: string
                streetNumber:
                    description: Street number to match in a name/address search.
                    type: integer
                entrance:
                    description: Entrance to match in a name/address search.
                    maxLength: 12
                    type: string
                postalCode:
                    description: Postal code to match in a name/address search.
                    maxLength: 10
                    type: string
                postalPlace:
                    description: Postal place to match in a name/address search.
                    maxLength: 30
                    type: string
                countryCode:
                    description: "Country code, in [**ISO 3166-2 format**](http://en.wikipedia.org/wiki/ISO_3166-2), to match in a search.\t"
                    maxLength: 3
                    type: string
                phoneNumber:
                    description: >-
                        Phone number to match in a search.


                        A phone number has to follow the telephone number standard
                        [**E.164**](https://en.wikipedia.org/wiki/E.164)
                    maxLength: 20
                    type: string
                email:
                    format: email
                    description: Email to match in a search.
                    maxLength: 255
                    type: string
        SearchCustomerClientMode-response:
            description: ''
            type: object
            properties:
                customers:
                    maxItems: 5
                    type: array
                    items:
                        type: object
                        properties:
                            customerNumber:
                                description: Customer number
                                type: integer
                            companyName:
                                description: Company name
                                maxLength: 40
                                type: string
                            departmentName:
                                description: Department name
                                maxLength: 40
                                type: string
                            firstName:
                                description: First name
                                maxLength: 30
                                type: string
                            middleName:
                                description: Middle name
                                maxLength: 30
                                type: string
                            lastName:
                                description: last name
                                maxLength: 30
                                type: string
                            streetAddress:
                                description: Street address
                                maxLength: 40
                                type: string
                            streetNumber:
                                description: Street number
                                type: integer
                            postalCode:
                                description: "Postal code street address\t"
                                maxLength: 10
                                type: string
                            postalPlace:
                                description: Postal place street address
                                maxLength: 30
                                type: string
                            postalAddress:
                                description: Postal address
                                maxLength: 40
                                type: string
                            postalAddressPostalCode:
                                description: Postal code postal address
                                maxLength: 10
                                type: string
                            postalAddressPostalPlace:
                                description: Postal place postal address
                                maxLength: 30
                                type: string
                            countryCode:
                                description: >-
                                    Country code, in [**ISO 3166-2
                                    format**](http://en.wikipedia.org/wiki/ISO_3166-2)
                                maxLength: 3
                                type: string
                            emails:
                                description: List with emails
                                type: object
                                properties:
                                    email:
                                        format: email
                                        description: Email address
                                        maxLength: 255
                                        type: string
                            phoneNumbers:
                                description: List with phone numbers
                                type: array
                                items:
                                    type: object
                                    properties:
                                        phoneNumber:
                                            description: >-
                                                A phone number has to follow the telephone number standard
                                                [**E.164**](https://en.wikipedia.org/wiki/E.164)
                                            maxLength: 20
                                            type: string
                                        isMobile:
                                            description: |-
                                                Informs if it is a mobile phone number.

                                                * **true**: It is a mobile phone number.
                                                * **false**: It is not a mobile phone number.
                                            type: boolean
        ListNextDistributions-response:
            description: ''
            type: object
            properties:
                nextIssue:
                    deprecated: true
                    description: First unpublished issue
                    type: string
                deliveryDate:
                    deprecated: true
                    description: |-
                        Delivery date of next unpublished issue.

                        JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                    type: integer
                nextDistribution:
                    type: object
                    properties:
                        issue:
                            description: The next issue that is going to be publish
                            maxLength: 10
                            type: string
                        deliveryDate:
                            description: |-
                                Delivery date of next unpublished issue.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.

                                 XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601).
                            type: integer
                        distributionDate:
                            description: |-
                                Distribution date of next unpublished issue.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.

                                 XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601).
                            type: integer
                nextDelivery:
                    type: object
                    properties:
                        issue:
                            description: Next possible issue for delivery to the customer
                            maxLength: 10
                            type: string
                        deliveryDate:
                            description: |-
                                Delivery date of next possible issue for delivery to the customer.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.

                                 XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601).
                            type: integer
                        distributionDate:
                            description: |-
                                Distribution date of next possible issue for delivery to the customer.

                                JSON timestamps are specified in milliseconds since January 1, 1970 UTC.

                                 XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601).
                            type: integer
        Model-ListAddress:
            description: ''
            type: object
            properties:
                addressList:
                    type: array
                    items:
                        type: object
                        properties:
                            product:
                                description: The product code
                                maxLength: 12
                                type: string
                            addressType:
                                description: >-
                                    The type of this address item. Types returned on the different query
                                    types: 


                                    - *currentAddress:* **delivery** and **home**  

                                    - *historicalAddress:* **temporary**  

                                    - *futureAddress:* **temporary** and **permanent**
                                enum:
                                    - delivery
                                    - home
                                    - temporary
                                    - permanent
                                type: string
                            id:
                                description: Unique id for this address
                                type: integer
                            careOfAddress:
                                description: The C/O for this address
                                maxLength: 40
                                type: string
                            streetAddress:
                                description: The street for this address
                                maxLength: 40
                                type: string
                            streetNumber:
                                description: The street number for this address
                                type: integer
                            entrance:
                                description: The entrance for this address
                                maxLength: 12
                                type: string
                            floor:
                                description: The floor for this address
                                type: integer
                            suite:
                                description: The suite for this address
                                maxLength: 10
                                type: string
                            postalCode:
                                description: The postal code for this address
                                maxLength: 10
                                type: string
                            postalPlace:
                                description: The postal place for this address
                                maxLength: 30
                                type: string
                            postalAddress:
                                description: The postal address for this address
                                maxLength: 40
                                type: string
                            postalAddressPostalCode:
                                description: The postal code for this address's postal address
                                maxLength: 10
                                type: string
                            postalAddressPostalPlace:
                                description: "The postal place for this address's postal address\t"
                                maxLength: 30
                                type: string
                            countryCode:
                                description: >-
                                    The country code for this address - [**ISO 3166 -
                                    alpha-2**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                                maxLength: 3
                                type: string
                            period:
                                description: Wrapper holding details about an address's active period
                                type: object
                                properties:
                                    startTime:
                                        description: >-
                                            The start of an address's active period.


                                            JSON timestamps are specified in milliseconds since January 1,
                                            1970 UTC

                                             XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
                                        type: integer
                                    endTime:
                                        description: >-
                                            The end of an address's active period.


                                            JSON timestamps are specified in milliseconds since January 1,
                                            1970 UTC

                                             XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
                                        type: integer
        ListRecruitment-response:
            description: ''
            type: object
            properties:
                points:
                    description: Number of points for this customer
                    type: integer
                products:
                    description: List of proucts valid for recruitment on this campaign
                    type: array
                    items:
                        type: string
                recruitments:
                    description: List of recruitments
                    type: array
                    items:
                        type: object
                        properties:
                            recruited:
                                description: Customer number of the recruited
                                type: integer
                            product:
                                description: Product code
                                maxLength: 12
                                type: string
                            active:
                                description: Customer status on product
                                type: boolean
                            recruitedDate:
                                description: Date of recruitment
                                type: integer
                            points:
                                description: Number of points this recruitment generated
                                type: integer
                unverifiedRecruitments:
                    description: List of unverified recruitments
                    type: array
                    items:
                        type: object
                        properties:
                            product:
                                description: Product code
                                maxLength: 12
                                type: string
                            recruitedDate:
                                description: Date of recruitment
                                type: integer
                            status:
                                description: Order status on recruitment
                                type: string
                            points:
                                description: Number of points this recruitment generated
                                type: integer
        CheckArticlePrice-response:
            description: ''
            properties:
                articlePriceResponse:
                    type: array
                    items:
                        type: object
                        properties:
                            categoryCode:
                                description: The category code
                                maxLength: 12
                                type: string
                            price:
                                description: "The price of the article\t"
                                multipleOf: 0.01
                                type: number
        CheckCouponPriceClientMode-response:
            description: ''
            type: object
            properties:
                companyCode:
                    description: Company code
                    maxLength: 12
                    type: string
                product:
                    description: Product code
                    maxLength: 12
                    type: string
                price:
                    description: Price
                    multipleOf: 0.01
                    type: number
                vatAmount:
                    description: Vat amount
                    multipleOf: 0.01
                    type: number
                vatpercent:
                    description: Vat percentage
                    multipleOf: 0.01
                    type: number
                vatInclude:
                    description: "Informs if vat is included or not\r\n\r\n* **true:** Vat is included in price \r\n* **false:** Vat is not included"
                    type: boolean
                currency:
                    description: >-
                        Currency standard - [**ISO4217 - alphabetic
                        code**](https://en.wikipedia.org/wiki/ISO_4217).
                    maxLength: 3
                    type: string
                distAmount:
                    description: Amount for distribution price
                    multipleOf: 0.01
                    type: number
                distAmountvat:
                    description: 'Vat amount on dist amount. '
                    multipleOf: 0.01
                    type: number
                customerNumber:
                    description: Customer Number
                    type: integer
        Model-Product:
            description: ''
            type: object
            properties:
                products:
                    type: array
                    items:
                        type: object
                        properties:
                            companyCode:
                                description: "Company code for the product\t"
                                maxLength: 12
                                type: string
                            product:
                                description: Product code
                                maxLength: 12
                                type: string
                            description:
                                description: Description of the product
                                maxLength: 40
                                type: string
                            productType:
                                description: >-
                                    Vaild product type:


                                    - **magazine**

                                    - **newspaper**:

                                    - **series**: A set of periodicals, books or other documents published
                                    under a common title.

                                    - **general**
                                enum:
                                    - magazine
                                    - newspaper
                                    - series
                                    - general
                                type: string
                            startTime:
                                description: |-
                                    Start time to use this product.

                                    XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            endTime:
                                description: |-
                                    End time to use this product

                                    XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            weight:
                                description: Weight in grams.
                                multipleOf: 0.01
                                type: number
                            currency:
                                description: >-
                                    Currency code for product price [**ISO4217 - alphabetic
                                    code**](https://en.wikipedia.org/wiki/ISO_4217). Only used when
                                    `productType` is general.
                                maxLength: 3
                                type: string
                            webOfferPrice:
                                description: >-
                                    Web offer price, typically discounted price compared to retail price. Only
                                    used when `productType` general
                                multipleOf: 0.01
                                type: number
                            retailPrice:
                                description: Retail or list price. Only used when `productType` is general.
                                multipleOf: 0.01
                                type: number
                            vatPercent:
                                description: >-
                                    VAT percent to use for this product. Vat included or excluded in given
                                    prices.
                                multipleOf: 0.01
                                type: number
                            digital:
                                description: |-
                                    Informs if it is a digital product.

                                    - **true**: It is a digital product
                                    - **false**: It is not a digital product
                                type: boolean
        ListSubscriptionsClientMode-response:
            description: ''
            type: object
            properties:
                subscriptions:
                    type: array
                    items:
                        type: object
                        properties:
                            product:
                                description: "A unique id for the product\t"
                                maxLength: 12
                                type: string
                            stopped:
                                description: |-
                                    Informs if the subscription is stopped.

                                    * **true**: The subscription is stopped.
                                    * **false**: The subscription is not stopped.
                                type: boolean
                            startTime:
                                description: >-
                                    Start of the current subscription period.


                                    startTime is 00:00:00 on the subscription start date. If the user
                                    continues to pay for the subscription then startTime does not change. If
                                    the user stops paying for the subscription and later starts a new
                                    subscription on the same product (and some time has passed during which
                                    the user did not pay) then startTime will be 00:00:00 on the new start
                                    date.


                                    XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)


                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            endTime:
                                description: >-
                                    End of the current subscription period.


                                    endTime is 23:59:59 on the last date that the user has paid for or
                                    23:59:59 on the publication date of the last issue that the user has
                                    received if that is a later date (relevant for free subscriptions).


                                    XML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)


                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            paid:
                                description: |-
                                    Informs if the  subscription period is paid,

                                    * **true**: The subscription period is paid.
                                    * **false**: The subscription period is unpaid.
                                type: boolean
                            priceDetails:
                                type: object
                                properties:
                                    couponCode:
                                        description: CouponCode
                                        maxLength: 12
                                        type: string
                                    couponNumber:
                                        description: CouponNumber
                                        type: integer
                                    discountfromfullsm:
                                        description: The discount
                                        multipleOf: 0.01
                                        type: number
                                    promotion:
                                        description: Promotion
                                        maxLength: 12
                                        type: string
        RegisterRecruitmentClientMode-request:
            description: ''
            required:
                - product
                - campaign
                - recruiter
                - recruitments
            type: object
            properties:
                product:
                    description: "Product code. The product must be a subcription product.\t"
                    maxLength: 12
                    type: string
                campaign:
                    description: Campaign code
                    maxLength: 12
                    type: string
                recruiter:
                    description: The recruiter
                    required:
                        - name
                        - address
                    type: object
                    properties:
                        name:
                            required:
                                - lastName
                            type: object
                            properties:
                                firstName:
                                    description: First name
                                    maxLength: 30
                                    type: string
                                middleName:
                                    description: Middle name
                                    maxLength: 30
                                    type: string
                                lastName:
                                    description: Last name
                                    maxLength: 30
                                    type: string
                                companyName:
                                    description: Company name
                                    maxLength: 40
                                    type: string
                                departmentName:
                                    description: Department name
                                    maxLength: 40
                                    type: string
                        address:
                            $ref: '#/components/schemas/Model-Address'
                        phoneNumber:
                            description: >-
                                The recruiters phonenumber.


                                A phone number has to follow the telephone number standard
                                [**E.164**](https://en.wikipedia.org/wiki/E.164)
                            maxLength: 20
                            type: string
                        email:
                            format: email
                            description: The recruiters email
                            maxLength: 255
                            type: string
                recruitmentPremiumPreferences:
                    description: >-
                        * Missing list, i.e element missing, cause no changes in existing premium preferences.

                        * List (empty or not) result in replacing existing premium preferences, i.e empty list
                        will remove all premium preferences.
                    type: array
                    items:
                        required:
                            - companyCode
                            - product
                            - preferenceNumber
                        type: object
                        properties:
                            companyCode:
                                description: The company that owns the product
                                maxLength: 12
                                type: string
                            product:
                                description: "The premium product\t"
                                maxLength: 12
                                type: string
                            preferenceNumber:
                                description: >-
                                    The preference number for this premium, representing the sorting order of
                                    wanted premiums, with 1 representing the preferred premium product.
                                type: integer
                recruitments:
                    type: array
                    items:
                        required:
                            - name
                            - address
                            - couponCode
                            - couponNumber
                            - amount
                            - quantity
                        type: object
                        properties:
                            name:
                                required:
                                    - lastName
                                type: object
                                properties:
                                    firstName:
                                        description: First name
                                        maxLength: 30
                                        type: string
                                    middleName:
                                        description: Middle name
                                        maxLength: 30
                                        type: string
                                    lastName:
                                        description: Last name
                                        maxLength: 30
                                        type: string
                                    companyName:
                                        description: Company name
                                        maxLength: 40
                                        type: string
                                    departmentName:
                                        description: Department name
                                        maxLength: 40
                                        type: string
                            address:
                                $ref: '#/components/schemas/Model-Address'
                            couponCode:
                                description: Coupon code used when starting the recuited persons subscription
                                maxLength: 12
                                type: string
                            couponNumber:
                                description: Coupon number used when starting the recuited persons subscription
                                type: integer
                            amount:
                                description: >-
                                    Amount to use on the recuited one. This is usually zero, but may have
                                    another value. Must be greater or equals to zero
                                multipleOf: 0.01
                                minimum: 0
                                type: number
                            quantity:
                                description: >-
                                    Number of copies used when starting. This is usually 1, but may have
                                    another value. Must be greater or equals to 1
                                minimum: 1
                                type: integer
                            phoneNumber:
                                description: >-
                                    Recruits phone number.


                                    A phone number has to follow the telephone number standard
                                    [**E.164**](https://en.wikipedia.org/wiki/E.164)
                                maxLength: 20
                                type: string
                            email:
                                format: email
                                description: Recruits e-mail addresse
                                maxLength: 255
                                type: string
        RegisterRecruitments-request:
            description: ''
            required:
                - product
                - campaign
                - recruitments
            type: object
            properties:
                product:
                    maxLength: 12
                    type: string
                campaign:
                    maxLength: 12
                    type: string
                recruiter:
                    required:
                        - name
                        - address
                    type: object
                    properties:
                        name:
                            $ref: '#/components/schemas/Model-Name'
                        address:
                            $ref: '#/components/schemas/Model-Address'
                        phoneNumber:
                            description: >-
                                A phone number has to follow the telephone number standard
                                [**E.164**](https://en.wikipedia.org/wiki/E.164)
                            maxLength: 20
                            type: string
                        email:
                            format: email
                            description: The recruiters email
                            maxLength: 255
                            type: string
                recruitmentPremiumPreferences:
                    type: array
                    items:
                        required:
                            - companyCode
                            - product
                            - preferenceNumber
                        type: object
                        properties:
                            companyCode:
                                description: The company that owns the product
                                maxLength: 12
                                type: string
                            product:
                                description: "The premium product\t"
                                maxLength: 12
                                type: string
                            preferenceNumber:
                                description: >-
                                    The preference number for this premium, representing the sorting order of
                                    wanted premiums, with 1 representing the preferred premium product
                                type: integer
                recruitments:
                    description: ' The coupon must belong to the given product in the recruitment request.'
                    type: array
                    items:
                        required:
                            - name
                            - address
                            - couponCode
                            - couponNumber
                            - amount
                            - quantity
                        type: object
                        properties:
                            name:
                                $ref: '#/components/schemas/Model-Name'
                            address:
                                $ref: '#/components/schemas/Model-Address'
                            couponCode:
                                description: "Coupon code used when starting the recuited persons subscription\t"
                                maxLength: 12
                                type: string
                            couponNumber:
                                description: "Coupon number used when starting the recuited persons subscription\t"
                                type: integer
                            amount:
                                description: "Amount to use on the recuited one. This is usually zero, but may have another value. Must be greater or equals to zero\t"
                                multipleOf: 0.01
                                minimum: 0
                                type: number
                            quantity:
                                description: "Number of copies used when starting. This is usually 1, but may have another value. Must be greater or equals to 1\t"
                                minimum: 1
                                type: integer
                            phoneNumber:
                                description: >-
                                    Recruits phone number


                                    A phone number has to follow the telephone number standard
                                    [**E.164**](https://en.wikipedia.org/wiki/E.164)
                                maxLength: 20
                                type: string
                            email:
                                format: email
                                description: Recruits e-mail addresse
                                maxLength: 255
                                type: string
        RemoveTicket-response:
            description: ''
            type: object
            properties:
                success:
                    description: |-
                        Informs if ticket is marked as deleted.
                        * **true**: The ticket marked as deleted.
                        * **false**: The ticket may not be marked as deleted.
                    type: boolean
        RemovePayExToken-response:
            description: ''
            type: object
            properties:
                success:
                    description: |-
                        Informs if token is marked as deleted.
                        * **true**: The token marked as deleted.
                        * **false**: The token may not be marked as deleted.
                    type: boolean
        RemovePayExToken-request:
            description: ''
            required:
                - recurrenceToken
                - merchantId
            type: object
            properties:
                recurrenceToken:
                    description: Token that shall be marked as deleted.
                    maxLength: 64
                    type: string
                merchantId:
                    description: Merchant id for token.
                    type: integer
        AddPayExToken-response:
            description: ''
            type: object
            properties:
                success:
                    description: "It informs if the token was added.\r\n\r\n* **true:** The token was added.\r\n* **false:** The token was not added.\r\n"
                    type: boolean
                transactionId:
                    description: The transactionId
                    type: integer
        AddPayExToken-request:
            description: ''
            required:
                - tokenType
                - productCode
            type: object
            properties:
                tokenType:
                    description: |-
                        Specific transaction type for token. Following types may be used: 
                        * **card**: Payment card
                    enum:
                        - card
                    type: string
                productCode:
                    description: Specific product for token.
                    type: string
        CheckAccess-response:
            description: ''
            type: object
            properties:
                access:
                    description: |-
                        The information says if the user has access:

                        * **true**:  The user has access.
                        * **false**: The user has not access.
                    type: boolean
                accesses:
                    type: array
                    items:
                        type: object
                        properties:
                            access:
                                description: Access value for specific level of access
                                type: boolean
                            accessLevel:
                                description: >-
                                    Level of access  

                                    * **A:** Product, when is asking base on product in request  

                                    * **B:** Article, when is asking base on article id in request  

                                    * **C:** Domain, when is asking base on domain in request  

                                    * **D:** IP, when is asking base on IP address in request

                                    * **E:** Category type, when is asking base on category type in request

                                    * **F:** IP & Domain, if sharing depends upon both domain and IP this
                                    level is returned in the response

                                    * **G:** Azure active directory, when is asking based on boolean value in
                                    request

                                    * **H:** aID family, when is asking based on boolean value in request
                                enum:
                                    - A
                                    - B
                                    - C
                                    - D
                                    - E
                                    - F
                                    - G
                                    - H
                                type: string
                            accessType:
                                description: |-
                                    Type of access:  
                                    * **A:** Subscription, when subscription is for product  
                                    * **B:** Shared, when subscription on product is shared  
                                    * **C:** Article, when user bought specific article  
                                    * **D:** Domain, when user has access base on domain  
                                    * **E:** IP, when user has access base on IP
                                    * **F:** Require IP login, when user requires login based on IP
                                    * **G:** Category type, when user has access based on category type
                                enum:
                                    - A
                                    - B
                                    - C
                                    - D
                                    - E
                                    - F
                                    - G
                                type: string
        CheckAccess-request:
            description: ''
            required:
                - product
            type: object
            properties:
                product:
                    description: Check if user has access base on product
                    type: string
                articleId:
                    description: Check if user has access base on specific article id
                    type: string
                domain:
                    description: Check if user has access base on domain
                    type: string
                ip:
                    description: Check if user has access base on IP
                    type: string
                categoryType:
                    description: >-
                        Check if user has access based on any subscription with category having this category
                        type
                    type: string
                accessAzureAd:
                    description: |-
                        Check if user has access to azure active directory :

                        * **true**:  To check if user has access to azure AD
                        * **false**: Do not check if user has access to azure AD.
                    type: boolean
                accessAidFamily:
                    description: |-
                        Check if user or their aid family has access to given product : 

                        * **true**:  To check if user or family has access to given product
                        * **false**: Do not check if user or family has access to given product.
                    type: boolean
        PayInvoice-response:
            description: ''
            type: object
            properties:
                success:
                    description: "It informs if the payment was added.\r\n\r\n* **true:** The payment was added.\r\n* **false:** The payment was not added.\r\n"
                    type: boolean
                transactionId:
                    description: The transactionId
                    type: integer
        PayInvoice-request:
            description: ''
            required:
                - invoiceNumber
                - productCode
                - companyCode
                - paymentMethod
            type: object
            properties:
                invoiceNumber:
                    description: Specific invoice for payment.
                    maxLength: 10
                    type: string
                productCode:
                    description: Specific product for payment.
                    maxLength: 12
                    type: string
                companyCode:
                    description: Specific company for payment.
                    maxLength: 12
                    type: string
                paymentMethod:
                    description: |-
                        Specific payment method type for payment. Following types may be used: 
                        * **creditcardPayex**: Payment card
                    enum:
                        - creditcardPayex
                    type: string
        Model-Message-response:
            description: ''
            type: object
            properties:
                messages:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                description: Message id referencing to message IN
                                type: integer
                            date:
                                description: Message date
                                type: integer
                            direction:
                                description: |-
                                    Different direction:
                                    - **IN**: Message to customer service
                                    - **OUT**: Answer from customer service
                                enum:
                                    - IN
                                    - OUT
                                type: string
                            messageSubject:
                                description: The subject on the message to customer service.
                                maxLength: 40
                                type: string
                            messageContent:
                                description: Message content
                                maxLength: 32000
                                type: string
        ListBasicInvoiceInfo-response:
            description: ''
            type: object
            properties:
                invoices:
                    type: array
                    items:
                        type: object
                        properties:
                            invoiceNumber:
                                description: The unique number of the invoice for this company
                                minimum: 1
                                type: integer
                            companyCode:
                                description: The company that owns this invoice
                                maxLength: 12
                                type: string
                            invoiceOfferCount:
                                description: >-
                                    Invoice offer count. If this is more than 1, this invoice contains
                                    alternative offers.
                                maxLength: 1
                                type: integer
                            invoiceDate:
                                format: date
                                description: >-
                                    The date of creating the invoice.


                                    It follows the standard format for date defined by [**RFC
                                    3339**](https://tools.ietf.org/html/rfc3339#section-5.6).
                                type: string
                            invoicePaymentStatus:
                                description: |-
                                    The status of invoice payment:

                                    - **paid**: The invoice is paid
                                    - **notPaid**: The invoice is not paid
                                    - **partiallyPaid**: The invoice is partially paid
                                enum:
                                    - paid
                                    - notPaid
                                    - partiallyPaid
                                type: string
                            invoiceAmount:
                                description: The amount for the first (and possibly only) offer on this invoice
                                multipleOf: 0.01
                                minimum: 0
                                type: number
                            invoiceCurrency:
                                description: >-
                                    Currency for the entire invoice has to follow the standard [**ISO4217 -
                                    alphabetic code**](https://en.wikipedia.org/wiki/ISO_4217).
                                maxLength: 3
                                type: string
                            invoiceHotelUrl:
                                description: Url to the PDF invoice
                                type: string
                            invoiceDueDate:
                                format: date
                                description: >-
                                    Invoice due date.


                                    It follows the standard format for date defined by [**RFC
                                    3339**](https://tools.ietf.org/html/rfc3339#section-5.6).
                                type: string
                            invoiceType:
                                description: |-
                                    The type of invoice:

                                    - **invoice**: Normal invoice  (ex. first invoice)
                                    - **reminderInvoice**: A reminder on unpaid invoice
                                    - **finalInvoice**: It is the last and final invoice.  
                                enum:
                                    - invoice
                                    - reminderInvoice
                                    - finalInvoice
                                type: string
                            paidAmount:
                                description: The amount that was paid on this invoice.
                                multipleOf: 0.01
                                minimum: 0
                                type: number
                            description:
                                description: The description of invoice ex. product name
                                maxLength: 40
                                type: string
                            fromTime:
                                description: This invoice covers the period from this issue/date
                                maxLength: 10
                                type: string
                            includeTime:
                                description: Including this issue/date
                                maxLength: 10
                                type: string
        AssignUserClientMode-request:
            description: ''
            required:
                - credential
            type: object
            properties:
                credential:
                    description: |-
                        Credential data - enter value of one of these:  
                        * Email address
                        * Mobile phone number in format 
                        [**E.164**](https://en.wikipedia.org/wiki/E.164) 
                        * Facebook
                        * Google
                        * aID
                        * Egmont ID
                        * Coruscant ID
                        * LRF Media ID
                        * SPiD
                        * Vipps
                    maxLength: 60
                    type: string
                recipient:
                    description: >-
                        Recipient of message sent to user when user is assigned to order. If field is not set
                        then credential data is used as recipient. Field used when credential is not
                        email/mobile phone number or when recipient has to be different than credential. Email
                        or mobile phone number in format  [**E.164**](https://en.wikipedia.org/wiki/E.164)
                    maxLength: 60
                    type: string
                isSendMessage:
                    description: |-
                        It informs if the message is sent to user when user is assigned to order.

                        - **true**: The message is sent to user.
                        - **false**: The message is not sent to user.
                    default: true
                    type: boolean
                returnUrl:
                    description: >-
                        Return URL (absolute) used in message, i.e link in message, sent to user when user is
                        assigned to order.

                        A URL to redirect the user’s browser back to on success (the user will be logged in).
                    type: string
                errorUrl:
                    description: >-
                        Error URL (absolute) used in message, i.e link in message, sent to user when user is
                        assigned to order.

                        A URL to redirect the user’s browser back to if something goes wrong (the user might
                        not be logged in).
                    type: string
                linkLifetime:
                    description: Decide how long the link sent to user is valid. Lifetime expressed in hours.
                    default: 12
                    type: integer
                overrideClientId:
                    description: >-
                        This element will override clientId (e.g. no.mediaconnect.test) used in redirect link
                        sent to user. A typically usecase is when a client uses this API on behalf of another
                        client (e.g. a telemarketing bureau). ClientId using API and overrideClientId must
                        have the same handler and partner id. The overrideClientId must exist in ConnectID.
                        This field have to be set if we need   to send message with proper login url for
                        specific client.
                    type: string
        CheckAccessClientMode-request:
            description: ''
            required:
                - product
            type: object
            properties:
                domain:
                    description: Check if user has access base on domain
                    type: string
                ip:
                    description: Check if user has access base on IP
                    type: string
                product:
                    description: Product that one is checking access for
                    maxLength: 12
                    type: string
        AssignUserClientMode-response:
            description: ''
            type: object
            properties:
                orderId:
                    description: Order Id
                    type: integer
                uniqueUserId:
                    description: Unique user Id
                    type: string
                isNewUser:
                    description: |-
                        It informs if the user is new.
                        * **true**: The user is new
                        * **false**: The user is not new.
                    type: boolean
                isPasswordSet:
                    description: |-
                        It informs if user has a password set
                        * **true**: The user has a password set.
                        * **false**: The user has not a password set.
                    type: boolean
        ListUserProfile-response:
            description: ''
            type: object
            properties:
                uniqueId:
                    description: A unique ID for this user which will never change
                    type: string
                loginCredential:
                    description: Wrapper for the credential the user is currently logged in with
                    type: object
                    properties:
                        credential:
                            description: 'A credential belonging to the user, e.g. an email address or a phone number'
                            maxLength: 60
                            type: string
                        credentialType:
                            description: |-
                                The type of credential used, one of:
                                * **email**:  A email address.
                                * **mobile**: A phone that can receive and send sms.
                                * **phone**:  A phone that can not receive and send sms.
                                * **facebook**:  FB+identification number.
                                * **google**:  GP+identification number.
                                * **vipps**:  VIPPS+identification number.
                                * **apple**:  APPLE+identification number.
                            enum:
                                - email
                                - mobile
                                - phone
                                - facebook
                                - google
                                - vipps
                                - apple
                            type: string
                        verificationLevel:
                            description: >-
                                How the credential was verified, one of:

                                * **notVerified**

                                * **notRepeatedCredential**

                                * **repeatedCredential**

                                * **externallyVerified**

                                * **verificationLink**

                                * **verificationCode**

                                * **enteredPassword**
                                ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square)
                            enum:
                                - notVerified
                                - notRepeatedCredential
                                - repeatedCredential
                                - externallyVerified
                                - verificationLink
                                - verificationCode
                                - enteredPassword
                            type: string
                userCredentials:
                    description: Wrapper for a list of all the user's credentials
                    type: array
                    items:
                        type: object
                        properties:
                            credential:
                                description: >-
                                    A credential belonging to the user, e.g. an email address or a phone
                                    number.
                                maxLength: 60
                                type: string
                            credentialType:
                                description: |-
                                    The type of credential used, one of:
                                    * **email**:  A email address.
                                    * **mobile**: A phone that can receive and send sms.
                                    * **phone**:  A phone that can not receive and send sms.
                                    * **facebook**:  FB+identification number.
                                    * **google**:  GP+identification number.
                                    * **vipps**:  VIPPS+identification number.
                                    * **apple**:  APPLE+identification number.
                                enum:
                                    - email
                                    - mobile
                                    - phone
                                    - facebook
                                    - google
                                    - vipps
                                    - apple
                                type: string
                            verificationLevel:
                                description: >-
                                    How the credential was verified, one of:

                                    * **notVerified**

                                    * **notRepeatedCredential**

                                    * **repeatedCredential**

                                    * **externallyVerified**

                                    * **verificationLink**

                                    * **verificationCode**

                                    * **enteredPassword**
                                    ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square)
                                enum:
                                    - notVerified
                                    - notRepeatedCredential
                                    - repeatedCredential
                                    - externallyVerified
                                    - verificationLink
                                    - verificationCode
                                    - enteredPassword
                                type: string
                name:
                    $ref: '#/components/schemas/Model-Name'
                phoneNumbers:
                    $ref: '#/components/schemas/Model-PhoneNumber'
                emails:
                    description: Email address (each address has a limit of maximum 255 character)
                    type: array
                    items:
                        format: email
                        type: string
                externalSources:
                    description: "Available profile data from external sources, possible values:\r\n* **Facebook**\r\n* **Google**\r\n* **Vipps**\r\n* **Apple**"
                    type: array
                    items:
                        enum:
                            - Facebook
                            - Google
                            - Vipps
                            - Apple
                        type: string
        ListCustomerProfile-response:
            description: ''
            type: object
            properties:
                uniqueId:
                    description: A unique ID for this user which will never change
                    type: string
                loginCredential:
                    description: Wrapper for the credential the user is currently logged in with
                    type: object
                    properties:
                        credential:
                            description: 'A credential belonging to the user, e.g. an email address or a phone number'
                            maxLength: 60
                            type: string
                        credentialType:
                            description: |-
                                The type of credential used, one of:
                                * **email**:  A email address.
                                * **mobile**: A phone that can receive and send sms.
                                * **phone**:  A phone that can not receive and send sms.
                                * **facebook**:  FB+identification number.
                                * **google**:  GP+identification number.
                                * **vipps**:  VIPPS+identification number.
                                * **apple**:  APPLE+identification number.
                            enum:
                                - email
                                - mobile
                                - phone
                                - facebook
                                - google
                                - vipps
                                - apple
                            type: string
                        verificationLevel:
                            description: >-
                                How the credential was verified, one of:

                                * **notVerified**

                                * **notRepeatedCredential**

                                * **repeatedCredential**

                                * **externallyVerified**

                                * **verificationLink**

                                * **verificationCode**

                                * **enteredPassword**                
                                ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square)
                            enum:
                                - notVerified
                                - notRepeatedCredential
                                - repeatedCredential
                                - externallyVerified
                                - verificationLink
                                - verificationCode
                                - enteredPassword
                            type: string
                userCredentials:
                    description: Wrapper for a list of all the user's credentials
                    type: array
                    items:
                        type: object
                        properties:
                            credential:
                                description: >-
                                    A credential belonging to the user, e.g. an email address or a phone
                                    number.
                                maxLength: 60
                                type: string
                            credentialType:
                                description: |-
                                    The type of credential used, one of:
                                    * **email**:  A email address.
                                    * **mobile**: A phone that can receive and send sms.
                                    * **phone**:  A phone that can not receive and send sms.
                                    * **facebook**:  FB+identification number.
                                    * **google**:  GP+identification number.
                                    * **vipps**:  VIPPS+identification number.
                                    * **apple**:  APPLE+identification number.
                                enum:
                                    - email
                                    - mobile
                                    - phone
                                    - facebook
                                    - google
                                    - vipps
                                    - apple
                                type: string
                            verificationLevel:
                                description: >-
                                    How the credential was verified, one of:

                                    * **notVerified**

                                    * **notRepeatedCredential**

                                    * **repeatedCredential**

                                    * **externallyVerified**

                                    * **verificationLink**

                                    * **verificationCode**

                                    * **enteredPassword**                
                                    ![](https://img.shields.io/badge/Deprecated-yellow?style=flat-square)
                                enum:
                                    - notVerified
                                    - notRepeatedCredential
                                    - repeatedCredential
                                    - externallyVerified
                                    - verificationLink
                                    - verificationCode
                                    - enteredPassword
                                type: string
                customerNumber:
                    description: "Customer number in the partner datastore\t"
                    type: integer
                name:
                    $ref: '#/components/schemas/Model-Name'
                phoneNumbers:
                    $ref: '#/components/schemas/Model-PhoneNumber'
                emails:
                    description: Email address (each address has a limit of maximum 255 character)
                    type: array
                    items:
                        format: email
                        type: string
        ListUserExternalProfiles-response:
            description: ''
            type: object
            properties:
                externalProfileList:
                    description: Wrapper for a list of all the user's external profiles.
                    type: array
                    items:
                        type: object
                        properties:
                            source:
                                description: |-
                                    Profile data external source, possible values:
                                    * **Facebook**: Profile information from Facebook.
                                    * **Google**: Profile information from Google.
                                    * **Vipps**: Profile information from Vipps.
                                    * **Apple**: Profile information from Apple.
                                enum:
                                    - Facebook
                                    - Google
                                    - Vipps
                                    - Apple
                                type: string
                            info:
                                description: profile information
                                type: object
                                properties:
                                    birthDate:
                                        description: "Birth date.\r\n\r\nJSON timestamps are specified in milliseconds since January 1, 1970 UTC\r\n\r\nXML documents use [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)"
                                        type: integer
                                    nationalIdentityNumber:
                                        description: National identity number
                                        maxLength: 11
                                        type: string
                                    name:
                                        type: object
                                        properties:
                                            firstName:
                                                description: First name
                                                maxLength: 30
                                                type: string
                                            middleName:
                                                description: Middle name
                                                maxLength: 30
                                                type: string
                                            lastName:
                                                description: Last name
                                                maxLength: 30
                                                type: string
                                    phoneNumbers:
                                        $ref: '#/components/schemas/Model-PhoneNumber'
                                        description: Phone numbers
                                    emails:
                                        description: Email addresses
                                        type: array
                                        items:
                                            format: email
                                            type: string
                                    addresses:
                                        description: Addresses
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                addressType:
                                                    description: |-
                                                        The information says if the address is:
                                                        * **home**: The home address. 
                                                        * **work**: The work address.
                                                        * **other**: All other address. 
                                                    enum:
                                                        - home
                                                        - work
                                                        - other
                                                    type: string
                                                streetAddress:
                                                    description: The street for this address
                                                    maxLength: 40
                                                    type: string
                                                postalCode:
                                                    description: The postal code for this address
                                                    maxLength: 10
                                                    type: string
                                                postalPlace:
                                                    description: The postal place for this address
                                                    maxLength: 30
                                                    type: string
                                                countryCode:
                                                    description: >-
                                                        The country code for this address - [**ISO 3166 -
                                                        alpha-2**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
                                                    maxLength: 3
                                                    type: string
        ListInvoiceDetails-response:
            description: ''
            type: object
            properties:
                invoiceInfoWithDetail:
                    type: object
                    properties:
                        invoiceNumber:
                            description: The unique number of the invoice for this company
                            minimum: 1
                            type: integer
                        companyCode:
                            description: The company that owns this invoice
                            maxLength: 12
                            type: string
                        invoiceOfferCount:
                            description: >-
                                Invoice offer count. If this is more than 1, this invoice contains alternative
                                offers.
                            maxLength: 1
                            type: integer
                        invoiceDate:
                            format: date
                            description: >-
                                The date of creating the invoice. It follows the standard format for date
                                defined by [**RFC 3339**](https://tools.ietf.org/html/rfc3339#section-5.6).
                            type: string
                        invoicePaymentStatus:
                            description: |-
                                The status of invoice payment:

                                - **paid**: The invoice is paid
                                - **notPaid**: The invoice is not paid
                                - **partiallyPaid**: The invoice is partially paid
                            enum:
                                - paid
                                - notPaid
                                - partiallyPaid
                            type: string
                        invoiceAmount:
                            description: The amount for the first (and possibly only) offer on this invoice
                            multipleOf: 0.01
                            minimum: 0
                            type: number
                        invoiceCurrency:
                            description: >-
                                Currency for the entire invoice has to follow the standard [**ISO4217 -
                                alphabetic code**](https://en.wikipedia.org/wiki/ISO_4217).
                            maxLength: 3
                            type: string
                        invoiceHotelUrl:
                            description: Url to the PDF invoice
                            type: string
                        invoiceDueDate:
                            format: date
                            description: >-
                                Invoice due date. It follows the standard format for date defined by [**RFC
                                3339**](https://tools.ietf.org/html/rfc3339#section-5.6).
                            type: string
                        invoiceType:
                            description: |-
                                The type of invoice:
                                - **invoice**: Normal invoice  (ex. first invoice)
                                - **reminderInvoice**: A reminder on unpaid invoice
                                - **finalInvoice**: It is the last and final invoice.  
                            enum:
                                - invoice
                                - reminderInvoice
                                - finalInvoice
                            type: string
                        paidAmount:
                            description: The amount that was paid on this invoice.
                            multipleOf: 0.01
                            minimum: 0
                            type: number
                        description:
                            description: The description of invoice ex. product name
                            maxLength: 40
                            type: string
                        fromTime:
                            description: This invoice covers the period from this issue/date
                            maxLength: 10
                            type: string
                        includeTime:
                            description: Including this issue/date
                            maxLength: 10
                            type: string
                        invoiceOfferInfo:
                            type: array
                            items:
                                type: object
                                properties:
                                    offerNumber:
                                        description: Offer number on invoice
                                        minimum: 1
                                        type: integer
                                    invoiceAmount:
                                        description: Amount on invoice
                                        multipleOf: 0.01
                                        type: number
                                    invoiceVatAmount:
                                        description: Tax amount on invoice
                                        multipleOf: 0.01
                                        type: number
                                    customerIdentification:
                                        description: Customer identification also known as KID
                                        maxLength: 32
                                        type: string
                                    invoiceLineInfoList:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                productCode:
                                                    description: Product code
                                                    maxLength: 12
                                                    type: string
                                                invoiceAmount:
                                                    description: Amount on invoice line
                                                    multipleOf: 0.01
                                                    type: number
                                                invoiceVatAmount:
                                                    description: Tax amount on invoice line
                                                    multipleOf: 0.01
                                                    type: number
                                                invoiceVatPercent:
                                                    description: Tax percentage on line
                                                    multipleOf: 0.01
                                                    type: number
                                                description:
                                                    description: Product name
                                                    maxLength: 40
                                                    type: string
                                                fromTime:
                                                    description: Period start
                                                    maxLength: 10
                                                    type: string
                                                includeTime:
                                                    description: Period end
                                                    maxLength: 10
                                                    type: string
        Model-ListOrderStatus:
            description: ''
            properties:
                orders:
                    type: array
                    items:
                        type: object
                        properties:
                            orderId:
                                description: ConnectID order id
                                type: integer
                            externalOrderId:
                                description: External order id provided by client
                                maxLength: 40
                                type: string
                            orderTime:
                                description: "Date/time of order entry in external system\t"
                                type: integer
                            orderStatus:
                                description: |-
                                    Status:
                                    * **preliminary**
                                    * **confirmed**: Received and Validated.
                                    * **processed**: Processed in Connect
                                    * **failed**
                                enum:
                                    - preliminary
                                    - confirmed
                                    - processed
                                    - failed
                                type: string
                            orderAmount:
                                description: The total amount on the order
                                multipleOf: 0.01
                                type: number
                            customerNumber:
                                description: Customer number linked to this order.
                                type: integer
        ListPayExTokens-response:
            description: ''
            type: object
            properties:
                paymentRecurrenceTokens:
                    type: array
                    items:
                        type: object
                        properties:
                            recurrenceToken:
                                description: Token from service provider
                                maxLength: 128
                                type: string
                            merchantId:
                                description: The `recurrenceToken` is owned by this merchant
                                maxLength: 64
                                type: string
                            productCode:
                                description: The `productCode` assigned to ticket
                                maxLength: 12
                                type: string
                            maskedCardNumber:
                                description: Masked card number for display
                                maxLength: 64
                                type: string
                            expirationMonth:
                                description: 'Card expiration month, e.g "06"'
                                maxLength: 2
                                type: string
                            expirationYear:
                                description: 'Card expiration year, e.g "22"'
                                maxLength: 2
                                type: string
                            cardTypeName:
                                description: Card type
                                maxLength: 32
                                type: string
        RegisterTicket-request:
            description: ''
            required:
                - ticket
                - merchantId
            type: object
            properties:
                ticket:
                    description: "Ticket from service provider\t"
                    maxLength: 128
                    type: string
                merchantId:
                    description: "The ticket is owned by this merchant\t"
                    maxLength: 64
                    type: string
                productCode:
                    description: "The `productCode` assigned to ticket\t"
                    maxLength: 12
                    type: string
                maskedCardNumber:
                    description: >-
                        Masked card number for display. Field is not required, but we recommend to set this
                        field.
                    maxLength: 64
                    type: string
                expirationMonth:
                    description: >-
                        Card expiration month, e.g "06". Field is not required, but we recommend to set this
                        field.
                    maxLength: 2
                    type: string
                expirationYear:
                    description: >-
                        Card expiration year, e.g "22". Field is not required, but we recommend to set this
                        field.
                    maxLength: 2
                    type: string
                cardTypeName:
                    description: 'Card type. Field is not required, but we recommend to set this field.'
                    maxLength: 32
                    type: string
        ListTickets-response:
            description: ''
            type: object
            properties:
                paymentTickets:
                    type: array
                    items:
                        type: object
                        properties:
                            ticket:
                                description: Ticket from service provider
                                maxLength: 128
                                type: string
                            merchantId:
                                description: "The `ticket` is owned by this merchant\t"
                                maxLength: 64
                                type: string
                            productCode:
                                description: The `productCode` assigned to ticket
                                maxLength: 12
                                type: string
                            maskedCardNumber:
                                description: Masked card number for display
                                maxLength: 64
                                type: string
                            expirationMonth:
                                description: 'Card expiration month, e.g "06"'
                                maxLength: 2
                                type: string
                            expirationYear:
                                description: 'Card expiration year, e.g "22"'
                                maxLength: 2
                                type: string
                            cardTypeName:
                                description: Card type
                                maxLength: 32
                                type: string
        ListIssuesCustomerMode-response:
            description: ''
            type: object
            properties:
                deliveredIssues:
                    description: List of distributed issues
                    type: array
                    items:
                        type: object
                        properties:
                            issue:
                                description: Issue code
                                maxLength: 10
                                type: string
                            distributedDate:
                                description: |-
                                    Distributed date

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC.
                                type: integer
        ListPaymentMethods-response:
            description: ''
            type: object
            properties:
                paymentMethodResponseItems:
                    type: array
                    items:
                        type: object
                        properties:
                            paymentMethod:
                                description: |-
                                    Specific pay method. Following methods may be used: 

                                    * **invoice:** Common invoice
                                    * **autoGiro:** Automatic withdraw, in Norwegian "Avtalegiro"
                                    * **eInvoice:** Electronic invoice
                                    * **recurringPayment:** Recurring DIBS payment
                                    * **recurringPayExCardPayment:** Recurring PayEx payment
                                    * **recurringSmsPayment:** Recurring sms payment
                                    * **recurringVippsPayment:** Recurring Vipps payment
                                    * **recurringKlarnaPayment:** Recurring Klarna payment
                                enum:
                                    - invoice
                                    - autoGiro
                                    - eInvoice
                                    - recurringPayment
                                    - recurringPayExCardPayment
                                    - recurringSmsPayment
                                    - recurringVippsPayment
                                    - recurringKlarnaPayment
                                type: string
                            isActive:
                                description: |-
                                    Whether this method is currently in use by customer on product requested. 

                                    Possible values is:
                                    * **Y**: Yes
                                    * **N**: No
                                enum:
                                    - 'Y'
                                    - 'N'
                                type: string
                            target:
                                nullable: true
                                description: |-
                                    What target is allowed to use it.

                                    Possible value is:
                                    * null: Means no restrictions, any target can use it.
                                    * **C**: Connect. Pay method should only be shown to the end user
                                    if it is currently active.
                                enum:
                                    - C
                                type: string
        AddTicket-request:
            description: ''
            required:
                - transactionType
            type: object
            properties:
                transactionType:
                    description: |-
                        Specific transaction type for ticket. Following types may be used: 
                        * **creditCard**: Credit card payment
                        * **SMS**: SMS payment
                    enum:
                        - creditCard
                        - SMS
                    type: string
                productCode:
                    description: Specific product for ticket.
                    maxLength: 12
                    type: string
        ChangePaymentMethod-request:
            description: ''
            required:
                - paymentMethod
            type: object
            properties:
                paymentMethod:
                    description: |-
                        Specific pay method. Following methods may be used:
                        - **invoice**: Common invoice  
                        - **autoGiro**: Automatic withdraw, in Norwegian "Avtalegiro"  
                        - **eInvoice:** Electronic invoice, in Norwegian "E-faktura".
                        - **recurringPayment**: Recurring DIBS payment
                        - **recurringVippsPayment**: Recurring Vipps payment 
                        - **recurringPayExCardPayment:** Recurring PayEx payment
                    enum:
                        - invoice
                        - autoGiro
                        - eInvoice
                        - recurringPayment
                        - recurringVippsPayment
                        - recurringPayExCardPayment
                    type: string
        ListOrderProductHistory-response:
            description: ''
            properties:
                orders:
                    type: array
                    items:
                        type: object
                        properties:
                            customerNumber:
                                description: Customer number
                                type: integer
                            orderNumber:
                                description: Order number
                                type: integer
                            orderDate:
                                description: |-
                                    Order date

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            description:
                                description: Order description
                                type: string
                            amount:
                                description: Order amount
                                multipleOf: 0.01
                                type: number
                            vat:
                                description: Order vat
                                multipleOf: 0.01
                                type: number
                            invoiceNumber:
                                description: Invoice number
                                type: integer
                            invoiceDate:
                                description: |-
                                    Invoice date

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            companyCode:
                                description: Company code
                                maxLength: 12
                                type: string
                            invoiceStatus:
                                description: |-
                                    Invoice status:
                                    - **notInvoiced**: The invoice is not sent to the customer.
                                    - **invoiced**: The invoice is sent to the customer.
                                    - **paid**: The invoice is paid by the customer.
                                    - **cancelled**: The invoice is cancelled.
                                    - **dunned**: The invoice is dunned.
                                enum:
                                    - notInvoiced
                                    - invoiced
                                    - paid
                                    - cancelled
                                    - dunned
                                type: string
                            target:
                                nullable: true
                                description: |-
                                    What target is allowed to use it.

                                    Possible value is:
                                    * null: Means no restrictions, any target can use it.
                                    * **C**: Connect.
                                enum:
                                    - C
                                type: string
                            invoiceHotelUrl:
                                description: Url to the PDF invoice
                                type: string
        ListVippsAgreement-response:
            nullable: false
            description: ''
            type: object
            properties:
                recurringAgreements:
                    type: array
                    items:
                        nullable: false
                        type: object
                        properties:
                            agreementRef:
                                description: Agreement reference.
                                maxLength: 128
                                type: string
                            paymentProviderId:
                                description: Payment provider id.
                                type: integer
                            productCode:
                                description: The `productCode` assigned to agreement.
                                maxLength: 12
                                type: string
        ListInvoices-response:
            description: ''
            type: object
            properties:
                invoices:
                    type: array
                    items:
                        type: object
                        properties:
                            customerNumber:
                                description: Customer number
                                type: integer
                            product:
                                description: Product on invoice
                                maxLength: 12
                                type: string
                            invoiceOfferCount:
                                description: >-
                                    Invoice offer count. If this is more than 1, this invoice contains
                                    alternative offers.
                                maxLength: 1
                                type: string
                            productName:
                                description: "Product description/name\t"
                                maxLength: 40
                                type: string
                            amount:
                                description: Amount for product on invoice
                                multipleOf: 0.01
                                type: number
                            invoiceDate:
                                description: >-
                                    Invoice date. JSON timestamps are specified in milliseconds since January
                                    1, 1970 UTC
                                type: integer
                            invoiceNumber:
                                description: Invoice number
                                maxLength: 10
                                type: string
                            companyCode:
                                description: companyCode
                                maxLength: 12
                                type: string
                            paymentDate:
                                description: >-
                                    Date of payment. JSON timestamps are specified in milliseconds since
                                    January 1, 1970 UTC
                                type: integer
                            dueDate:
                                description: >-
                                    Due date. JSON timestamps are specified in milliseconds since January 1,
                                    1970 UTC
                                type: integer
                            paymentStatus:
                                description: >-
                                    Status of invoice payment/invoice reminder:

                                    * **-1** - No more reminding

                                    * **0** - Normal reminding

                                    * **> 0** used for special purposes such as reminders on partially payed
                                    invoices.
                                type: string
                            invoiceAmount:
                                description: Amount for whole invoice
                                multipleOf: 0.01
                                type: number
                            paidAmount:
                                description: Amount that was paid for this invoice
                                multipleOf: 0.01
                                type: number
                            paymentMethod:
                                description: |-
                                    Invoice payment method. Returned values:

                                    * **A** - normal payment
                                    * **B** - autodraw (auto giro)
                                    * **C** - credit card payment
                                    * **D** - einvoice
                                    * **E** - autodraw einvoice
                                    * **F** - recurring payment credit card
                                    * **G** - recurring payment SMS
                                enum:
                                    - A
                                    - B
                                    - C
                                    - D
                                    - E
                                    - F
                                    - G
                                type: string
                            invoiceHotelUrl:
                                description: Url to invoice
                                type: string
                            invoiceStatus:
                                description: |-
                                    Status of invoice. Returned values:
                                    * **notInvoiced** - Not invoiced
                                    * **invoiced** - Invoiced
                                    * **paid** - Paid
                                    * **cancelled** - Cancelled
                                    * **dunned** - Dunned
                                enum:
                                    - notInvoiced
                                    - invoiced
                                    - paid
                                    - cancelled
                                    - dunned
                                type: string
                reminders:
                    type: array
                    items:
                        type: object
                        properties:
                            invoiceNumber:
                                description: Invoice number
                                type: integer
                            product:
                                description: Product on invoice
                                maxLength: 12
                                type: string
                            fromTime:
                                description: This invoice covers the period from this issue/date
                                maxLength: 10
                                type: string
                            includeTime:
                                description: Including this issue/date
                                maxLength: 10
                                type: string
                            reminderDate:
                                description: >-
                                    Reminder date. JSON timestamps are specified in milliseconds since January
                                    1, 1970 UTC
                                type: integer
                            amount:
                                description: Amount for whole invoice
                                multipleOf: 0.01
                                type: number
                            dueDate:
                                description: >-
                                    Invoice due date. JSON timestamps are specified in milliseconds since
                                    January 1, 1970 UTC
                                type: integer
                            reminderNumber:
                                description: 'Reminder number e.g. 1, 2 etc.'
                                type: integer
                            graceInvoiceCount:
                                description: 'Grace invoice number e.g. 1, 2 etc.'
                                type: integer
                            reminderType:
                                description: |-
                                    Reminder type. Returned values:

                                    * **reminder** - normal reminder invoice
                                    * **reminderStop** - reminder stop invoice
                                    * **graceInvoice** - grace invoice
                                    * **graceInvoiceReminder** - grace invoice reminder
                                enum:
                                    - reminder
                                    - reminderStop
                                    - graceInvoice
                                    - graceInvoiceReminder
                                type: string
                            invoiceHotelUrl:
                                description: Url to reminder invoice
                                type: string
        ListInvoiceClientMode-response:
            description: ''
            type: object
            properties:
                clientInvoiceInfoList:
                    type: array
                    items:
                        type: object
                        properties:
                            invoiceId:
                                description: Invoice Id
                                type: string
                            invoiceDate:
                                description: >-
                                    Invoice date. JSON timestamps are specified in milliseconds since January
                                    1, 1970 UTC
                                type: integer
                            invoiceOfferCount:
                                description: >-
                                    Invoice offer count. If this is more than 1, this invoice contains
                                    alternative offers.
                                maxLength: 1
                                type: string
                            customerNumber:
                                description: Customer number
                                type: integer
                            product:
                                description: Product on invoice
                                maxLength: 12
                                type: string
                            productName:
                                description: Product description/name
                                maxLength: 40
                                type: string
                            amount:
                                description: Amount for product on invoice
                                multipleOf: 0.01
                                type: number
                            companyCode:
                                description: Invoice number
                                maxLength: 12
                                type: string
                            paymentStatus:
                                description: >-
                                    Status of invoice payment/invoice reminder

                                    * **-1** - No more reminding

                                    * **0** - Normal reminding

                                    * **> 0** used for special purposes such as reminders on partially payed
                                    invoices.
                                type: string
                            invoiceAmount:
                                description: Amount for whole invoice.
                                multipleOf: 0.01
                                type: number
                            paidAmount:
                                description: Amount that was paid for this invoice.
                                multipleOf: 0.01
                                type: number
                            paymentMethod:
                                description: |-
                                    Invoice payment method. Returned values:

                                    * **A** - normal payment
                                    * **B** - autodraw (auto giro)
                                    * **C** - credit card payment
                                    * **D** - einvoice
                                    * **E** - autodraw einvoice
                                    * **F** - recurring payment credit card
                                    * **G** - recurring payment SMS
                                enum:
                                    - A
                                    - B
                                    - C
                                    - D
                                    - E
                                    - F
                                    - G
                                type: string
                            invoiceHotelUrl:
                                description: Url to invoice
                                type: string
                            paymentDate:
                                description: >-
                                    Date of payment. JSON timestamps are specified in milliseconds since
                                    January 1, 1970 UTC
                                type: integer
                            dueDate:
                                description: >-
                                    Due date. JSON timestamps are specified in milliseconds since January 1,
                                    1970 UTC
                                type: integer
                            desc:
                                description: "List of descriptions, ie. what products are paid on the invoice.(you can have mulitple proudcts or mulitple payments on same product)\t"
                                type: array
                                items:
                                    maxLength: 40
                                    type: string
                            period:
                                format: double
                                description: No. of issues/periods invoiced for.
                                type: number
                            periodUnit:
                                description: |-
                                    Units of period. 

                                    * **A** - issues/periods from smissue-table
                                    * **B** - days
                                    * **C** - months
                                    * **D** - years
                                    * **E** - Issues within the given period
                                    * **F** - Issues with date oriented sub/mem
                                enum:
                                    - A
                                    - B
                                    - C
                                    - D
                                    - E
                                    - F
                                type: number
                            fromTime:
                                description: This is invoice from this issue/date
                                maxLength: 10
                                type: string
                            inclTime:
                                description: Including this issue/date
                                maxLength: 10
                                type: string
                            invoiceLineInfo:
                                description: Details regarding the invoice lines.
                                type: array
                                items:
                                    required:
                                        - productCode
                                        - invoiceAmount
                                        - invoiceVatAmount
                                    type: object
                                    properties:
                                        productCode:
                                            description: Product code.
                                            maxLength: 12
                                            type: string
                                        invoiceAmount:
                                            description: Invoiced amount exlusive VAT regarding product code.
                                            multipleOf: 0.01
                                            maximum: 9999999999.99
                                            minimum: 0
                                            type: number
                                        invoiceVatAmount:
                                            description: Invoiced VAT amount regarding product code.
                                            multipleOf: 0.01
                                            maximum: 9999999999.99
                                            minimum: 0
                                            type: number
                                        invoiceVatPercent:
                                            description: Invoiced VAT percent used calculating VAT amount.
                                            multipleOf: 0.01
                                            maximum: 100
                                            minimum: 0
                                            type: number
        SendMessage-request:
            description: ''
            required:
                - product
                - messageContent
            type: object
            properties:
                product:
                    description: Product code
                    maxLength: 12
                    type: string
                caseType:
                    description: |-
                        Override case type for this message. Available types: 

                        * **A:** follow up complaint
                        * **B:** cancellation
                    maxLength: 1
                    type: string
                messageSubject:
                    description: The subject on the message to customer service.
                    maxLength: 40
                    type: string
                messageContent:
                    description: Message to customer service
                    maxLength: 32000
                    type: string
        SendMessageClientMode-Request:
            description: ''
            required:
                - messageContent
            type: object
            properties:
                product:
                    description: Product code
                    maxLength: 12
                    type: string
                caseType:
                    description: |-
                        Override case type for this message. Available types: 

                        * **A:** follow up complaint
                        * **B:** cancellation
                    maxLength: 1
                    type: string
                messageSubject:
                    description: The subject on the message to customer service.
                    maxLength: 40
                    type: string
                messageContent:
                    description: Message to customer service
                    maxLength: 32000
                    type: string
        ListOrderdetails-request:
            description: ''
            type: object
            properties:
                orderId:
                    description: Mediaconnect ConnectID order id
                    type: integer
                externalOrderId:
                    description: External order id provided by client
                    maxLength: 40
                    type: string
        ListOrderdetails-response:
            description: ''
            type: object
            properties:
                orders:
                    type: array
                    items:
                        type: object
                        properties:
                            orderId:
                                description: Mediaconnect ConnectID order id
                                type: integer
                            externalOrderId:
                                description: External order id provided by client
                                maxLength: 40
                                type: string
                            orderTime:
                                description: |-
                                    Date/time of order entry in external system.

                                    JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                                type: integer
                            orderStatus:
                                description: |-
                                    Order staus:

                                    - **preliminary**: Initially created order (Status Code A)
                                    - **confirmed**: Received and validated    (Status Code B)
                                    - **processed**: Processed in Connect      (Status Code C)     
                                    - **failed**: The order is failed.         (Status Code D)
                                enum:
                                    - preliminary
                                    - confirmed
                                    - processed
                                    - failed
                                type: string
                            orderAmount:
                                description: Total amount entire order
                                type: integer
                            orderLines:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        productId:
                                            description: Product id
                                            maxLength: 12
                                            type: string
                                        description:
                                            description: Product description
                                            maxLength: 40
                                            type: string
                                        invoiceNumber:
                                            description: Invoice number
                                            type: integer
                                        invoiceTime:
                                            description: >-
                                                Invoiced time


                                                JSON timestamps are specified in milliseconds since January 1,
                                                1970 UTC
                                            type: integer
                                        invoiceLineAmount:
                                            description: |
                                                Invoiced amount on this line
                                            multipleOf: 0.01
                                            type: number
                                        invoiceStatus:
                                            description: |-
                                                Invoice status:

                                                - **notInvoiced**: The invoice is not sent to the customer.
                                                - **invoiced**: The invoice is sent to the customer.
                                                - **paid**: The invoice is paid by the customer.
                                                - **cancelled**: The invoice is cancelled.
                                            enum:
                                                - notInvoiced
                                                - invoiced
                                                - paid
                                                - cancelled
                                            type: string
                                        deliveryStatus:
                                            description: >-
                                                Product delivery status:


                                                - **waiting**: The order is waiting to be sent to the
                                                customer.

                                                - **sent**: The order is sent to the customer.
                                            enum:
                                                - waiting
                                                - sent
                                            type: string
        Model-Order-Receiver-and-Recruiter:
            title: Name and address for order
            type: object
            properties:
                customerNumber:
                    description: A valid and existing customer number in the Connect environment
                    type: integer
                companyRegistrationNumber:
                    description: A valid registration number in an official registry.
                    maxLength: 16
                    type: string
                companyName:
                    description: Name of the company.
                    maxLength: 40
                    type: string
                department:
                    description: Name of the department.
                    maxLength: 40
                    type: string
                personsSocialSecurityNumber:
                    description: A valid personal social security number.
                    maxLength: 16
                    type: string
                firstName:
                    description: First (given) name.
                    maxLength: 30
                    type: string
                middleName:
                    description: Middle name.
                    maxLength: 30
                    type: string
                lastName:
                    description: Last (family) name.
                    maxLength: 30
                    type: string
                coAddress:
                    description: Extra address line if needed.
                    maxLength: 40
                    type: string
                street:
                    description: Street address
                    maxLength: 40
                    type: string
                streetNumber:
                    description: Street number
                    type: integer
                entrance:
                    description: Entrance
                    maxLength: 12
                    type: string
                floor:
                    description: Floor.
                    type: integer
                suite:
                    description: Suite
                    maxLength: 10
                    type: string
                postalCode:
                    description: A valid postal code for the street address.
                    maxLength: 10
                    type: string
                postalPlace:
                    description: Postal place
                    maxLength: 30
                    type: string
                postalAddress:
                    description: Postal address
                    maxLength: 40
                    type: string
                postalAddressPostalCode:
                    description: A valid postal code for the postal address
                    maxLength: 10
                    type: string
                postalAddressPostalPlace:
                    description: Postal place for the postal address.
                    maxLength: 30
                    type: string
                countryCode:
                    description: >-
                        The country code for this address - [**ISO 3166 -
                        alpha-2**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                    maxLength: 3
                    type: string
                birthDate:
                    description: |
                        Birth date if this is a person.

                        JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                    type: integer
                sex:
                    description: |-
                        Valid values

                        * **male**: The person is a male.
                        * **female**: The person is a female.
                        * **unknown**: The gender is unknown.
                    enum:
                        - male
                        - female
                        - unknown
                    type: string
                emails:
                    description: >-
                        A list of email addresses beloning to the person or company. 0, 1 or 2 addresses (each
                        address maximum 255 characters)
                    maxItems: 2
                    minItems: 0
                    type: array
                    items:
                        format: email
                        type: string
                phoneNumbers:
                    description: >-
                        A list of phone numbers. Up to four phone numbers may be submitted.


                        A phone number has to follow the telephone number standard
                        [**E.164**](https://en.wikipedia.org/wiki/E.164)
                    maxItems: 4
                    type: array
                    items:
                        type: string
                categories:
                    description: >-
                        Custom data possible to add to any address record. Valid categories are found through
                        the different category APIs.
                    type: array
                    items:
                        type: object
                        properties:
                            addressCategory:
                                description: The address category to add to the address record.
                                maxLength: 12
                                type: string
                            freeValue:
                                description: >-
                                    On rare occasions, a free value can be added to the category data. Usually
                                    not allowed.
                                maxLength: 30
                                type: string
                permissions:
                    description: >-
                        Permission data possible to add to any address record. Permissions is not a required
                        element.
                    type: array
                    items:
                        required:
                            - enterpriseCode
                            - channels
                            - channelCode
                            - permissionType
                        type: object
                        properties:
                            enterpriseCode:
                                description: Enterpise code
                                maxLength: 12
                                type: string
                            orderTypeCode:
                                description: 'Ordertype code, required if `permissions` is applied on order type level.'
                                maxLength: 12
                                type: string
                            channels:
                                description: List with permission details on distribution channel code.
                                type: array
                                items:
                                    type: string
                            channelCode:
                                description: Distribution channel code.
                                maxLength: 20
                                type: string
                            permissionType:
                                description: |-
                                    Valid values: 
                                    * **permission**: 
                                    * **shield**: 
                                enum:
                                    - permission
                                    - shield
                                type: string
                privacy:
                    description: >-
                        Privacy permission data possible to add to any address record. Privacy permissions are
                        not a required.
                    type: array
                    items:
                        required:
                            - enterpriseCode
                            - purpose
                        type: object
                        properties:
                            enterpriseCode:
                                description: Enterpise code
                                maxLength: 12
                                type: string
                            orderTypeCode:
                                description: "Ordertype code, required if `permissions` is applied on order type level.\t"
                                maxLength: 12
                                type: string
                            purpose:
                                description: 'Purpose of this permission. For example EM, TM etc.'
                                maxLength: 20
                                type: string
        Model-Order-Payer:
            title: Name and address for payer
            type: object
            properties:
                customerNumber:
                    description: A valid and existing customer number in the Connect environment
                    type: integer
                companyRegistrationNumber:
                    description: A valid registration number in an official registry.
                    maxLength: 16
                    type: string
                companyName:
                    description: Name of the company.
                    maxLength: 40
                    type: string
                department:
                    description: Name of the department.
                    maxLength: 40
                    type: string
                personsSocialSecurityNumber:
                    description: A valid personal social security number.
                    maxLength: 16
                    type: string
                firstName:
                    description: First (given) name.
                    maxLength: 30
                    type: string
                middleName:
                    description: Middle name.
                    maxLength: 30
                    type: string
                lastName:
                    description: Last (family) name.
                    maxLength: 30
                    type: string
                coAddress:
                    description: Extra address line if needed.
                    maxLength: 40
                    type: string
                street:
                    description: Street address
                    maxLength: 40
                    type: string
                streetNumber:
                    description: Street number
                    type: integer
                entrance:
                    description: Entrance
                    maxLength: 12
                    type: string
                floor:
                    description: Floor.
                    type: integer
                suite:
                    description: Suite
                    maxLength: 10
                    type: string
                postalCode:
                    description: A valid postal code for the street address.
                    maxLength: 10
                    type: string
                postalPlace:
                    description: Postal place
                    maxLength: 30
                    type: string
                postalAddress:
                    description: Postal address
                    maxLength: 40
                    type: string
                postalAddressPostalCode:
                    description: A valid postal code for the postal address
                    maxLength: 10
                    type: string
                postalAddressPostalPlace:
                    description: Postal place for the postal address.
                    maxLength: 30
                    type: string
                countryCode:
                    description: >-
                        The country code for this address - [**ISO 3166 -
                        alpha-2**](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                    maxLength: 3
                    type: string
                birthDate:
                    description: |
                        Birth date if this is a person.

                        JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                    type: integer
                sex:
                    description: |-
                        Valid values

                        * **male**: The person is a male.
                        * **female**: The person is a female.
                        * **unknown**: The gender is unknown.
                    enum:
                        - male
                        - female
                        - unknown
                    type: string
                emails:
                    description: >-
                        A list of email addresses beloning to the person or company. 0, 1 or 2 addresses (each
                        address maximum 255 characters)
                    maxItems: 2
                    minItems: 0
                    type: array
                    items:
                        format: email
                        type: string
                phoneNumbers:
                    description: >-
                        A list of phone numbers. Up to four phone numbers may be submitted.


                        A phone number has to follow the telephone number standard
                        [**E.164**](https://en.wikipedia.org/wiki/E.164)
                    maxItems: 4
                    type: array
                    items:
                        type: string
                invoiceEmailAddress:
                    description: This email will be set for invoices for products that comes in order.
                    maxLength: 255
                    type: string
                categories:
                    description: >-
                        Custom data possible to add to any address record. Valid categories are found through
                        the different category APIs.
                    type: array
                    items:
                        type: object
                        properties:
                            addressCategory:
                                description: The address category to add to the address record.
                                maxLength: 12
                                type: string
                            freeValue:
                                description: >-
                                    On rare occasions, a free value can be added to the category data. Usually
                                    not allowed.
                                maxLength: 30
                                type: string
                permissions:
                    description: >-
                        Permission data possible to add to any address record. Permissions is not a required
                        element.
                    type: array
                    items:
                        required:
                            - enterpriseCode
                            - channels
                            - channelCode
                            - permissionType
                        type: object
                        properties:
                            enterpriseCode:
                                description: Enterpise code
                                maxLength: 12
                                type: string
                            orderTypeCode:
                                description: 'Ordertype code, required if `permissions` is applied on order type level.'
                                maxLength: 12
                                type: string
                            channels:
                                description: List with permission details on distribution channel code.
                                type: array
                                items:
                                    type: string
                            channelCode:
                                description: Distribution channel code.
                                maxLength: 20
                                type: string
                            permissionType:
                                description: |-
                                    Valid values: 
                                    * **permission**: 
                                    * **shield**: 
                                enum:
                                    - permission
                                    - shield
                                type: string
                privacy:
                    description: >-
                        Privacy permission data possible to add to any address record. Privacy permissions are
                        not a required.
                    type: array
                    items:
                        required:
                            - enterpriseCode
                            - purpose
                        type: object
                        properties:
                            enterpriseCode:
                                description: Enterpise code
                                maxLength: 12
                                type: string
                            orderTypeCode:
                                description: "Ordertype code, required if `permissions` is applied on order type level.\t"
                                maxLength: 12
                                type: string
                            purpose:
                                description: 'Purpose of this permission. For example EM, TM etc.'
                                maxLength: 20
                                type: string
        ChangeCustomerInfo-request:
            description: ''
            type: object
            properties:
                name:
                    $ref: '#/components/schemas/Model-Name'
                    description: ''
                phoneNumbers:
                    $ref: '#/components/schemas/Model-PhoneNumber'
                    description: ''
                emails:
                    description: Email address (each email maximum 255 character)
                    type: array
                    items:
                        format: email
                        type: string
                invoiceEmailAddress:
                    format: email
                    description: Email address that shall be used for sending email invoice
                    maxLength: 60
                    type: string
        Model-ListCustomerInfo:
            description: ''
            type: object
            properties:
                customerNumber:
                    description: Customer number in the partner datastore
                    type: integer
                name:
                    $ref: '#/components/schemas/Model-Name'
                    description: ''
                phoneNumbers:
                    $ref: '#/components/schemas/Model-PhoneNumber'
                    description: ''
                emails:
                    description: Email address (each email maximum 255 character)
                    type: array
                    items:
                        format: email
                        type: string
                invoiceEmailAddress:
                    format: email
                    description: Email address that shall be used for sending email invoice
                    maxLength: 60
                    type: string
                attachedUsers:
                    description: List of user ids connected to customer number
                    type: array
                    items:
                        type: object
                        properties:
                            uniqueId:
                                description: External id for this user
                                type: string
                            credentials:
                                description: Credentials connected to this user
                                type: array
                                items:
                                    type: object
                                    properties:
                                        credential:
                                            description: >-
                                                The credential for this user. Can be of varying length
                                                according to type
                                            type: string
                                        credentialType:
                                            description: |-
                                                The type of credential. Can be on of 13 types:
                                                * **A_EMAIL_ADDRESS**
                                                * **B_SMS_PHONE**
                                                * **C_NON_SMS_PHONE**
                                                * **D_AID**
                                                * **E_EPID**
                                                * **F_FACEBOOK**
                                                * **G_GOOGLEPLUS**
                                                * **H_BYGGFORETAGEN**
                                                * **I_CORUSCANTID**
                                                * **L_LMID**
                                                * **P_APPLE**
                                                * **S_SPID**
                                                * **V_VIPPS**
                                            enum:
                                                - A_EMAIL_ADDRESS
                                                - B_SMS_PHONE
                                                - C_NON_SMS_PHONE
                                                - D_AID
                                                - E_EPID
                                                - F_FACEBOOK
                                                - G_GOOGLEPLUS
                                                - H_BYGGFORETAGEN
                                                - I_CORUSCANTID
                                                - L_LMID
                                                - P_APPLE
                                                - S_SPID
                                                - V_VIPPS
                                            type: string
                                        verificationLevel:
                                            description: >-
                                                In what type of way this user has been verified:

                                                * **notVerified**: The user is not verified.

                                                * **internalCreated**: The user is created by internal
                                                automatic api createUser. 

                                                * **processApi**: The user was created by process api without
                                                any verificationLink or verificationCode.

                                                * **notRepeatedCredential**:The user is like not verified, but
                                                usually UserId will be exist for given credential with this
                                                level

                                                * **repeatedCredential**: Almost not verified, but we are sure
                                                that user double check his email/mobile.

                                                * **verificationCustomerService**: When user calling customer
                                                service to change the password or to create new credential.

                                                * **externallyVerified**: The user is verified from external
                                                system.

                                                * **verificationLink**: The user is verified by clicking an
                                                link in email.

                                                * **verificationCode**: The user is verified by sending an one
                                                time code by email/sms.
                                            enum:
                                                - notVerified
                                                - internalCreated
                                                - processApi
                                                - notRepeatedCredential
                                                - repeatedCredential
                                                - verificationCustomerService
                                                - externallyVerified
                                                - verificationLink
                                                - verificationCode
                                            type: string
        Model-RegisterOrder-request:
            description: ''
            required:
                - orderDate
                - paymentMethod
                - orderAmount
                - currency
                - payer
                - orderLines
            type: object
            properties:
                externalOrderId:
                    description: Order ID from the system delivering the order.
                    maxLength: 40
                    type: string
                orderDate:
                    description: |-
                        The date the order was placed in the external system.

                        JSON timestamps are specified in milliseconds since January 1, 1970 UTC
                    type: integer
                paymentMethod:
                    description: |-
                        It is only allow to use these payment methods:

                        * **creditcard**: Paying by using a credit card via Nets.
                        * **invoice**: Paying by sending a invoice
                        * **free**:  It is free of cost.
                        * **sms**: Paying by using SMS via Link Mobility.
                        * **smsPay**: Paying by using SMS via SMSpay.
                        * **masterpass**: Paying by using a digital wallet provided by Mastercard.
                        * **vippsRecurring**: Paying by using Vipps (Faste betalinger med Vipps).
                        * **kco**: Paying by using Klarna Checkout.
                        * **creditcardPayex**: Paying by using a credit card via Payex.
                        * **swishPayex**: Paying by using Swish via Payex.
                        * **other**: Paying by using own integration with payment provider.
                    enum:
                        - creditcard
                        - invoice
                        - free
                        - sms
                        - smsPay
                        - masterpass
                        - vippsRecurring
                        - kco
                        - creditcardPayex
                        - swishPayex
                        - other
                    type: string
                orderAmount:
                    description: Total amount for the entire order.
                    multipleOf: 0.01
                    type: number
                currency:
                    description: >-
                        Currency for the entire order has to follow  the standard [**ISO4217 - alphabetic
                        code**](https://en.wikipedia.org/wiki/ISO_4217).
                    maxLength: 3
                    type: string
                marketingCouponCode:
                    description: Marketing coupon code to use in a e.g product order.
                    maxLength: 12
                    type: string
                marketingCouponNumber:
                    description: Marketing coupon number to use in a e.g product order.
                    type: integer
                companyCode:
                    description: >-
                        Company code for the products in the order. Company code is used to find correct
                        merchant etc for billing and such. If it is null client’s company code is used.
                    maxLength: 12
                    type: string
                customerReference:
                    description: Customer reference number.
                    maxLength: 78
                    type: string
                seller:
                    description: Seller code representing the salesperson who made this order come true.
                    maxLength: 12
                    type: string
                payer:
                    $ref: '#/components/schemas/Model-Order-Payer'
                orderLines:
                    type: array
                    items:
                        required:
                            - productSpecType
                            - quantity
                            - unitPrice
                        type: object
                        properties:
                            productSpecType:
                                description: >-
                                    Valid values: 


                                    - **coupon**: The way you buy a subscription and it describe it's
                                    lifecycle (including price model).

                                    - **product** :  It is anything related to news and books that can be
                                    offered to the marked.

                                    - **issue**:  A single copy of a periodical ex. magazine. 

                                    - **article**:  An specific article on a website.
                                enum:
                                    - coupon
                                    - product
                                    - issue
                                    - article
                                type: string
                            productSpecCode:
                                description: |
                                    Coupon code if `productSpecType` is coupon or issue.
                                maxLength: 12
                                type: string
                            productSpecNo:
                                description: Coupon number if `productSpecType` is coupon or *issue*.
                                type: integer
                            product:
                                description: >-
                                    *Product code* if `productSpecType` is product, *issue code* if
                                    `productSpecType` is issue (issue code must exists in Connect).
                                maxLength: 12
                                type: string
                            quantity:
                                description: Quantity for this line.
                                type: number
                            unitPrice:
                                description: Unit price. The `currency` is given by the order.
                                multipleOf: 0.01
                                type: number
                            voucherCode:
                                description: Voucher code for this order.
                                maxLength: 36
                                type: string
                            allowAccessProduct:
                                description: >-
                                    After placing the order, the order will be processed in the backend
                                    system. This might take some time due to various error conditions and
                                    delays. The request may contain a product and a number of seconds the user
                                    will be granted temporary access to protected content.


                                    If this is an issue order (i.e `productSpecType` is issue), the issue
                                    specified in `product` field on orderLine must exists for the given
                                    product code specified in `allowAccessProduct`.
                                maxLength: 12
                                type: string
                            allowAccessSeconds:
                                description: >-
                                    After placing the order, the order will be processed in the backend
                                    system. This might take some time due to various error conditions and
                                    delays. The request may contain a product and a number of seconds the user
                                    will be granted temporary access to protected content.


                                    If this is an issue order (i.e `productSpecType` is issue), the issue
                                    specified in `product` field on orderLine must exists for the given
                                    product code specified in `allowAccessProduct`.
                                type: integer
                            startInfo:
                                description: Object containing one of `startDate` or `startIssue`. Not both.
                                type: object
                                properties:
                                    startDate:
                                        description: The earliest date the product or subscription should start.
                                        type: integer
                                    startIssue:
                                        description: The issue the subscription should start.
                                        maxLength: 10
                                        type: string
                            rewardPartnerId:
                                description: Id that identifies the partner.
                                type: integer
                            rewardId:
                                description: Reward id that customer input
                                maxLength: 36
                                type: string
                            articleDetail:
                                description: >
                                    Object containing information about article purchase. `productSpecType` =
                                    article
                                type: object
                                properties:
                                    companyCode:
                                        description: Company code for article product.
                                        maxLength: 12
                                        type: string
                                    product:
                                        description: ProductCode for article.
                                        maxLength: 12
                                        type: string
                                    articleRef:
                                        description: Article reference
                                        maxLength: 50
                                        type: string
                                    articleDesc:
                                        description: Article description
                                        maxLength: 50
                                        type: string
                                    articleCategory:
                                        description: Article category. Giving the price and details
                                        maxLength: 12
                                        type: string
                            receiver:
                                $ref: '#/components/schemas/Model-Order-Receiver-and-Recruiter'
                            recruiter:
                                $ref: '#/components/schemas/Model-Order-Receiver-and-Recruiter'
                recurring:
                    description: >-
                        It informs if recurring payment should be done on this order.


                        - **true**: The recurring payment will be enabled if the payment provider support this
                        and coupon/product allow to do the recurring payment.

                        - **false**: The recurring payment will not be enabled. For one-time purchase needs to
                        be false.
                    default: true
                    type: boolean
                prepaid:
                    description: |-
                        It informs if the order is prepaid.

                        - **true**:  The order was prepaid. There is no need to do the payment.
                        - **false**: The order is not prepaid.

                        This parameter is optional, in use with `paymentInfo` details.
                    default: false
                    type: boolean
                paymentInfo:
                    description: >-
                        This field is optional, but must be set if `prepaid` = true, otherwise the request
                        will fail. This info is use in creditcard payment via Nets.
                    required:
                        - transactionId
                        - merchantId
                    type: object
                    properties:
                        ticket:
                            description: A ticket is a reference ID for using recurring payment from service provide.
                            maxLength: 128
                            type: string
                        cardNumberMasked:
                            description: Masked card number for display
                            maxLength: 64
                            type: string
                        expMonth:
                            description: Card expiration month
                            maxLength: 2
                            type: string
                        expYear:
                            description: Card expiration year
                            maxLength: 2
                            type: string
                        cardTypeName:
                            description: Card type
                            maxLength: 32
                            type: string
                        transactionId:
                            description: Id for payment transaction.
                            maxLength: 40
                            type: string
                        merchantId:
                            description: Unique ID that identify the payment provider.
                            maxLength: 64
                            type: string
                        ticketMerchantId:
                            description: >-
                                Unique id that identify the payment provider and is used for obtain a
                                `ticket`. If `ticketMerchantId` is not equal to `merchantId` then both have to
                                belong to the same senteravtale.
                            maxLength: 64
                            type: string
                        secure3d:
                            description: |-
                                Used to make VISA/MasterCard transactions with 3D-secure.

                                - **true**: Transaction is verified by Secure3d.
                                - **false**:  Transaction is not verified by Secure3d.
                            type: boolean
                        verificationIdPresent:
                            description: |-
                                Informs if the verification ID is present.

                                - **true**: Verification ID is present.
                                - **false**: Verification ID is not present.
                            type: boolean
                        enrolled:
                            description: |-
                                Informs if the details about the card is enrolled.

                                - **true**: The details about the card is enrolled.
                                - **false**: The details about the card is not enrolled.
                            type: boolean
                paymentInfoKCO:
                    description: >-
                        This field is optional, but must be set if `prepaid`= true and `paymentMethod` = kco,
                        otherwise the request will fail.
                    required:
                        - klarnaReference
                        - klarnaOrderId
                        - merchantId
                    type: object
                    properties:
                        recurringToken:
                            description: >-
                                A recurring token is a reference ID for using recurring payment from service
                                provide. This is only required if `recurring` is true.
                            maxLength: 64
                            type: string
                        klarnaReference:
                            description: Klarna Reference ID
                            maxLength: 12
                            type: string
                        klarnaOrderId:
                            description: The Klarna unique order ID
                            maxLength: 64
                            type: string
                        merchantId:
                            description: Unique ID that identify the payment provider.
                            maxLength: 32
                            type: string
                        cardNumberMasked:
                            nullable: true
                            description: Masked card number for display
                            maxLength: 64
                            type: string
                        cardExpiryDate:
                            nullable: true
                            description: 'Card expiration month and year in format: MM/YYYY'
                            maxLength: 7
                            type: string
                        cardBrand:
                            nullable: true
                            description: Card type name
                            maxLength: 32
                            type: string
                        directBankName:
                            nullable: true
                            description: Bank name for direct debit
                            type: string
                        directAccountNumber:
                            nullable: true
                            description: The account number used for paying by direct debit.
                            type: string
                paymentInfoSmsPay:
                    description: >-
                        This field is optional, but must be set if `paymentMethod` = sms, otherwise the
                        request will fail.
                    required:
                        - transactionId
                        - merchantId
                    type: object
                    properties:
                        phoneNumberMasked:
                            description: >-
                                The phone number used to pay by SMS. A phone number has to follow the
                                telephone number standard [**E.164**](https://en.wikipedia.org/wiki/E.164)
                            maxLength: 20
                            type: string
                        transactionId:
                            description: Id for payment transaction.
                            maxLength: 40
                            type: string
                        merchantId:
                            description: Unique ID that identify the payment provider.
                            maxLength: 32
                            type: string
                paymentInfoPayEx:
                    description: >-
                        This field is optional, but must be set if `paymentMethod` = creditcardPayex,
                        otherwise the request will fail.
                    required:
                        - transactionId
                        - merchantId
                    type: object
                    properties:
                        transactionId:
                            description: Id for payment transaction.
                            maxLength: 12
                            type: string
                        merchantId:
                            description: Unique ID that identify the payment provider.
                            maxLength: 64
                            type: string
                        recurrenceToken:
                            description: >-
                                A recurrence token is a reference ID for using recurring payment from service
                                provide. This is only required if `recurring` is true.
                            maxLength: 12
                            type: string
                        cardDetails:
                            description: Details of the card.
                            type: object
                            properties:
                                cardMaskedPan:
                                    nullable: true
                                    description: Card masked pan.
                                    maxLength: 12
                                    type: string
                                expMonth:
                                    nullable: true
                                    description: 'Card expiration month in format: MM'
                                    maxLength: 2
                                    type: string
                                expYear:
                                    nullable: true
                                    description: 'Card expiration year in format: YYYY'
                                    maxLength: 4
                                    type: string
                                issuingBank:
                                    nullable: true
                                    description: The name of issuing bank.
                                    maxLength: 12
                                    type: string
                                cardBrand:
                                    nullable: true
                                    description: Card brand.
                                    maxLength: 12
                                    type: string
                                isPanEnrolled:
                                    description: |-
                                        Informs if the details about the card are enrolled.

                                        - **true**: The details about the card are enrolled.
                                        - **false**: The details about the card are not enrolled.
                                    type: boolean
                paymentInfoSwishPayEx:
                    description: >-
                        This field is optional, but must be set if `prepaid`= true and `paymentMethod` =
                        swishPayex, otherwise the request will fail.
                    required:
                        - transactionId
                        - merchantId
                        - transactionSaleId
                    type: object
                    properties:
                        transactionId:
                            description: Id for payment transaction generated by Swish
                            maxLength: 255
                            type: string
                        merchantId:
                            description: Unique ID that identify the payment provider.
                            maxLength: 64
                            type: string
                        phoneNumber:
                            description: >-
                                Phone number used for payment. 

                                A phone number has to follow the telephone number standard
                                [**E.164**](https://en.wikipedia.org/wiki/E.164).
                            maxLength: 15
                            type: string
                        transactionSaleId:
                            description: Unique sale transaction id generated by Swish
                            maxLength: 255
                            type: string
                        paymentReference:
                            description: Unique payment reference generated by Swish
                            maxLength: 64
                            type: string
                paymentInfoOther:
                    description: >-
                        This field is optional, but must be set if `paymentMethod` = other, otherwise the
                        request will fail.
                    required:
                        - transactionId
                        - merchantId
                    type: object
                    properties:
                        transactionId:
                            description: Id for payment transaction.
                            maxLength: 12
                            type: string
                        merchantId:
                            description: Unique ID that identify the payment provider.
                            maxLength: 64
                            type: string
                        description:
                            description: Description for payment transaction.
                            maxLength: 64
                            type: string
        CompleteOrderClientMode-request:
            description: ''
            required:
                - orderId
            type: object
            properties:
                orderId:
                    description: Fullfill order with this id.
                    type: integer
                credential:
                    deprecated: true
                    description: |-
                        Credential data - enter value of one of these:   
                        * Email address
                        * Mobile phone number in format [**E.164**](https://en.wikipedia.org/wiki/E.164)
                        * Facebook 
                        * Google Plus 
                        * aID 
                        * Egmont ID 
                        * Coruscant ID 
                        * LRF Media ID 
                        * SPiD 
                        * Vipps
                    maxLength: 60
                    type: string
                credentialType:
                    deprecated: true
                    description: Type of credential.
                    maxLength: 60
                    enum:
                        - phone_mobile
                        - email
                    type: string
                recipient:
                    deprecated: true
                    description: >-
                        Recipient of message sent to user when payment is fulfilled. If field is not set then
                        credential data is used as recipient. Field used when credential is not email/mobile
                        phone number or when recipient has to be different than credential. Email or mobile
                        phone number in format  [**E.164**](https://en.wikipedia.org/wiki/E.164)
                    maxLength: 60
                    type: string
                isSendMessage:
                    deprecated: true
                    description: |-
                        It informs if the message is sent to user when payment is fulfilled.

                        - **true**: The message is sent to user.
                        - **false**: The message is not sent to user.
                    default: true
                    type: boolean
                returnUrl:
                    deprecated: true
                    description: >-
                        Return URL (absolute) used in message, i.e link in message, sent to user when payment
                        is fulfilled.

                        A URL to redirect the user’s browser back to on success (the user will be logged in).
                    type: string
                errorUrl:
                    deprecated: true
                    description: >-
                        Error URL (absolute) used in message, i.e link in message, sent to user when payment
                        is fulfilled.

                        A URL to redirect the user’s browser back to if something goes wrong (the user might
                        not be logged in).
                    type: string
                callbackUrl:
                    deprecated: true
                    description: >-
                        Callback URL (absolute) used when payment is fulfilled. Parameter `fulfillmentStatus`
                        is added to url and method GET is used. Parameter will have one of the following
                        values: 

                        * **success**

                        * **failed**
                    type: string
                linkLifetime:
                    deprecated: true
                    description: Decide how long the link sent to user is valid. Lifetime expressed in hours.
                    default: 12
                    type: integer
                overrideClientId:
                    deprecated: true
                    description: >-
                        This element will override clientId (e.g. no.mediaconnect.test) used in redirect link
                        sent to user. A typically usecase is when a client uses this API on behalf of another
                        client (e.g. a telemarketing bureau). ClientId using API and overrideClientId must
                        have the same handler and partner id. The overrideClientId must exist in ConnectID.
                    type: string
tags:
    -
        name: Address
        description: ''
    -
        name: Category
        description: ''
    -
        name: Customer
        description: ''
    -
        name: Article
        description: ''
    -
        name: Coupon
        description: ''
    -
        name: Fulfillment
        description: Use this API to fulfill an order.
    -
        name: Order
        description: ''
    -
        name: Reward
        description: ''
    -
        name: User
        description: Use this API to assign user to order.
    -
        name: Voucher Coupons
        description: ''
    -
        name: Invoice
        description: ''
    -
        name: InvoiceAddress
        description: ''
    -
        name: Payment
        description: ''
    -
        name: Ticket
        description: Information and functions related to recurring payment tickets.
    -
        name: Consent
        description: >-
            Here are all the new privacy/consent API for new GDPR roles. Here are all api to get users
            consents permision. In addition to follow GDPR, here are also APIs to get the access for user data
            and to erasure private data about the customer.
    -
        name: Permission/Shield
        description: "Permissions/shields exists on three levels: *global*, *enterprise* and *orderType*. This API can be used to get the current permissions and shields for the customer. It may also be used to update the data. \n\n**NB!** Not possible to update on global level. \n\n| **Field**  | **Type** | **Description** |\n| ---------- | -------- | --------------- |\n| global\t   | Level    | Wrapper for global level permission/shield. |\n| enterprise | Level    | Wrapper for enterprise level permission/shield. |\n| orderType\t | Level    | Wrapper for order type level permission/shield.|\n| channel\t   | Channel  | Wrapper for channel. |\n| type\t     | String   | State for the channel. Valid values: *permission*, *shield* and *none*. <br>**Global level does not support permission**.\n| value\t     | String   | Channel code as defined in Connect. |"
    -
        name: Privacy
        description: "Privacy permissions exists on two levels: enterprise and ordertype. This API can be used to get the current privacy permissions the customer. It may also be used to update the data.\n\n| **Field**  | **Type** | **Description** |\n| ---------- | -------- | --------------- |\n| enterprise | Level    | Wrapper for enterprise level permission/shield. |\n| orderType\t | Level    | Wrapper for order type level permission/shield. |\n| purpose\t | String   | Purpose of permission. |"
    -
        name: Complaint
        description: ''
    -
        name: Delivery
        description: Delivery API for extracting basic information about distribute and delivery a given product.
    -
        name: DeliveryStop
        description: ''
    -
        name: Issue
        description: ''
    -
        name: Product
        description: ''
    -
        name: Subscription
        description: ''
    -
        name: Recruitment
        description: ''
    -
        name: RecruitmentCampaign
        description: ''
    -
        name: Access
        description: ''
    -
        name: Credential
        description: ''
    -
        name: Metadata
        description: ''
    -
        name: Profile
        description: ''
    -
        name: External Identity
        description: >-
            The external identity API enables third party identity management systems to work with ConnectID
            API. With the use of this API it will be possible to connect an external id provider system with
            ConnectID and Connect Customer to call all APIs as if ConnectID was used as the id provider. The
            API allows the client to create match between external system id and user/credential in ConnectID.
            It will be possible to match Connect customer number with user in external system.
    -
        name: Message
        description: ''
    -
        name: Statistics
        description: ''
    -
        name: Status
        description: ''
    -
        name: Stock
        description: ''
    -
        name: PayEx
        description: Information and functions related to recurring payment tickets for PayEx.
    -
        name: Vipps
        description: ''
x-tagGroups:
    -
        name: Customer Data
        tags:
            - Address
            - Category
            - Customer
    -
        name: Order Management
        tags:
            - Article
            - Coupon
            - Fulfillment
            - Order
            - Reward
            - User
            - Voucher Coupons
    -
        name: Payment
        tags:
            - Invoice
            - InvoiceAddress
            - PayEx
            - Payment
            - Ticket
            - Vipps
    -
        name: Privacy
        tags:
            - Consent
            - Permission/Shield
            - Privacy
    -
        name: Product & Services
        tags:
            - Complaint
            - Delivery
            - DeliveryStop
            - Issue
            - Product
            - Subscription
    -
        name: Recruitment
        tags:
            - Recruitment
            - RecruitmentCampaign
    -
        name: User Data
        tags:
            - Access
            - Credential
            - Metadata
            - Profile
    -
        name: Diverse
        tags:
            - External Identity
            - Message
            - Statistics
            - Status
            - Stock
